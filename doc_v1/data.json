{
    "project": {
        "name": "phoenix-ui",
        "description": {
            "type": "Buffer",
            "data": [
                60,
                100,
                105,
                118,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                58,
                32,
                45,
                49,
                53,
                112,
                120,
                32,
                45,
                50,
                48,
                112,
                120,
                32,
                49,
                53,
                112,
                120,
                59,
                112,
                97,
                100,
                100,
                105,
                110,
                103,
                58,
                32,
                53,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                32,
                54,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                59,
                98,
                111,
                120,
                45,
                115,
                105,
                122,
                105,
                110,
                103,
                58,
                32,
                98,
                111,
                114,
                100,
                101,
                114,
                45,
                98,
                111,
                120,
                59,
                98,
                97,
                99,
                107,
                103,
                114,
                111,
                117,
                110,
                100,
                45,
                99,
                111,
                108,
                111,
                114,
                58,
                32,
                35,
                51,
                56,
                98,
                55,
                101,
                97,
                59,
                111,
                118,
                101,
                114,
                102,
                108,
                111,
                119,
                58,
                32,
                104,
                105,
                100,
                100,
                101,
                110,
                59,
                116,
                101,
                120,
                116,
                45,
                97,
                108,
                105,
                103,
                110,
                58,
                99,
                101,
                110,
                116,
                101,
                114,
                59,
                32,
                99,
                111,
                108,
                111,
                114,
                58,
                35,
                102,
                102,
                102,
                59,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                104,
                49,
                62,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                60,
                47,
                104,
                49,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                45,
                116,
                111,
                112,
                58,
                49,
                53,
                112,
                120,
                34,
                62,
                229,
                159,
                186,
                228,
                186,
                142,
                82,
                101,
                97,
                99,
                116,
                230,
                161,
                134,
                230,
                158,
                182,
                229,
                174,
                158,
                231,
                142,
                176,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                60,
                47,
                112,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                45,
                116,
                111,
                112,
                58,
                49,
                53,
                112,
                120,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                60,
                97,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                99,
                111,
                108,
                111,
                114,
                58,
                35,
                102,
                102,
                102,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                34,
                62,
                71,
                105,
                116,
                104,
                117,
                98,
                60,
                47,
                97,
                62,
                32,
                124,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                60,
                97,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                99,
                111,
                108,
                111,
                114,
                58,
                35,
                102,
                102,
                102,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                101,
                120,
                97,
                109,
                112,
                108,
                101,
                115,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                34,
                62,
                69,
                120,
                97,
                109,
                112,
                108,
                101,
                115,
                60,
                47,
                97,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                47,
                112,
                62,
                10,
                60,
                47,
                100,
                105,
                118,
                62,
                10,
                60,
                112,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                108,
                101,
                97,
                100,
                34,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                230,
                152,
                175,
                229,
                159,
                186,
                228,
                186,
                142,
                82,
                101,
                97,
                99,
                116,
                230,
                161,
                134,
                230,
                158,
                182,
                229,
                174,
                158,
                231,
                142,
                176,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                229,
                174,
                137,
                232,
                163,
                133,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                50,
                34,
                62,
                10,
                36,
                32,
                110,
                112,
                109,
                32,
                105,
                110,
                115,
                116,
                97,
                108,
                108,
                32,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                32,
                45,
                45,
                115,
                97,
                118,
                101,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                228,
                189,
                191,
                231,
                148,
                168,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                104,
                51,
                62,
                67,
                111,
                109,
                109,
                111,
                110,
                74,
                83,
                32,
                38,
                32,
                69,
                83,
                54,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                47,
                47,
                32,
                67,
                111,
                109,
                109,
                111,
                110,
                74,
                83,
                10,
                118,
                97,
                114,
                32,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                61,
                32,
                114,
                101,
                113,
                117,
                105,
                114,
                101,
                40,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                108,
                105,
                98,
                47,
                66,
                117,
                116,
                116,
                111,
                110,
                39,
                41,
                10,
                47,
                47,
                32,
                69,
                83,
                54,
                10,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                123,
                66,
                117,
                116,
                116,
                111,
                110,
                125,
                32,
                102,
                114,
                111,
                109,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                39,
                10,
                46,
                46,
                46,
                10,
                114,
                101,
                110,
                100,
                101,
                114,
                58,
                32,
                102,
                117,
                110,
                99,
                116,
                105,
                111,
                110,
                40,
                41,
                32,
                123,
                10,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                40,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                112,
                104,
                83,
                116,
                121,
                108,
                101,
                61,
                34,
                105,
                110,
                102,
                111,
                34,
                32,
                112,
                104,
                83,
                105,
                122,
                101,
                61,
                34,
                108,
                103,
                34,
                32,
                97,
                99,
                116,
                105,
                118,
                101,
                38,
                35,
                54,
                50,
                59,
                230,
                140,
                137,
                233,
                146,
                174,
                38,
                35,
                54,
                48,
                59,
                47,
                66,
                117,
                116,
                116,
                111,
                110,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                47,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                41,
                59,
                10,
                125,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                51,
                62,
                66,
                114,
                111,
                119,
                115,
                101,
                114,
                32,
                103,
                108,
                111,
                98,
                97,
                108,
                115,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                38,
                35,
                54,
                48,
                59,
                115,
                99,
                114,
                105,
                112,
                116,
                32,
                115,
                114,
                99,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                100,
                105,
                115,
                116,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                46,
                109,
                105,
                110,
                46,
                106,
                115,
                34,
                38,
                35,
                54,
                50,
                59,
                38,
                35,
                54,
                48,
                59,
                47,
                115,
                99,
                114,
                105,
                112,
                116,
                38,
                35,
                54,
                50,
                59,
                10,
                46,
                46,
                46,
                10,
                114,
                101,
                110,
                100,
                101,
                114,
                58,
                32,
                102,
                117,
                110,
                99,
                116,
                105,
                111,
                110,
                40,
                41,
                32,
                123,
                10,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                40,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                46,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                112,
                104,
                83,
                116,
                121,
                108,
                101,
                61,
                34,
                105,
                110,
                102,
                111,
                34,
                32,
                112,
                104,
                83,
                105,
                122,
                101,
                61,
                34,
                108,
                103,
                34,
                32,
                97,
                99,
                116,
                105,
                118,
                101,
                38,
                35,
                54,
                50,
                59,
                230,
                140,
                137,
                233,
                146,
                174,
                38,
                35,
                54,
                48,
                59,
                47,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                46,
                66,
                117,
                116,
                116,
                111,
                110,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                47,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                41,
                59,
                10,
                125,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                229,
                133,
                182,
                228,
                187,
                150,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                112,
                62,
                229,
                146,
                140,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                34,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                60,
                47,
                97,
                62,
                32,
                40,
                231,
                187,
                132,
                228,
                187,
                182,
                230,
                160,
                183,
                229,
                188,
                143,
                229,
                186,
                147,
                41,
                233,
                133,
                141,
                229,
                144,
                136,
                228,
                189,
                191,
                231,
                148,
                168,
                230,
                156,
                128,
                228,
                189,
                179,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                60,
                104,
                51,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                233,
                187,
                152,
                232,
                174,
                164,
                230,
                143,
                144,
                228,
                190,
                155,
                233,
                152,
                191,
                230,
                179,
                162,
                231,
                189,
                151,
                233,
                187,
                152,
                232,
                174,
                164,
                230,
                160,
                183,
                229,
                188,
                143,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                44,
                229,
                166,
                130,
                230,
                158,
                156,
                233,
                156,
                128,
                232,
                166,
                129,
                73,
                79,
                83,
                230,
                160,
                183,
                229,
                188,
                143,
                229,
                144,
                140,
                230,
                151,
                182,
                229,
                188,
                149,
                229,
                133,
                165,
                115,
                107,
                105,
                110,
                45,
                105,
                111,
                115,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                229,
                141,
                179,
                229,
                143,
                175,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                47,
                47,
                32,
                71,
                108,
                111,
                98,
                97,
                108,
                10,
                38,
                35,
                54,
                48,
                59,
                108,
                105,
                110,
                107,
                32,
                114,
                101,
                108,
                61,
                34,
                115,
                116,
                121,
                108,
                101,
                115,
                104,
                101,
                101,
                116,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                47,
                100,
                105,
                115,
                116,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                34,
                32,
                47,
                38,
                35,
                54,
                50,
                59,
                10,
                47,
                47,
                32,
                97,
                100,
                100,
                32,
                73,
                79,
                83,
                32,
                115,
                107,
                105,
                110,
                10,
                38,
                35,
                54,
                48,
                59,
                108,
                105,
                110,
                107,
                32,
                114,
                101,
                108,
                61,
                34,
                115,
                116,
                121,
                108,
                101,
                115,
                104,
                101,
                101,
                116,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                47,
                100,
                105,
                115,
                116,
                47,
                115,
                107,
                105,
                110,
                45,
                105,
                111,
                115,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                34,
                32,
                47,
                38,
                35,
                54,
                50,
                59,
                10,
                10,
                47,
                47,
                32,
                69,
                83,
                54,
                10,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                47,
                108,
                101,
                115,
                115,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                46,
                108,
                101,
                115,
                115,
                39,
                59,
                10,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                47,
                108,
                101,
                115,
                115,
                47,
                115,
                107,
                105,
                110,
                45,
                105,
                111,
                115,
                46,
                108,
                101,
                115,
                115,
                39,
                59,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                51,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                231,
                179,
                187,
                229,
                136,
                151,
                230,
                143,
                146,
                228,
                187,
                182,
                40,
                229,
                174,
                140,
                229,
                150,
                132,
                228,
                184,
                173,
                46,
                46,
                46,
                41,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                117,
                108,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                112,
                105,
                99,
                107,
                101,
                114,
                34,
                62,
                112,
                104,
                45,
                112,
                105,
                99,
                107,
                101,
                114,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                233,
                128,
                137,
                230,
                139,
                169,
                40,
                230,
                151,
                182,
                233,
                151,
                180,
                227,
                128,
                129,
                229,
                159,
                142,
                229,
                184,
                130,
                231,
                173,
                137,
                41,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                102,
                105,
                108,
                116,
                101,
                114,
                34,
                62,
                112,
                104,
                45,
                102,
                105,
                108,
                116,
                101,
                114,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                228,
                184,
                139,
                230,
                139,
                137,
                231,
                173,
                155,
                233,
                128,
                137,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                99,
                97,
                115,
                99,
                97,
                100,
                101,
                45,
                115,
                101,
                108,
                101,
                99,
                116,
                111,
                114,
                34,
                62,
                112,
                104,
                45,
                99,
                97,
                115,
                99,
                97,
                100,
                101,
                45,
                115,
                101,
                108,
                101,
                99,
                116,
                111,
                114,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                231,
                186,
                167,
                232,
                129,
                148,
                233,
                128,
                137,
                230,
                139,
                169,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                105,
                109,
                97,
                103,
                101,
                45,
                108,
                105,
                115,
                116,
                34,
                62,
                112,
                104,
                45,
                105,
                109,
                97,
                103,
                101,
                45,
                108,
                105,
                115,
                116,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                229,
                155,
                190,
                231,
                137,
                135,
                229,
                136,
                151,
                232,
                161,
                168,
                229,
                177,
                149,
                231,
                164,
                186,
                227,
                128,
                129,
                229,
                162,
                158,
                229,
                136,
                160,
                227,
                128,
                129,
                229,
                133,
                168,
                229,
                177,
                143,
                230,
                159,
                165,
                231,
                156,
                139,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                105,
                109,
                97,
                103,
                101,
                45,
                117,
                112,
                108,
                111,
                97,
                100,
                34,
                62,
                112,
                104,
                45,
                105,
                109,
                97,
                103,
                101,
                45,
                117,
                112,
                108,
                111,
                97,
                100,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                229,
                155,
                190,
                231,
                137,
                135,
                228,
                184,
                138,
                228,
                188,
                160,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                117,
                112,
                108,
                111,
                97,
                100,
                34,
                62,
                112,
                104,
                45,
                117,
                112,
                108,
                111,
                97,
                100,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                230,
                150,
                135,
                228,
                187,
                182,
                228,
                184,
                138,
                228,
                188,
                160,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                115,
                101,
                108,
                101,
                99,
                116,
                111,
                114,
                34,
                62,
                112,
                104,
                45,
                115,
                101,
                108,
                101,
                99,
                116,
                111,
                114,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                230,
                144,
                156,
                231,
                180,
                162,
                231,
                173,
                155,
                233,
                128,
                137,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                115,
                119,
                105,
                112,
                101,
                34,
                62,
                112,
                104,
                45,
                115,
                119,
                105,
                112,
                101,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                229,
                164,
                167,
                229,
                155,
                190,
                230,
                187,
                154,
                229,
                138,
                168,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                45,
                115,
                99,
                114,
                111,
                108,
                108,
                34,
                62,
                112,
                104,
                45,
                115,
                99,
                114,
                111,
                108,
                108,
                60,
                47,
                97,
                62,
                58,
                32,
                229,
                159,
                186,
                228,
                186,
                142,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                231,
                154,
                132,
                96,
                230,
                187,
                154,
                229,
                138,
                168,
                229,
                136,
                183,
                230,
                150,
                176,
                96,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                108,
                105,
                62,
                10,
                60,
                47,
                117,
                108,
                62,
                10,
                10,
                60,
                104,
                51,
                62,
                230,
                142,
                168,
                232,
                141,
                144,
                80,
                67,
                231,
                171,
                175,
                82,
                101,
                97,
                99,
                116,
                32,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                32,
                45,
                32,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                71,
                105,
                116,
                104,
                117,
                98,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                34,
                62,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                62,
                68,
                111,
                99,
                117,
                109,
                101,
                110,
                116,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                47,
                100,
                111,
                99,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                34,
                62,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                47,
                100,
                111,
                99,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                10,
                60,
                104,
                51,
                62,
                230,
                142,
                168,
                232,
                141,
                144,
                73,
                99,
                111,
                110,
                229,
                186,
                147,
                32,
                45,
                32,
                103,
                102,
                115,
                45,
                105,
                99,
                111,
                110,
                115,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                71,
                105,
                116,
                104,
                117,
                98,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                103,
                102,
                115,
                45,
                105,
                99,
                111,
                110,
                115,
                34,
                62,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                103,
                102,
                115,
                45,
                105,
                99,
                111,
                110,
                115,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                62,
                68,
                111,
                99,
                117,
                109,
                101,
                110,
                116,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                103,
                102,
                115,
                45,
                105,
                99,
                111,
                110,
                115,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                34,
                62,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                103,
                102,
                115,
                45,
                105,
                99,
                111,
                110,
                115,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                10,
                60,
                100,
                105,
                118,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                58,
                50,
                53,
                112,
                120,
                32,
                45,
                50,
                48,
                112,
                120,
                32,
                45,
                49,
                53,
                112,
                120,
                59,
                112,
                97,
                100,
                100,
                105,
                110,
                103,
                58,
                53,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                32,
                54,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                59,
                98,
                111,
                120,
                45,
                115,
                105,
                122,
                105,
                110,
                103,
                58,
                98,
                111,
                114,
                100,
                101,
                114,
                45,
                98,
                111,
                120,
                59,
                98,
                97,
                99,
                107,
                103,
                114,
                111,
                117,
                110,
                100,
                45,
                99,
                111,
                108,
                111,
                114,
                58,
                114,
                103,
                98,
                40,
                50,
                51,
                56,
                44,
                50,
                51,
                56,
                44,
                50,
                51,
                56,
                41,
                59,
                116,
                101,
                120,
                116,
                45,
                97,
                108,
                105,
                103,
                110,
                58,
                99,
                101,
                110,
                116,
                101,
                114,
                59,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                108,
                101,
                97,
                100,
                34,
                62,
                228,
                189,
                191,
                231,
                148,
                168,
                228,
                184,
                173,
                233,
                129,
                135,
                229,
                136,
                176,
                233,
                151,
                174,
                233,
                162,
                152,
                232,
                175,
                183,
                230,
                143,
                144,
                228,
                186,
                164,
                105,
                115,
                115,
                117,
                101,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                105,
                115,
                115,
                117,
                101,
                115,
                34,
                62,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                32,
                73,
                115,
                115,
                117,
                101,
                115,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                108,
                101,
                97,
                100,
                34,
                62,
                70,
                111,
                114,
                32,
                231,
                130,
                185,
                232,
                175,
                132,
                231,
                154,
                132,
                229,
                176,
                143,
                228,
                188,
                153,
                228,
                188,
                180,
                44,
                32,
                229,
                143,
                175,
                229,
                164,
                167,
                232,
                177,
                161,
                32,
                64,
                99,
                104,
                101,
                110,
                97,
                105,
                98,
                105,
                110,
                103,
                32,
                230,
                136,
                150,
                32,
                64,
                109,
                105,
                110,
                46,
                120,
                105,
                97,
                111,
                60,
                47,
                112,
                62,
                10,
                60,
                47,
                100,
                105,
                118,
                62,
                10
            ]
        },
        "version": "1.0.0",
        "url": "",
        "navs": [
            {
                "name": "主页",
                "url": "index.html"
            }
        ],
        "isApp": true
    },
    "files": {
        "src/menu/Menu.js": {
            "name": "src/menu/Menu.js",
            "modules": {
                "菜单组件": 1
            },
            "classes": {
                "Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuBody.js": {
            "name": "src/menu/MenuBody.js",
            "modules": {},
            "classes": {
                "MenuBody": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuHeader.js": {
            "name": "src/menu/MenuHeader.js",
            "modules": {},
            "classes": {
                "MenuHeader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuItem.js": {
            "name": "src/menu/MenuItem.js",
            "modules": {},
            "classes": {
                "MenuItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuList.js": {
            "name": "src/menu/MenuList.js",
            "modules": {},
            "classes": {
                "MenuList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuNav.js": {
            "name": "src/menu/MenuNav.js",
            "modules": {},
            "classes": {
                "MenuNav": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/modal/Alert.js": {
            "name": "src/modal/Alert.js",
            "modules": {},
            "classes": {
                "Alert": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/modal/Dialog.js": {
            "name": "src/modal/Dialog.js",
            "modules": {
                "弹出框组件": 1
            },
            "classes": {
                "Dialog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/modal/Prompt.js": {
            "name": "src/modal/Prompt.js",
            "modules": {},
            "classes": {
                "Prompt": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/utils/ClassNameMixin.js": {
            "name": "src/utils/ClassNameMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/MethodMixin.js": {
            "name": "src/utils/MethodMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/PropertyMixin.js": {
            "name": "src/utils/PropertyMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/Tool.js": {
            "name": "src/utils/Tool.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/constants.js": {
            "name": "src/utils/constants.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/extend.js": {
            "name": "src/utils/extend.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/Accordion.js": {
            "name": "src/Accordion.js",
            "modules": {
                "操作类组件": 1
            },
            "classes": {
                "Accordion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Animate.js": {
            "name": "src/Animate.js",
            "modules": {},
            "classes": {
                "Animate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Badge.js": {
            "name": "src/Badge.js",
            "modules": {},
            "classes": {
                "Badge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Button.js": {
            "name": "src/Button.js",
            "modules": {},
            "classes": {
                "Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ButtonGroup.js": {
            "name": "src/ButtonGroup.js",
            "modules": {},
            "classes": {
                "ButtonGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Col.js": {
            "name": "src/Col.js",
            "modules": {},
            "classes": {
                "Col": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Drag.js": {
            "name": "src/Drag.js",
            "modules": {
                "辅助组件": 1
            },
            "classes": {
                "Drag": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/FormGroup.js": {
            "name": "src/FormGroup.js",
            "modules": {},
            "classes": {
                "FormGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Grid.js": {
            "name": "src/Grid.js",
            "modules": {
                "布局组件": 1
            },
            "classes": {
                "Grid": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Icon.js": {
            "name": "src/Icon.js",
            "modules": {},
            "classes": {
                "Icon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ImageList.js": {
            "name": "src/ImageList.js",
            "modules": {},
            "classes": {
                "ImageList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Input.js": {
            "name": "src/Input.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Label.js": {
            "name": "src/Label.js",
            "modules": {
                "标签组件": 1
            },
            "classes": {
                "Label": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/LoadingList.js": {
            "name": "src/LoadingList.js",
            "modules": {},
            "classes": {
                "LoadingList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Popover.js": {
            "name": "src/Popover.js",
            "modules": {},
            "classes": {
                "Popover": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Popup.js": {
            "name": "src/Popup.js",
            "modules": {},
            "classes": {
                "Popup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Row.js": {
            "name": "src/Row.js",
            "modules": {},
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Slider.js": {
            "name": "src/Slider.js",
            "modules": {},
            "classes": {
                "Slider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Star.js": {
            "name": "src/Star.js",
            "modules": {
                "基础组件": 1
            },
            "classes": {
                "Star": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Steps.js": {
            "name": "src/Steps.js",
            "modules": {},
            "classes": {
                "Steps": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Swipe.js": {
            "name": "src/Swipe.js",
            "modules": {},
            "classes": {
                "Swipe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Switch.js": {
            "name": "src/Switch.js",
            "modules": {},
            "classes": {
                "Switch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Tab.js": {
            "name": "src/Tab.js",
            "modules": {},
            "classes": {
                "Tab": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/TableView.js": {
            "name": "src/TableView.js",
            "modules": {},
            "classes": {
                "TableView": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Tabset.js": {
            "name": "src/Tabset.js",
            "modules": {
                "选项卡": 1
            },
            "classes": {
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Textarea.js": {
            "name": "src/Textarea.js",
            "modules": {
                "表单组件": 1
            },
            "classes": {
                "TextArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Toast.js": {
            "name": "src/Toast.js",
            "modules": {},
            "classes": {
                "Toast": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/Whisper.js": {
            "name": "src/Whisper.js",
            "modules": {
                "提示组件": 1
            },
            "classes": {
                "Whisper": 1
            },
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "菜单组件": {
            "name": "菜单组件",
            "submodules": {},
            "classes": {
                "Menu": 1,
                "MenuBody": 1,
                "MenuHeader": 1,
                "MenuItem": 1,
                "MenuList": 1,
                "MenuNav": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/menu/MenuNav.js",
            "line": 6,
            "description": "<h5>菜单组件，主要包括组件:</h5>\n<strong><a href='../classes/Menu.html'>Menu 菜单</a></strong><br/>\n<strong><a href='../classes/MenuHeader.html'>MenuHeader 菜单头部</a></strong><br>\n<strong><a href='../classes/MenuBody.html'>MenuBody 菜单主体</a></strong><br>\n<strong><a href='../classes/MenuNav.html'>MenuNav 菜单导航</a></strong><br>\n<strong><a href='../classes/MenuList.html'>MenuList 菜单导航列表</a></strong><br>\n<strong><a href='../classes/MenuItem.html'>MenuItem 菜单导航列表项</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "弹出框组件": {
            "name": "弹出框组件",
            "submodules": {},
            "classes": {
                "Alert": 1,
                "Dialog": 1,
                "Prompt": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/modal/Prompt.js",
            "line": 11,
            "description": "<h5>弹出框组件，主要包括组件:</h5>\n<strong><a href='../classes/Dialog.html'>Dialog 基础弹框</a></strong><br/>\n<strong><a href='../classes/Alert.html'>Alert弹框</a></strong><br>\n<strong><a href='../classes/Prompt.html'>Prompt弹框</a></strong>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "操作类组件": {
            "name": "操作类组件",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "ImageList": 1,
                "LoadingList": 1,
                "Popup": 1,
                "Slider": 1,
                "Steps": 1,
                "Toast": 1,
                "Accordion": 1,
                "Swipe": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Toast.js",
            "line": 7,
            "description": "<h5>操作类组件，主要包括组件:</h5>\n<strong><a href='../classes/Accordion.html'>Accordion 手风琴</a></strong><br/>\n<strong><a href='../classes/Toast.html'>Toast 飘字</a></strong><br>\n<strong><a href='../classes/Popup.html'>Popup 弹层</a></strong><br>\n<strong><a href='../classes/Slider.html'>Slider 滑动输入条</a></strong><br>\n<strong><a href='../classes/Swipe.html'>Swipe 左滑动</a></strong><br>\n<strong><a href='../classes/Menu.html'>Menu 菜单</a></strong><br>\n<strong><a href='../classes/LoadingList.html'>LoadingList 加载更多</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "辅助组件": {
            "name": "辅助组件",
            "submodules": {},
            "classes": {
                "Drag": 1,
                "Animate": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/Drag.js",
            "line": 6,
            "description": "拖拽组件<br/>\n- 兼容移动端的touch和pc端的mouse事件。\n- 可通过onDrag设置抓取的回调函数, 返回抓取在屏幕上的位置, 分别保存在start和move中, 以x和y的形式展示。\n- 可通过onDrop设置松开瞬间的回调函数, 返回松开时在屏幕上的位置, 保存在end中, 以x和y的形式展示。\n\n示例:\n```code\n    <Drag onDrag={::this.onDrag} onDrop={::this.onDrop} style={{height:0}}>\n        <div className=\"box\" ref={(box)=>{this.box = box}}>Drag</div>\n    </Drag>\n```\n```code\n    onDrag(event,position){\n        this.prePosition = position.start;\n        this.nowPosition = position.move;\n\n        this.distanceX = this.preDistanceX + this.nowPosition.x - this.prePosition.x;\n        this.distanceY = this.preDistanceY + this.nowPosition.y - this.prePosition.y;\n        console.log(this.distanceX, this.distanceY);\n    }\n    onDrop(event,position){\n        this.preDistanceX = this.distanceX;\n        this.preDistanceY = this.distanceY;\n    }\n```"
        },
        "标签组件": {
            "name": "标签组件",
            "submodules": {},
            "classes": {
                "Icon": 1,
                "Badge": 1,
                "Label": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Label.js",
            "line": 14,
            "description": "<h5>标签组件，主要包括组件:</h5>\n<strong><a href='../classes/Label.html'>Label 标签</a></strong><br/>\n<strong><a href='../classes/Badge.html'>Badge 徽章</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "基础组件": {
            "name": "基础组件",
            "submodules": {},
            "classes": {
                "Button": 1,
                "ButtonGroup": 1,
                "Star": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Star.js",
            "line": 16,
            "description": "<h5>基础组件，主要包括:</h5>\n<strong><a href='../classes/Star.html'>Star 星级</a></strong><br/>\n<strong><a href='../classes/Button.html'>Button 按钮</a></strong><br>\n <strong><a href='../classes/ButtonGroup.html'>ButtonGroup 按钮组</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "布局组件": {
            "name": "布局组件",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "Row": 1,
                "TableView": 1,
                "Col": 1,
                "Grid": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/TableView.js",
            "line": 6,
            "description": "<h5>主要栅格化布局组件</h5>\n<strong><a href='../classes/Grid.html'>Grid 外框</a></strong><br>\n<strong><a href='../classes/Row.html'>Row 行排列</a></strong><br>\n<strong><a href='../classes/Col.html'>Col 竖排列</a></strong><br>\n<strong><a href='../classes/TableView.html'>TableView 仿表格组件</a></strong><br>\n<h6>点击以上链接进行相关查看</h6>",
            "itemtype": "main"
        },
        "表单组件": {
            "name": "表单组件",
            "submodules": {},
            "classes": {
                "Input": 1,
                "Switch": 1,
                "FormGroup": 1,
                "TextArea": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Textarea.js",
            "line": 17,
            "description": "<h5>表单组件，主要包括组件:</h5>\n<strong><a href='../classes/Input.html'>Input 文本框/单选框/多选框</a></strong><br/>\n<strong><a href='../classes/Textarea.html'>Textarea 多行文本框</a></strong><br>\n<strong><a href='../classes/FormGroup.html'>FormGroup 表单组</a></strong><br/>\n<strong><a href='../classes/Switch.html'>Switch 开关</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "提示组件": {
            "name": "提示组件",
            "submodules": {},
            "classes": {
                "Popover": 1,
                "Whisper": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Whisper.js",
            "line": 17,
            "description": "<h5>提示模块，主要包括一下两个组件:</h5>\n<strong><a href='../classes/Whisper.html'>Whisper</a></strong><br/>\n<strong><a href='../classes/Popover.html'>Popover</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "选项卡": {
            "name": "选项卡",
            "submodules": {},
            "classes": {
                "Tab": 1,
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/Tabset.js",
            "line": 17,
            "description": "<h5>tab选项卡，主要包括一下两个组件:</h5>\n<strong><a href='../classes/Tabset.html'>tabset</a></strong><br/>\n<strong><a href='../classes/Tab.html'>tab</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        }
    },
    "classes": {
        "Menu": {
            "name": "Menu",
            "shortname": "Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/Menu.js",
            "line": 25,
            "description": "菜单组件<br/>\n- 可通过visible设置菜单初始是否可见，默认不可见。\n- 不设置scrollCeiling时默认菜单不吸顶，设置scrollCeiling为具体数值时表示从当前距离开始吸顶，设置0表示至始至终吸顶。\n- 可通过onMenuChange函数设置菜单打开收起的回调函数。\n\n主要属性和接口：\n- visible:初始展开或收起的状态, 默认false收起。\n- scrollCeiling:设置吸顶的距离, 默认不吸顶, 设置0表示始终吸顶。\n- onMenuChange:菜单打开关闭时的回调函数。 <br/>\n如：\n```code\n    <Menu scrollCeiling={100} visible={true} onMenuChange={(visible)=>{console.log(visible);}}>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            ...\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport classnames from \"classnames\";\n\timport {Menu, Button, Icon, Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            align: 'left',\n\t            width: 40,\n\t            closeButton: false,\n\t            navAlign: 'top',\n\t            activeName: 'index',\n\t            value: 'ha'\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchAlign(){\n\t        let newAlign = \"left\";\n\t\n\t        if(this.state.align == \"left\") newAlign=\"right\";\n\t\n\t        this.setState({\n\t            align: newAlign\n\t        });\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchNavAlign(){\n\t        this.setState({\n\t            navAlign: 'center'\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'menu'\n\t        });\n\t    }\n\t\n\t    // 必需\n\t    setActiveName(name){\n\t        this.setState({\n\t            activeName: name,\n\t            visible: false // 如果需要点击之后关闭false\n\t        });\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    onInputChange(e){\n\t        this.setState({\n\t            value: e.target.value\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} scrollCeiling={100} onMenuChange={::this.onMenuChange}>\n\t                    <Menu.Header align={this.state.align}>Phoenix</Menu.Header>\n\t                    <Menu.Body width={this.state.width} placement={this.state.placement} closeButton={this.state.closeButton}>\n\t                        <Menu.Nav align={this.state.navAlign}>\n\t                            <div>\n\t                                <Input placeholder=\"自定义部分\" value={this.state.value} onChange={::this.onInputChange}/>\n\t                            </div>\n\t                            <Menu.List activeName={this.state.activeName} onMenulistChange={::this.setActiveName}>\n\t                                <Menu.Item name=\"index\" phIcon=\"home\">首页</Menu.Item>\n\t                                <Menu.Item name=\"menu\" href=\"#menu\" phIcon=\"menu\" onChange={::this.onMenuItemChange}>菜单</Menu.Item>\n\t                            </Menu.List>\n\t                        </Menu.Nav>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">scrollCeiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                <Code target=\"menu-scrollceiling\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuChange 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuHeader属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认left) 菜单按钮的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchAlign}>切换align值:默认left</Button>\n\t                </div>\n\t                <Code target=\"menu-header-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchPlacement}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchWidth}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchCloseButton}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuNav属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认top) 导航的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchNavAlign}>改变align值:top->center</Button>\n\t                </div>\n\t                <Code target=\"menu-nav-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchActiveName}>改变activeName值:index->menu</Button>\n\t                </div>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t                <h3 className=\"comp-type\">onMenulistChange 点击菜单项时的回调，函数内必需手动更改activeName值</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuitemChange 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuBody": {
            "name": "MenuBody",
            "shortname": "MenuBody",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuBody.js",
            "line": 9,
            "description": "菜单内容组件<br/>\n- 通过placement设置菜单出现的位置和类型, 可选 [top,left,right,left-full,right-full,full-screen]。\n- 可通过width设置侧边菜单的宽度, 当前placement为top和full-screen不生效。\n- 可通过closeButton来配置菜单主体右上角X按钮是否显示。\n\n主要属性和接口：\n- placement:菜单出现的位置和类型, 默认top。\n- width:侧边菜单的宽度, 当前placement为top和full-screen不生效。\n- closeButton:菜单主体右上角X按钮是否显示, 默认不显示。<br/>\n如：\n```code\n    <Menu>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body width={60} placement=\"left\" closeButton>\n            ...\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport classnames from \"classnames\";\n\timport {Menu, Button, Icon, Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            align: 'left',\n\t            width: 40,\n\t            closeButton: false,\n\t            navAlign: 'top',\n\t            activeName: 'index',\n\t            value: 'ha'\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchAlign(){\n\t        let newAlign = \"left\";\n\t\n\t        if(this.state.align == \"left\") newAlign=\"right\";\n\t\n\t        this.setState({\n\t            align: newAlign\n\t        });\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchNavAlign(){\n\t        this.setState({\n\t            navAlign: 'center'\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'menu'\n\t        });\n\t    }\n\t\n\t    // 必需\n\t    setActiveName(name){\n\t        this.setState({\n\t            activeName: name,\n\t            visible: false // 如果需要点击之后关闭false\n\t        });\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    onInputChange(e){\n\t        this.setState({\n\t            value: e.target.value\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} scrollCeiling={100} onMenuChange={::this.onMenuChange}>\n\t                    <Menu.Header align={this.state.align}>Phoenix</Menu.Header>\n\t                    <Menu.Body width={this.state.width} placement={this.state.placement} closeButton={this.state.closeButton}>\n\t                        <Menu.Nav align={this.state.navAlign}>\n\t                            <div>\n\t                                <Input placeholder=\"自定义部分\" value={this.state.value} onChange={::this.onInputChange}/>\n\t                            </div>\n\t                            <Menu.List activeName={this.state.activeName} onMenulistChange={::this.setActiveName}>\n\t                                <Menu.Item name=\"index\" phIcon=\"home\">首页</Menu.Item>\n\t                                <Menu.Item name=\"menu\" href=\"#menu\" phIcon=\"menu\" onChange={::this.onMenuItemChange}>菜单</Menu.Item>\n\t                            </Menu.List>\n\t                        </Menu.Nav>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">scrollCeiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                <Code target=\"menu-scrollceiling\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuChange 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuHeader属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认left) 菜单按钮的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchAlign}>切换align值:默认left</Button>\n\t                </div>\n\t                <Code target=\"menu-header-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchPlacement}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchWidth}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchCloseButton}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuNav属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认top) 导航的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchNavAlign}>改变align值:top->center</Button>\n\t                </div>\n\t                <Code target=\"menu-nav-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchActiveName}>改变activeName值:index->menu</Button>\n\t                </div>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t                <h3 className=\"comp-type\">onMenulistChange 点击菜单项时的回调，函数内必需手动更改activeName值</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuitemChange 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuHeader": {
            "name": "MenuHeader",
            "shortname": "MenuHeader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuHeader.js",
            "line": 8,
            "description": "菜单头部组件<br/>\n- 通过align设置菜单按钮的位置, 可选[left, right]。\n\n主要属性和接口：\n- align:设置菜单按钮的位置,默认left。 <br/>\n如：\n```code\n    <Menu>\n        <Menu.Header align=\"right\">\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            ...\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport classnames from \"classnames\";\n\timport {Menu, Button, Icon, Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            align: 'left',\n\t            width: 40,\n\t            closeButton: false,\n\t            navAlign: 'top',\n\t            activeName: 'index',\n\t            value: 'ha'\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchAlign(){\n\t        let newAlign = \"left\";\n\t\n\t        if(this.state.align == \"left\") newAlign=\"right\";\n\t\n\t        this.setState({\n\t            align: newAlign\n\t        });\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchNavAlign(){\n\t        this.setState({\n\t            navAlign: 'center'\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'menu'\n\t        });\n\t    }\n\t\n\t    // 必需\n\t    setActiveName(name){\n\t        this.setState({\n\t            activeName: name,\n\t            visible: false // 如果需要点击之后关闭false\n\t        });\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    onInputChange(e){\n\t        this.setState({\n\t            value: e.target.value\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} scrollCeiling={100} onMenuChange={::this.onMenuChange}>\n\t                    <Menu.Header align={this.state.align}>Phoenix</Menu.Header>\n\t                    <Menu.Body width={this.state.width} placement={this.state.placement} closeButton={this.state.closeButton}>\n\t                        <Menu.Nav align={this.state.navAlign}>\n\t                            <div>\n\t                                <Input placeholder=\"自定义部分\" value={this.state.value} onChange={::this.onInputChange}/>\n\t                            </div>\n\t                            <Menu.List activeName={this.state.activeName} onMenulistChange={::this.setActiveName}>\n\t                                <Menu.Item name=\"index\" phIcon=\"home\">首页</Menu.Item>\n\t                                <Menu.Item name=\"menu\" href=\"#menu\" phIcon=\"menu\" onChange={::this.onMenuItemChange}>菜单</Menu.Item>\n\t                            </Menu.List>\n\t                        </Menu.Nav>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">scrollCeiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                <Code target=\"menu-scrollceiling\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuChange 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuHeader属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认left) 菜单按钮的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchAlign}>切换align值:默认left</Button>\n\t                </div>\n\t                <Code target=\"menu-header-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchPlacement}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchWidth}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchCloseButton}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuNav属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认top) 导航的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchNavAlign}>改变align值:top->center</Button>\n\t                </div>\n\t                <Code target=\"menu-nav-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchActiveName}>改变activeName值:index->menu</Button>\n\t                </div>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t                <h3 className=\"comp-type\">onMenulistChange 点击菜单项时的回调，函数内必需手动更改activeName值</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuitemChange 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuItem": {
            "name": "MenuItem",
            "shortname": "MenuItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuItem.js",
            "line": 8,
            "description": "菜单导航列表项组件<br/>\n- 可通过phIcon设置菜单项名称前符号的类型，具体可以参考[gfs-icons](https://future-team.github.io/gfs-icons/index.html)。 \n- 可通过href设置菜单项的跳转地址，可不设置，自定义回调函数onMenuitemChange。\n- 可通过name设置菜单项的唯一标识，对应MenuList的activeName。\n- 通过onMenuitemChange设置点击菜单项时的回调。\n\n主要属性和接口：\n- phIcon:菜单项名称前符号的类型，不设置时默认没有符号。 \n- href:菜单项的跳转地址，默认null。\n- name:菜单项的唯一标识。\n- onMenuitemChange:点击菜单项时的回调。<br/>\n如：\n```code\n    <Menu>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            <Menu.Nav>\n                 <Menu.List activeName={this.state.activeName} onMenulistChange={(name)=>{this.setState({activeName:name})}}>\n                     <Menu.Item name=\"home\" href=\"#index\" phIcon=\"home\" onMenuitemChange={(name)=>{console.log(name);}}>首页</Menu.Item>\n                 </Menu.List>\n             </Menu.Nav>\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.4.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport classnames from \"classnames\";\n\timport {Menu, Button, Icon, Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            align: 'left',\n\t            width: 40,\n\t            closeButton: false,\n\t            navAlign: 'top',\n\t            activeName: 'index',\n\t            value: 'ha'\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchAlign(){\n\t        let newAlign = \"left\";\n\t\n\t        if(this.state.align == \"left\") newAlign=\"right\";\n\t\n\t        this.setState({\n\t            align: newAlign\n\t        });\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchNavAlign(){\n\t        this.setState({\n\t            navAlign: 'center'\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'menu'\n\t        });\n\t    }\n\t\n\t    // 必需\n\t    setActiveName(name){\n\t        this.setState({\n\t            activeName: name,\n\t            visible: false // 如果需要点击之后关闭false\n\t        });\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    onInputChange(e){\n\t        this.setState({\n\t            value: e.target.value\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} scrollCeiling={100} onMenuChange={::this.onMenuChange}>\n\t                    <Menu.Header align={this.state.align}>Phoenix</Menu.Header>\n\t                    <Menu.Body width={this.state.width} placement={this.state.placement} closeButton={this.state.closeButton}>\n\t                        <Menu.Nav align={this.state.navAlign}>\n\t                            <div>\n\t                                <Input placeholder=\"自定义部分\" value={this.state.value} onChange={::this.onInputChange}/>\n\t                            </div>\n\t                            <Menu.List activeName={this.state.activeName} onMenulistChange={::this.setActiveName}>\n\t                                <Menu.Item name=\"index\" phIcon=\"home\">首页</Menu.Item>\n\t                                <Menu.Item name=\"menu\" href=\"#menu\" phIcon=\"menu\" onChange={::this.onMenuItemChange}>菜单</Menu.Item>\n\t                            </Menu.List>\n\t                        </Menu.Nav>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">scrollCeiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                <Code target=\"menu-scrollceiling\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuChange 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuHeader属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认left) 菜单按钮的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchAlign}>切换align值:默认left</Button>\n\t                </div>\n\t                <Code target=\"menu-header-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchPlacement}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchWidth}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchCloseButton}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuNav属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认top) 导航的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchNavAlign}>改变align值:top->center</Button>\n\t                </div>\n\t                <Code target=\"menu-nav-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchActiveName}>改变activeName值:index->menu</Button>\n\t                </div>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t                <h3 className=\"comp-type\">onMenulistChange 点击菜单项时的回调，函数内必需手动更改activeName值</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuitemChange 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuList": {
            "name": "MenuList",
            "shortname": "MenuList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuList.js",
            "line": 8,
            "description": "菜单导航列表组件<br/>\n- 通过activeName设置当前导航选中的菜单项， 必需。\n- 通过onMenulistChange函数设置点击菜单项时的回调，函数内必需手动更改activeName值，必需。\n\n主要属性和接口：\n- activeName:设置当前导航选中的菜单项,默认null。 \n- onMenulistChange:点击菜单项时的回调。 <br/>\n如：\n```code\n    <Menu>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            <Menu.Nav>\n                 <Menu.List activeName={this.state.activeName} onMenulistChange={(name)=>{this.setState({activeName:name})}}>\n                     ...\n                 </Menu.List>\n             </Menu.Nav>\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.4.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport classnames from \"classnames\";\n\timport {Menu, Button, Icon, Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            align: 'left',\n\t            width: 40,\n\t            closeButton: false,\n\t            navAlign: 'top',\n\t            activeName: 'index',\n\t            value: 'ha'\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchAlign(){\n\t        let newAlign = \"left\";\n\t\n\t        if(this.state.align == \"left\") newAlign=\"right\";\n\t\n\t        this.setState({\n\t            align: newAlign\n\t        });\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchNavAlign(){\n\t        this.setState({\n\t            navAlign: 'center'\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'menu'\n\t        });\n\t    }\n\t\n\t    // 必需\n\t    setActiveName(name){\n\t        this.setState({\n\t            activeName: name,\n\t            visible: false // 如果需要点击之后关闭false\n\t        });\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    onInputChange(e){\n\t        this.setState({\n\t            value: e.target.value\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} scrollCeiling={100} onMenuChange={::this.onMenuChange}>\n\t                    <Menu.Header align={this.state.align}>Phoenix</Menu.Header>\n\t                    <Menu.Body width={this.state.width} placement={this.state.placement} closeButton={this.state.closeButton}>\n\t                        <Menu.Nav align={this.state.navAlign}>\n\t                            <div>\n\t                                <Input placeholder=\"自定义部分\" value={this.state.value} onChange={::this.onInputChange}/>\n\t                            </div>\n\t                            <Menu.List activeName={this.state.activeName} onMenulistChange={::this.setActiveName}>\n\t                                <Menu.Item name=\"index\" phIcon=\"home\">首页</Menu.Item>\n\t                                <Menu.Item name=\"menu\" href=\"#menu\" phIcon=\"menu\" onChange={::this.onMenuItemChange}>菜单</Menu.Item>\n\t                            </Menu.List>\n\t                        </Menu.Nav>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">scrollCeiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                <Code target=\"menu-scrollceiling\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuChange 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuHeader属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认left) 菜单按钮的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchAlign}>切换align值:默认left</Button>\n\t                </div>\n\t                <Code target=\"menu-header-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchPlacement}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchWidth}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchCloseButton}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuNav属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认top) 导航的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchNavAlign}>改变align值:top->center</Button>\n\t                </div>\n\t                <Code target=\"menu-nav-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchActiveName}>改变activeName值:index->menu</Button>\n\t                </div>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t                <h3 className=\"comp-type\">onMenulistChange 点击菜单项时的回调，函数内必需手动更改activeName值</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuitemChange 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuNav": {
            "name": "MenuNav",
            "shortname": "MenuNav",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuNav.js",
            "line": 6,
            "description": "菜单导航组件<br/>\n- 通过align设置菜单导航部分的位置, 可选[top,center,bottom]。\n\n主要属性和接口：\n- align:设置菜单导航部分的位置,默认top。 <br/>\n如：\n```code\n    <Menu>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body width={60}>\n            <Menu.Nav align=\"center\">\n                 ...\n             </Menu.Nav>\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.4.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport classnames from \"classnames\";\n\timport {Menu, Button, Icon, Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            align: 'left',\n\t            width: 40,\n\t            closeButton: false,\n\t            navAlign: 'top',\n\t            activeName: 'index',\n\t            value: 'ha'\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchAlign(){\n\t        let newAlign = \"left\";\n\t\n\t        if(this.state.align == \"left\") newAlign=\"right\";\n\t\n\t        this.setState({\n\t            align: newAlign\n\t        });\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchNavAlign(){\n\t        this.setState({\n\t            navAlign: 'center'\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'menu'\n\t        });\n\t    }\n\t\n\t    // 必需\n\t    setActiveName(name){\n\t        this.setState({\n\t            activeName: name,\n\t            visible: false // 如果需要点击之后关闭false\n\t        });\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    onInputChange(e){\n\t        this.setState({\n\t            value: e.target.value\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} scrollCeiling={100} onMenuChange={::this.onMenuChange}>\n\t                    <Menu.Header align={this.state.align}>Phoenix</Menu.Header>\n\t                    <Menu.Body width={this.state.width} placement={this.state.placement} closeButton={this.state.closeButton}>\n\t                        <Menu.Nav align={this.state.navAlign}>\n\t                            <div>\n\t                                <Input placeholder=\"自定义部分\" value={this.state.value} onChange={::this.onInputChange}/>\n\t                            </div>\n\t                            <Menu.List activeName={this.state.activeName} onMenulistChange={::this.setActiveName}>\n\t                                <Menu.Item name=\"index\" phIcon=\"home\">首页</Menu.Item>\n\t                                <Menu.Item name=\"menu\" href=\"#menu\" phIcon=\"menu\" onChange={::this.onMenuItemChange}>菜单</Menu.Item>\n\t                            </Menu.List>\n\t                        </Menu.Nav>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">scrollCeiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                <Code target=\"menu-scrollceiling\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuChange 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuHeader属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认left) 菜单按钮的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchAlign}>切换align值:默认left</Button>\n\t                </div>\n\t                <Code target=\"menu-header-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchPlacement}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchWidth}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchCloseButton}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuNav属性</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认top) 导航的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchNavAlign}>改变align值:top->center</Button>\n\t                </div>\n\t                <Code target=\"menu-nav-align\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={::this.switchActiveName}>改变activeName值:index->menu</Button>\n\t                </div>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t                <h3 className=\"comp-type\">onMenulistChange 点击菜单项时的回调，函数内必需手动更改activeName值</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">onMenuitemChange 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "Alert": {
            "name": "Alert",
            "shortname": "Alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "弹出框组件",
            "namespace": "",
            "file": "src/modal/Alert.js",
            "line": 10,
            "description": "Alert组件<br/>\n- 由于弹框的显示操作在组件以外, 所以需要在使用时自定义`visible`、`onClose`函数。\n- 可通过title设置弹出框标题，content设置内容，buttons设置尾部按钮。(相对Dialog新增参数)\n- 默认有[确定]1个按钮，点击[确定]默认的执行函数是onClose直接关闭。\n- 通过visible设置弹框是否显示, 可选true/false, 必需。\n- 可通过onClose配置点击弹框阴影部分以及弹框右上角X按钮来关闭弹框。\n- 可通过closeButton来配置弹框右上角X按钮是否显示, 默认不显示。\n- 默认传了onClose之后阴影部分就具备点击关闭弹框的按钮, 如果需要去掉该功能需要额外传shadowDisabled作为标识。\n\n主要属性和接口：\n- title:弹框的标题，必需。\n- content:弹框的内容，必需。\n- buttons:尾部按钮的内容，必需是数组的形式，text标识填充的问题，phStyle表示主题，onHandle表示点击的回调，otherProps传递按钮的其他属性，如{active:true, block:true, hollow: true}。\n- visible:弹框是否显示标识, 默认false不可见。\n- onClose:关闭弹框的功能函数。\n- closeButton:右上角关闭按钮是否显示的标识, 默认不显示。\n- shadowDisabled:阴影部分是否可点击关闭按钮, 默认传了onClose函数就可以关闭。\n\n示例:\n```code\n     const buttons = [\n           {text: \"取消\", phStyle: \"gray\", otherProps: {hollow: true}}, // text默认\"确定\", phStyle默认primary，onHandle默认onClose\n           {text: \"确定\", onHandle: this.onConfirm}\n       ];\n       ...\n     <Alert closeButton shadowDisabled visible={this.state.visible} onClose={::this.onClose.bind(this,'visible')} \n         title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons} />\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.5.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Alert, Button} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class alert extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible1: false,\n\t            visible2: false,\n\t            visible3: false,\n\t            visible4: false\n\t        }\n\t    }\n\t\n\t    onClose(key){\n\t        let o = {};\n\t        o[key] = false;\n\t        this.setState(o);\n\t    }\n\t\n\t    onConfirm(key){\n\t        this.onClose(key);\n\t    }\n\t\n\t    render(){\n\t        const buttons1 = [\n\t            // text默认\"确定\", phStyle默认primary，onHandle默认onClose, otherProps传按钮的属性\n\t            {text: \"取消\", phStyle: \"gray\", otherProps: {hollow: true}}, \n\t            {onHandle: this.onConfirm.bind(this,\"visible2\")}\n\t        ],\n\t            buttons2 = [\n\t            {text: \"按钮一\", otherProps: {hollow: true}},\n\t            {text: \"按钮二\", otherProps: {hollow: true}},\n\t            {text: \"按钮三\", otherProps: {hollow: true}}\n\t        ];\n\t        const content = <p>这里是弹出框的内容...</p>;\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Alert</h2>\n\t                <h3 className=\"comp-type\">title 定义标题; content 定义内容</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible1:true})}}>alert默认状态</Button>\n\t                </div>\n\t                <Alert visible={this.state.visible1} onClose={::this.onClose.bind(this,\"visible1\")} title=\"这是标题\" content={content} />\n\t                <Code target=\"alert\" />\n\t\n\t                <h3 className=\"comp-type\">buttons 定义尾部按钮</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">2个按钮</h3>\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible2:true})}}>自定义按钮buttons</Button>\n\t                    <h3 className=\"comp-tip\">多个按钮</h3>\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible3:true})}}>自定义按钮buttons</Button>\n\t                </div>\n\t                <Alert visible={this.state.visible2} onClose={::this.onClose.bind(this,\"visible2\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons1} />\n\t                <Alert visible={this.state.visible3} onClose={::this.onClose.bind(this,\"visible3\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons2} />\n\t                <Code target=\"alert-buttons\" />\n\t\n\t                <h3 className=\"comp-type\">其他属性(visible、onClose、closeButton、shadowDisabled)参照<a href=\"#/dialog\">Dialog</a>组件</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible4:true})}}>完整案例</Button>\n\t                </div>\n\t                <Alert visible={this.state.visible4} onClose={::this.onClose.bind(this,\"visible4\")} closeButton shadowDisabled\n\t                    title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons1} />\n\t                <Code target=\"alert-whole\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/alert"
            ],
            "isApp": true,
            "show": true
        },
        "Dialog": {
            "name": "Dialog",
            "shortname": "Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "弹出框组件",
            "namespace": "",
            "file": "src/modal/Dialog.js",
            "line": 18,
            "description": "弹框组件<br/>\n- 由于弹框的显示操作在组件以外, 所以需要在使用时自定义`visible`、`onClose`函数。\n- 通过visible设置弹框是否显示, 可选true/false, 必需。\n- 可通过onClose配置点击弹框阴影部分以及弹框右上角X按钮来关闭弹框。\n- 可通过closeButton来配置弹框右上角X按钮是否显示, 默认不显示。\n- 默认传了onClose之后阴影部分就具备点击关闭弹框的按钮, 如果需要去掉该功能需要额外传shadowDisabled作为标识。\n\n主要属性和接口：\n- visible:弹框是否显示标识, 默认false不可见<br/>\n- onClose:关闭弹框的功能函数<br/>\n- closeButton:右上角关闭按钮是否显示的标识, 默认不显示<br/>\n- shadowDisabled:阴影部分是否可点击关闭按钮, 默认传了onClose函数就可以关闭<br/>\n\n示例:\n```code\n    <Dialog visible={this.state.visible} onClose={::this.onClose} closeButton shadowDisabled>\n        <Dialog.Title>标题标题</Dialog.Title>\n        <Dialog.Body>\n            <p>可自定义表格内容</p>\n        </Dialog.Body>\n        <Dialog.Footer>\n            <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={::this.onClose}>取消</Button>\n        </Dialog.Footer>\n    </Dialog>\n```\n```code\n    onShow(){\n        this.setState({\n            visible: true\n        });\n    }\n    onClose(){\n        this.setState({\n            visible: false\n        });\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.4.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {ButtonGroup, Button, Dialog} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class dialog extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible1: false,\n\t            visible2: false,\n\t            visible3: false\n\t        }\n\t    }\n\t\n\t    onShow(key){\n\t        let o = {};\n\t        o[key] = true;\n\t        this.setState(o);\n\t    }\n\t\n\t    onClose(key){\n\t        let o = {};\n\t        o[key] = false;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Dialog</h2>\n\t                <h3 className=\"comp-type\">visible(默认false) 弹框是否可见，必需<br/>onClose 关闭弹框的执行函数</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={::this.onShow.bind(this,\"visible1\")}>dialog1</Button>\n\t                </div>\n\t                <Dialog visible={this.state.visible1} onClose={::this.onClose.bind(this,\"visible1\")}>\n\t                    <Dialog.Title>标题1</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer>\n\t                        <ButtonGroup>\n\t                            <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={::this.onClose.bind(this,\"visible1\")}>取消</Button>\n\t                            <Button hollow phSize=\"lg\" onClick={::this.onClose.bind(this,\"visible1\")}>确定</Button>\n\t                        </ButtonGroup> \n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t                <Code target=\"dialog-onclose\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton(默认不显示) 是否显示弹框左上角关闭按钮</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={::this.onShow.bind(this,\"visible2\")}>dialog2</Button>\n\t                </div>\n\t                <Dialog visible={this.state.visible2} onClose={::this.onClose.bind(this,\"visible2\")} closeButton>\n\t                    <Dialog.Title>标题2</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer>\n\t                        <ButtonGroup>\n\t                            <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={::this.onClose.bind(this,\"visible2\")}>取消</Button>\n\t                            <Button phSize=\"lg\" onClick={::this.onClose.bind(this,\"visible2\")}>确定</Button>\n\t                        </ButtonGroup>\n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t                <Code target=\"dialog-closebutton\" />\n\t\n\t                <h3 className=\"comp-type\">shadowDisabled(默认可关闭) 阴影部分是否可点击关闭弹框</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={::this.onShow.bind(this,\"visible3\")}>dialog3</Button>\n\t                </div>\n\t                <Dialog visible={this.state.visible3} onClose={::this.onClose.bind(this,\"visible3\")} shadowDisabled>\n\t                    <Dialog.Title>标题3</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer> \n\t                        <ButtonGroup>                       \n\t                            <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={::this.onClose.bind(this,\"visible3\")}>取消</Button>\n\t                            <Button phSize=\"lg\" onClick={::this.onClose.bind(this,\"visible3\")}>确定</Button>\n\t                        </ButtonGroup>\n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t                <Code target=\"dialog-shadowdisabled\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/dialog"
            ],
            "isApp": true,
            "show": true
        },
        "Prompt": {
            "name": "Prompt",
            "shortname": "Prompt",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "弹出框组件",
            "namespace": "",
            "file": "src/modal/Prompt.js",
            "line": 11,
            "description": "Prompt组件<br/>\n- 由于弹框的显示操作在组件以外, 所以需要在使用时自定义`visible`、`onClose`函数。\n- 可通过title设置弹出框标题，content设置内容，buttons设置尾部按钮。(相对Dialog新增参数)\n- 按钮默认有[取消, 确定]2个按钮，点击[取消]默认的执行函数是直接关闭，点击[确定]通过传入的onConfirm函数可获取input的value数组，可自行添加回调。。\n- 通过visible设置弹框是否显示, 可选true/false, 必需。\n- 可通过onClose配置点击弹框阴影部分以及弹框右上角X按钮来关闭弹框。\n- 可通过closeButton来配置弹框右上角X按钮是否显示, 默认不显示。\n- 默认传了onClose之后阴影部分就具备点击关闭弹框的按钮, 如果需要去掉该功能需要额外传shadowDisabled作为标识。\n\n主要属性和接口：\n- title:弹框的标题，必需。\n- content:弹框的内容，必需。\n- buttons:尾部按钮的内容，必需是数组的形式，text标识填充的问题，phStyle表示主题，onHandle表示点击按钮的回调，otherProps传递按钮的其他属性，如{active:true, block:true, hollow: true}。\n- onConfirm:点击确定按钮的回调，返回input的value。\n- visible:弹框是否显示标识, 默认false不可见。\n- onClose:关闭弹框的功能函数。\n- closeButton:右上角关闭按钮是否显示的标识, 默认不显示。\n- shadowDisabled:阴影部分是否可点击关闭按钮, 默认传了onClose函数就可以关闭。\n\n示例:\n```code\n     const buttons = [\n           {text: \"取消\", phStyle: \"gray\", otherProps: {hollow: true}}, // text默认\"确定\", phStyle默认primary，onHandle默认onClose\n           {text: \"确定\", onHandle: this.onConfirm}\n       ];\n       ...\n     <Prompt closeButton shadowDisabled visible={this.state.visible} onClose={::this.onClose.bind(this,'visible')} \n         title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons} />\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.5.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Prompt, Button} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class prompt extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible1: false,\n\t            visible2: false,\n\t            visible3: false,\n\t            visible4: false,\n\t            inputName: \"\",\n\t            inputPassword: \"\"\n\t        }\n\t    }\n\t\n\t    onClose(key){\n\t        let o = {};\n\t        o[key] = false;\n\t        this.setState(o);\n\t    }\n\t\n\t    onConfirm(valueArr){ // 返回input值的数组\n\t        console.log(valueArr);\n\t        this.onClose('visible2');\n\t    }\n\t\n\t    onUserNameChange(userName){\n\t        console.log(userName);\n\t    }\n\t\n\t    onPasswordChange(password){\n\t        console.log(password);\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t             // text默认\"确定\", phStyle默认primary，onHandle默认onClose, otherProps传按钮的属性\n\t            {text: \"取消\", phStyle: \"gray\", otherProps: {hollow: true}, onHandle: this.onConfirm.bind(this)}, \n\t            {text: \"提交\", onHandle: this.onConfirm.bind(this)}\n\t        ];\n\t        const inputs = [ \n\t            // type默认text，其他属性可选，按照正常输入; \n\t            {defaultValue: \"hah\", placeholder: \"用户名\", maxLength: 10, onChange: this.onUserNameChange.bind(this)},\n\t            {type: \"password\", placeholder: \"密码\", onChange: this.onPasswordChange.bind(this)}\n\t        ];\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Prompt</h2>\n\t                <h3 className=\"comp-type\">title 定义标题; content 定义内容</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">默认有[取消, 确定]2个按钮，点击[取消]默认的执行函数是直接关闭，点击[确定]通过传入的onConfirm函数可获取input的value数组，可自行添加回调。</h3>\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible1:true})}}>Prompt默认状态</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible1} onClose={::this.onClose.bind(this,\"visible1\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" \n\t                    onConfirm={(inputValue)=>{ console.log(inputValue); this.onClose(\"visible1\"); }} />\n\t                <Code target=\"prompt\" />\n\t\n\t                <h3 className=\"comp-type\">buttons 定义尾部按钮</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible2:true})}}>自定义按钮buttons</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible2} onClose={::this.onClose.bind(this,\"visible2\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons} />\n\t                <Code target=\"prompt-buttons\" />\n\t     \n\t                <h3 className=\"comp-type\">inputs 定义内容区域文本框</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible3:true})}}>自定义inputs</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible3} onClose={::this.onClose.bind(this,\"visible3\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" inputs={inputs} \n\t                    onConfirm={(inputValue)=>{ console.log(inputValue); this.onClose(\"visible3\"); }} />\n\t                <Code target=\"prompt-inputs\" />\n\t\n\t                <h3 className=\"comp-type\">其他属性(visible、onClose、closeButton、shadowDisabled)参照<a href=\"#/dialog\">Dialog</a>组件</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible4:true})}}>完整案例</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible4} onClose={::this.onClose.bind(this,\"visible4\")} closeButton shadowDisabled\n\t                    title=\"这是标题\" content=\"这里是弹出框的内容...\" onConfirm={(inputValue)=>{ console.log(inputValue); this.onClose(\"visible4\"); }}  />\n\t                <Code target=\"prompt-whole\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/prompt"
            ],
            "isApp": true,
            "show": true
        },
        "Accordion": {
            "name": "Accordion",
            "shortname": "Accordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Accordion.js",
            "line": 22,
            "description": "手风琴组件<br/>\n- 通过visible设置初始展开或收起的状态, 可选true/false。\n- 可通过onAccordionChange设置展开收起时额外的回调函数。\n- 可通过hideIcon设置隐藏向下的箭头。\n\n主要属性和接口：\n- visible:初始展开或收起的状态, 默认false收起。\n= hideIcon:设置隐藏向下的箭头, 默认false可见。<br/>\n如：\n```code\n    <Accordion visible={true} hideIcon>\n        <Accordion.Header>\n            标题一\n        </Accordion.Header>\n        <Accordion.Body>\n            ...\n        </Accordion.Body>\n    </Accordion>\n```\n- onAccordionChange:点击收起展开的额外的回调执行函数。<br/>\n如：\n```code\n    <Accordion onAccordionChange={(visible)=>{console.log(visible);}}>\n        <Accordion.Header>\n            标题一\n        </Accordion.Header>\n        <Accordion.Body>\n            ...\n        </Accordion.Body>\n    </Accordion>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.4.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport classnames from \"classnames\";\n\timport {Icon, Accordion} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class accordion extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible : false\n\t        }\n\t    }\n\t\n\t    onAccordionChange(visible){\n\t        alert(visible);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Accordion</h2>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Accordion>\n\t                    <Accordion.Header>\n\t                        标题一-收起\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <ul className=\"ph-accordion-list\">\n\t                            <li className=\"ph-accordion-item\">内容一</li>\n\t                        </ul>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Accordion visible={true}>\n\t                    <Accordion.Header>\n\t                        标题二-展开\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <ul className=\"ph-accordion-list\">\n\t                            <li className=\"ph-accordion-item\">内容一</li>\n\t                            <li className=\"ph-accordion-item\">内容二</li>\n\t                        </ul>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Code target=\"accordion-visible\" />\n\t\n\t                <h3 className=\"comp-type\">hideIcon(默认false) 向下的按钮是否可见</h3>\n\t                <Accordion hideIcon>\n\t                    <Accordion.Header>\n\t                        标题一\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <ul className=\"ph-accordion-list\">\n\t                            <li className=\"ph-accordion-item\">内容一</li>\n\t                        </ul>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Code target=\"accordion-hideicon\" />\n\t                \n\t                <h3 className=\"comp-type\">onAccordionChange 展开收起的回调函数</h3>\n\t                <Accordion visible={this.state.visible} onAccordionChange={::this.onAccordionChange}>\n\t                    <Accordion.Header>\n\t                        标题一\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <ul className=\"ph-accordion-list\">\n\t                            <li className=\"ph-accordion-item\">内容一</li>\n\t                            <li className=\"ph-accordion-item\">内容二</li>\n\t                        </ul>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Code target=\"accordion-onaccordionchange\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/accordion"
            ],
            "isApp": true,
            "show": true
        },
        "Animate": {
            "name": "Animate",
            "shortname": "Animate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "辅助组件",
            "namespace": "",
            "file": "src/Animate.js",
            "line": 5,
            "description": "动画外层组件<br/>\n- 使用时需要在子元素增加animated类名实现动画效果, animated定义的是过渡的duration和fill-mode, 默认300ms, 完全可以自定义。\n- 可通过transitionName设置动画名称, 可选fade、slide-top、slide-bottom(还将补充), 默认fade。\n- 可通过transitionEnterTimeout设置进入延迟时间。\n- 可通过transitionLeaveTimeout设置离开延迟时间。\n\n示例:\n```code\n    <Animate className='popup-content' transitionName='slide-top'>\n        {this.renderPopup()}\n    </Animate>\n```\n```code\n    renderPopup(){\n        let {visible,children,className} = this.props;\n        if(visible){\n            return <div {...this.props} className={'popup-main', 'animated', className)}>{children}</div>;\n        }else{\n            return '';\n        }\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Row,Col,Input,Button,Animate} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class animate extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            item: \"\",\n\t            list: [\"看一本书\",\"睡8个小时\"]\n\t        }\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    addTodo(){\n\t        let newList = this.state.list.concat(this.state.item);\n\t        \n\t        this.setState({\n\t            item: \"\",\n\t            list: newList\n\t        });\n\t    }\n\t\n\t    removeTodo(index){\n\t        let newList = this.state.list.slice();\n\t\n\t        newList.splice(index,1);\n\t        this.setState({\n\t            list: newList\n\t        });\n\t    }\n\t\n\t    renderList(){\n\t        const items = this.state.list.map((item,index)=>{\n\t            return <div key={index} className=\"animated\" onClick={::this.removeTodo.bind(this,index)}>{item}</div>;\n\t        });\n\t        return items;\n\t    }\n\t\n\t    render(){\n\t        \n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Animate</h2>\n\t                <h3 className=\"comp-type\">Todo demo</h3>\n\t                <div className=\"content ph-row-no-padding todo-demo\">\n\t                    <Row>\n\t                        <Col className=\"ph-col-80\">\n\t                            <Input type=\"text\" value={this.state.item} onChange={::this.setValue.bind(this,\"item\")} />\n\t                        </Col>\n\t                        <Col>\n\t                            <Button block phSize=\"lg\" phStyle=\"primary\" onClick={::this.addTodo} >Add</Button>\n\t                        </Col>\n\t                    </Row>\n\t                    <Animate transitionName=\"fade\" className=\"animate-field\">\n\t                        {this.renderList()}\n\t                    </Animate>\n\t                </div>\n\t                <br/>\n\t                <Code target=\"animate\" />             \n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/animate"
            ],
            "isApp": true,
            "show": true
        },
        "Badge": {
            "name": "Badge",
            "shortname": "Badge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/Badge.js",
            "line": 5,
            "description": "Badge徽章标记<br/>\n- 主要是用来提供不同颜色的标识, 通过phStyle来改变颜色, 可选primary、warning、danger、info、error、success。\n- 不提供默认回调, 但支持自定义className，事件等操作。\n\n主要属性和接口：\n- phStyle:徽章颜色, 默认primary <br/>\n如：`<Badge phStyle=\"info\">惠</Badge>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Badge} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class badge extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Badge</h2>\n\t                <h3 className=\"comp-type\">phStyle(默认primary) 徽章颜色</h3>\n\t                <div className=\"content\">\n\t\t                <Badge>惠</Badge>\n\t\t                <Badge phStyle=\"success\">惠</Badge>\n\t\t                <Badge phStyle=\"info\">惠</Badge>\n\t                    <Badge phStyle=\"danger\">惠</Badge>\n\t                    <Badge phStyle=\"error\">惠</Badge>\n\t                    <Badge phStyle=\"warning\">惠</Badge>\n\t                </div>\n\t                <Code target=\"badge-phstyle\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/badge"
            ],
            "isApp": true,
            "show": true
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/Button.js",
            "line": 6,
            "description": "按钮组件<br/>\n- 按钮组件提供所有properties中内置的颜色及字体大小样式供选择。\n- 也可以自定义行内样式和className名字定义UI展示。\n- 通过phSize设置大小, 可选sm、md、lg。\n- 通过phStyle选择按钮颜色，可选primary、info、error、warning、danger、link、gray、success。\n- 支持disabled, active属性定义。\n\n主要属性和接口：\n- phSize:按钮大小, 默认sm <br/>\n如: `<Button phSize=\"lg\">button</Button>`\n- phStyle:按钮颜色, 默认primary <br/>\n如: `<Button phStyle=\"info\">button</Button>`\n- block:是否块级显示，默认false <br/>\n如: `<Button block>button</Button>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Button} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class button extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Button</h2>\n\t                <h3 className=\"comp-type\">phSize(默认sm) 按钮大小</h3>\n\t                <div className=\"content\">\n\t                    <Button>默认sm</Button>\n\t                    <Button phSize=\"md\">md</Button>\n\t                    <Button phSize=\"lg\">lg</Button>\n\t                </div>\n\t                <Code target=\"button-phsize\" />\n\t\n\t                <h3 className=\"comp-type\">phStyle(默认primary) 按钮颜色</h3>\n\t                <div className=\"content\">\n\t                    <Button>默认Primary</Button>\n\t                    <Button phStyle=\"info\">Info</Button>\n\t                    <Button phStyle=\"success\">Success</Button>\n\t                    <Button phStyle=\"error\">Error</Button>\n\t                    <Button phStyle=\"danger\">Danger</Button>\n\t                    <Button phStyle=\"warning\">Warning</Button>\n\t                    <Button phStyle=\"gray\">Gray</Button>\n\t                    <Button phStyle=\"link\">Link</Button>\n\t                </div>\n\t                <Code target=\"button-phstyle\" />\n\t\n\t                <h3 className=\"comp-type\">hollow属性</h3>\n\t                <div className=\"content\">\n\t                    <Button hollow>hollow</Button>\n\t                </div>\n\t                <Code target=\"button-phstyle\" />\n\t\n\t                <h3 className=\"comp-type\">block属性</h3>\n\t                <div className=\"content\">\n\t                    <Button block>block</Button>\n\t                </div>\n\t                <Code target=\"button-block\" />\n\t\n\t                <h3 className=\"comp-type\">disabled属性</h3>\n\t                <div className=\"content\">\n\t                    <Button disabled>disabled</Button>\n\t                </div>\n\t                <Code target=\"button-disabled\" />\n\t\n\t                <h3 className=\"comp-type\">active属性</h3>\n\t                <div className=\"content\">\n\t                    <Button active>active</Button>\n\t                </div>\n\t                <Code target=\"button-active\" />\n\t\n\t                <h3 className=\"comp-type\">phIcon属性</h3>\n\t                <div className=\"content\">\n\t                    <Button phIcon=\"search\">phIcon</Button>\n\t                </div>\n\t                <Code target=\"button-phicon\" />\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/button"
            ],
            "isApp": true,
            "show": true
        },
        "ButtonGroup": {
            "name": "ButtonGroup",
            "shortname": "ButtonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/ButtonGroup.js",
            "line": 5,
            "description": "按钮组组件<br/>\n- 按钮组组件配合Button组件,提供了横、竖两种排列方式, 可选justify,tacked。\n- 可通过onButtongroupChange实现点击回调。\n\n主要属性和接口：\n- phType:是否自适应宽度或者垂直排列, 默认justify <br/>\n如:\n```code\n    <ButtonGroup phType=\"tacked\">\n        <Button block>tacked1</Button>\n        <Button block>tacked2</Button>\n    </ButtonGroup>\n```\n- onButtongroupChange:点击按钮组的回调函数。<br/>\n```code\n    <ButtonGroup onButtongroupChange={function(target,html){console.log(target,html);}}>\n        <Button>tacked1</Button>\n        <Button>tacked2</Button>\n    </ButtonGroup>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.4",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {ButtonGroup, Button} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class buttongroup extends Component{\n\t    \n\t    onButtongroupChange(target,html){\n\t        console.log(target);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">ButtonGroup</h2>\n\t                <h3 className=\"comp-type\">phType(默认justify) 自适应宽度或垂直排列</h3>\n\t                <div className=\"content\">\n\t                    <ButtonGroup>\n\t                        <Button>justify1</Button>\n\t                        <Button>justify2</Button>\n\t                        <Button>justify3</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-phtype-justify\" />\n\t                <div className=\"content\">\n\t                    <ButtonGroup phType=\"tacked\">\n\t                        <Button block>tacked1</Button>\n\t                        <Button block>tacked2</Button>\n\t                        <Button block>tacked3</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-phtype-tacked\" />\n\t\n\t                <h3 className=\"comp-type\">onButtongroupChange 点击按钮组回调函数</h3>\n\t                <div className=\"content\">\n\t                    <ButtonGroup onButtongroupChange={this.onButtongroupChange}>\n\t                        <Button>justify1</Button>\n\t                        <Button>justify2</Button>\n\t                        <Button onClick={()=>{console.log(1234455);}}>justify3</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-callback\" />\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/buttongroup"
            ],
            "isApp": true,
            "show": true
        },
        "Col": {
            "name": "Col",
            "shortname": "Col",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/Col.js",
            "line": 5,
            "description": "列组件<br/>\n- 搭配Row行组件可实现自适应宽度布局。\n- 可通过align定义单个项目在交叉轴上的对齐方式, 可选auto、top、bottom、center。\n- 可通过width设置单个项目宽度的百分比, 目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)。\n- 可通过offset设置单个项目左边外边距。\n\n主要属性和接口：\n- align:单个项目在交叉轴上的对齐方式, 默认auto <br/>\n```code\n    <Row>\n        <Col align=\"top\">\n            <div className=\"col-demo\">top</div>\n        </Col>\n        <Col align=\"center\">\n            <div className=\"col-demo\">center</div>\n        </Col>\n        <Col align=\"bottom\">\n            <div className=\"col-demo\">bottom</div>\n        </Col>\n    </Row>\n```\n- width:单个项目的宽度百分比 <br/>\n```code\n    <Row>\n        <Col width=\"15\">\n            <div className=\"col-demo\">15</div>\n        </Col>\n    </Row>\n```\n- offset:单个项目的偏移值,即左边外边距 <br/>\n```code\n    <Row>\n        <Col width=\"20\" offset=\"10\">\n            <div className=\"col-demo\">10</div>\n        </Col>\n    </Row>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Grid,Row,Col} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\"><strong>Row</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认stretch) 容器属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">stretch</h3>\n\t                    <Grid>\n\t                        <Row align=\"stretch\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />stretch<br />stretch</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">baseline</h3>\n\t                    <Grid>\n\t                        <Row align=\"baseline\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline<br />baseline</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top</h3>\n\t                    <Grid>\n\t                        <Row align=\"top\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top<br />top</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">bottom</h3>\n\t                    <Grid>\n\t                        <Row align=\"bottom\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">center</h3>\n\t                    <Grid>\n\t                        <Row align=\"center\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center<br />center</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"row-align\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Col</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认auto) 项目属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">auto</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto auto auto</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col align=\"top\">\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col align=\"center\">\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col align=\"bottom\">\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />center<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-align\" />\n\t\n\t                <h3 className=\"comp-type\">width 设置项目宽度百分比</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"15\">\n\t                                <div className=\"col-demo\">15</div>\n\t                            </Col>\n\t                            <Col width=\"20\">\n\t                                <div className=\"col-demo\">20</div>\n\t                            </Col>\n\t                            <Col width=\"25\">\n\t                                <div className=\"col-demo\">25</div>\n\t                            </Col>\n\t                            <Col width=\"40\">\n\t                                <div className=\"col-demo\">40<br />40<br />40</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-width\" />\n\t\n\t                <h3 className=\"comp-type\">offset(即margin-left) 偏移值</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"20\" offset=\"10\">\n\t                                <div className=\"col-demo\">10</div>\n\t                            </Col>\n\t                            <Col width=\"40\" offset=\"10\" >\n\t                                <div className=\"col-demo\">10<br />10<br />10</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-offset\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/grid"
            ],
            "isApp": true,
            "since": "0.1.0",
            "show": true
        },
        "Drag": {
            "name": "Drag",
            "shortname": "Drag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "辅助组件",
            "namespace": "",
            "file": "src/Drag.js",
            "line": 6,
            "description": "拖拽组件<br/>\n- 兼容移动端的touch和pc端的mouse事件。\n- 可通过onDrag设置抓取的回调函数, 返回抓取在屏幕上的位置, 分别保存在start和move中, 以x和y的形式展示。\n- 可通过onDrop设置松开瞬间的回调函数, 返回松开时在屏幕上的位置, 保存在end中, 以x和y的形式展示。\n\n示例:\n```code\n    <Drag onDrag={::this.onDrag} onDrop={::this.onDrop} style={{height:0}}>\n        <div className=\"box\" ref={(box)=>{this.box = box}}>Drag</div>\n    </Drag>\n```\n```code\n    onDrag(event,position){\n        this.prePosition = position.start;\n        this.nowPosition = position.move;\n\n        this.distanceX = this.preDistanceX + this.nowPosition.x - this.prePosition.x;\n        this.distanceY = this.preDistanceY + this.nowPosition.y - this.prePosition.y;\n        console.log(this.distanceX, this.distanceY);\n    }\n    onDrop(event,position){\n        this.preDistanceX = this.distanceX;\n        this.preDistanceY = this.distanceY;\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from 'react';\n\timport {Drag} from 'phoenix-ui';\n\timport Code from \"./code/code\";\n\t\n\texport default class toast extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.preDistanceX = 0;\n\t        this.preDistanceY = 0;\n\t        this.distanceX = 0;\n\t        this.distanceY = 0;\n\t    }\n\t\n\t    onDrag(event,position){\n\t        this.prePosition = position.start;\n\t        this.nowPosition = position.move;\n\t\n\t        this.distanceX = this.preDistanceX + this.nowPosition.x - this.prePosition.x;\n\t        this.distanceY = this.preDistanceY + this.nowPosition.y - this.prePosition.y;\n\t\n\t        this.setBoxPosition(this.distanceX, this.distanceY);\n\t    }\n\t\n\t    onDrop(event,position){\n\t        this.preDistanceX = this.distanceX;\n\t        this.preDistanceY = this.distanceY;\n\t    }\n\t\n\t    setBoxPosition(x,y){\n\t        this.box.style.webkitTransform = 'translate('+x+'px,'+y+'px)';\n\t        this.box.style.transform = 'translate('+x+'px,'+y+'px)';\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Drag</h2>\n\t                <h3 className=\"comp-type\">Dragable Box demo</h3>\n\t                <Code target=\"drag\" />\n\t                <div className=\"content-drag\">\n\t                    <Drag onDrag={::this.onDrag} onDrop={::this.onDrop} style={{height:0}}>\n\t                        <div className=\"box\" ref={(box)=>{this.box = box}}>Drag</div>\n\t                    </Drag>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/drag"
            ],
            "isApp": true,
            "show": true
        },
        "FormGroup": {
            "name": "FormGroup",
            "shortname": "FormGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/FormGroup.js",
            "line": 6,
            "description": "表单元素布局方式，整齐的排列一组表单元素<br/>\n\n示例:\n- 单列, 如:\n```code\n    <FormGroup>\n        <Row single>\n            <Col>\n                <Input type=\"text\" placeholder=\"姓名\" />\n            </Col>\n        </Row>\n    </FormGroup>\n```\n- 多列, 如:\n```code\n    <FormGroup>\n        <Row>\n            <Col>\n                <label>省</label>\n                <Input type=\"text\" placeholder=\"省\" />\n            </Col>\n            <Col>\n                <label>市</label>\n                <Input type=\"text\" placeholder=\"市\" />\n            </Col>\n        </Row>\n    </FormGroup>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {FormGroup,Row,Col,Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class formgroup extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:\"\"\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">FormGroup</h2>\n\t                <h3 className=\"comp-type\">单列</h3>\n\t                <FormGroup>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"姓名\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row single>\n\t                        <Col>\n\t                            <Input type=\"text\" placeholder=\"用户名\" />\n\t                        </Col>\n\t                    </Row>\n\t                </FormGroup>\n\t                <Code target=\"form-group-single\" />\n\t\n\t                <h3 className=\"comp-type\">多列</h3>\n\t                <FormGroup>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>地址</label>\n\t                            <Input type=\"text\" placeholder=\"地址\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>省</label>\n\t                            <Input type=\"text\" placeholder=\"省\" />\n\t                        </Col>\n\t                        <Col>\n\t                            <label>市</label>\n\t                            <Input type=\"text\" placeholder=\"市\" />\n\t                        </Col>\n\t                    </Row>\n\t                </FormGroup>\n\t                <Code target=\"form-group-multiple\" />\n\t\n\t                <FormGroup>\n\t                    <Row>\n\t                        <Col>\n\t                            <a href=\"javascript:;\" className=\"ph-navigate-right\">\n\t                                <label><span className=\"color-error\">*</span>性别</label>\n\t                                <input type=\"text\" placeholder=\"男/女\" disabled/>\n\t                            </a>\n\t                        </Col>\n\t                    </Row>\n\t                </FormGroup>\n\t                <Code target=\"form-group-a\" />\n\t                    \n\t                <FormGroup>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>兴趣爱好</label>\n\t                            <Input type=\"checkbox\" label=\"篮球\" />\n\t                            <Input type=\"checkbox\" label=\"足球\" />\n\t                            <Input type=\"checkbox\" label=\"乒乓球\" />\n\t                        </Col>\n\t                    </Row>\n\t                    <Row>\n\t                        <Col>\n\t                            <label>喜欢的水果</label>\n\t                            <div style={{textAlign: \"right\"}}>\n\t                                <Input type=\"radio\" label=\"苹果\" name=\"fruit\" />\n\t                                <Input type=\"radio\" label=\"香蕉\" name=\"fruit\" />\n\t                            </div>\n\t                        </Col>\n\t                    </Row>\n\t                </FormGroup>\n\t                <Code target=\"form-group-input\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/formgroup"
            ],
            "isApp": true,
            "show": true
        },
        "Grid": {
            "name": "Grid",
            "shortname": "Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/Grid.js",
            "line": 17,
            "description": "栅格容器组件<br/>\n- 配合Row、Col使用布局。\n- 可自定义className、style等属性以及自定义事件。\n\n示例:\n```code\n    <Grid> //定义栅格\n        <Row> //定义一行\n            <Col> //定义一列，最多12份\n                <div className='col-demo'>内容</div>\n            </Col>\n            <Col>\n                <div className='col-demo'>stretch<br />baseline</div>\n            </Col>\n        </Row>\n    </Grid>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Grid,Row,Col} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\"><strong>Row</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认stretch) 容器属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">stretch</h3>\n\t                    <Grid>\n\t                        <Row align=\"stretch\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />stretch<br />stretch</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">baseline</h3>\n\t                    <Grid>\n\t                        <Row align=\"baseline\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline<br />baseline</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top</h3>\n\t                    <Grid>\n\t                        <Row align=\"top\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top<br />top</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">bottom</h3>\n\t                    <Grid>\n\t                        <Row align=\"bottom\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">center</h3>\n\t                    <Grid>\n\t                        <Row align=\"center\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center<br />center</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"row-align\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Col</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认auto) 项目属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">auto</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto auto auto</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col align=\"top\">\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col align=\"center\">\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col align=\"bottom\">\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />center<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-align\" />\n\t\n\t                <h3 className=\"comp-type\">width 设置项目宽度百分比</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"15\">\n\t                                <div className=\"col-demo\">15</div>\n\t                            </Col>\n\t                            <Col width=\"20\">\n\t                                <div className=\"col-demo\">20</div>\n\t                            </Col>\n\t                            <Col width=\"25\">\n\t                                <div className=\"col-demo\">25</div>\n\t                            </Col>\n\t                            <Col width=\"40\">\n\t                                <div className=\"col-demo\">40<br />40<br />40</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-width\" />\n\t\n\t                <h3 className=\"comp-type\">offset(即margin-left) 偏移值</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"20\" offset=\"10\">\n\t                                <div className=\"col-demo\">10</div>\n\t                            </Col>\n\t                            <Col width=\"40\" offset=\"10\" >\n\t                                <div className=\"col-demo\">10<br />10<br />10</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-offset\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/grid"
            ],
            "isApp": true,
            "show": true
        },
        "Icon": {
            "name": "Icon",
            "shortname": "Icon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/Icon.js",
            "line": 5,
            "description": "Icon<br/>\n- 可通过phIcon来配置不同类型的符号, 可选[查看所有icon类型](http://future-team.github.io/gfs-icons/index.html)。\n- 支持自定义className，事件等操作。\n\n主要属性和接口：\n- phIcon:配置不同类型的符号 <br/>\n如：`<Icon phIcon=\"search\" />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Icon} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class icon extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Icon</h2>\n\t                <h3 className=\"comp-type\">phIcon 符号类型(对应icon的名称)</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">通过phIcon设定</h3>\n\t\t                <Icon phIcon=\"search\" />\n\t                    <h3 className=\"comp-tip\">不用Icon组件的方式</h3>\n\t                    <span className=\"gfs-icon icon-chevron-left\"></span>\n\t                </div>\n\t                <Code target=\"icon-phicon\" />\n\t                <a className=\"code-mark ph-button-link\" href=\"http://future-team.github.io/gfs-icons/index.html\">查看所有icon类型</a>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/icon"
            ],
            "isApp": true,
            "show": true
        },
        "ImageList": {
            "name": "ImageList",
            "shortname": "ImageList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/ImageList.js",
            "line": 6,
            "description": "图片列表组件<br/>\n- 通过images配置图片列表数据，数组格式，其中图片地址对应`image`字段，名称对应`title`字段，描述对应`desp`字段。\n- 通过column设置图片列表的列数，1-8列。\n- 通过titleField设置名称的格式，以`#`代表名称；通过despField设置描述的格式，以`#`代表描述。\n- 通过otherParams设置额外的字段和格式。\n- 通过clickCallback设置点击单个图片块的回调函数，返回当前图片的所有数据。\n- 可以自定义内容children，当有内容时除了column其他属性不起作用。\n\n主要属性和接口：\n- images:图片列表数据，默认[]。<br>\n```code\njson:\n{\n \"data\": [\n     {\n         \"image\": \"http://img5.duitang.com/uploads/item/201602/11/20160211214958_RhdCY.jpeg\",\n         \"title\": \"图1\",\n         \"desp\": \"关于图是一个...\",\n         \"score\": 1\n     },\n     ...\n ]\n}\n...\n<ImageList images={this.state.images} />\n```\n- column:列表的列数，默认1。<br>\n如: `<ImageList column={2}  images={this.state.images} />`\n- titleField:名称的格式，以`#`代表名称，默认\"#\"despField:描述的格式，以`#`代表描述，默认\"#\"。<br>\n如: `<ImageList images={this.state.images} titleField={\"姓名: #\"} despField={\"描述: #\"} />`\n- otherParams:额外的字段和格式，默认{}。<br>\n如: `<ImageList images={this.state.images} otherParams={{\"score\":\"分数: #\"}} />`\n- clickCallback:点击单个图片块的回调函数。<br>\n如: `<ImageList images={this.state.images} clickCallback={(data)=>{console.log(data);}} />`\n- 自定义内容:children，当有内容时除了column其他属性不起作用。\n```code\n<ImageList column={4}>\n {\n     this.state.images.map((data,index)=>{\n         return (\n             <dl key={index}>\n                 <dd>\n                     <p>{data.title}</p>\n                     <p>{data.desp}</p>\n                 </dd>\n                 <dt>\n                     <img src={data.image} alt={data.title} />\n                 </dt>\n             </dl>\n         )\n     })\n }\n</ImageList>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.7.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {ImageList} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\timport {ajax} from \"./utils/tool.js\";\n\t\n\texport default class imagelist extends Component{\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            images: []\n\t        }\n\t\n\t        this.getData(\"./data/post1.json\",0);\n\t    }\n\t\n\t    getData(fileName){ // 获取数据方法，ajax方法在下面定义了\n\t        ajax(fileName).then((json)=>{\n\t            let data = json.data;\n\t\n\t            this.setState({\n\t                images: data\n\t            }); \n\t\n\t        }, (error)=>{// 加载失败\n\t            console.error(\"出错了\", error)\n\t        });\n\t    }\n\t                \n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">ImageList</h2>\n\t                <h3 className=\"comp-type\">images(默认[]) 图片数据<br/>默认地址的字段是image，名称的字段是title，描述的字段是desp</h3>\n\t                <ImageList images={this.state.images} column={4} />\n\t                <Code target=\"imagelist-images\" />               \n\t\n\t                <h3 className=\"comp-type\">column(默认1) 图片列数</h3>\n\t                <ImageList column={2}  images={this.state.images} />\n\t                <Code target=\"imagelist-column\" /> \n\t\n\t                <h3 className=\"comp-type\">titleField(默认#) 姓名格式更改，#代表数值；<br/>despField(默认#) 描述格式更改，#代表数值</h3>\n\t                <ImageList images={this.state.images} column={4} titleField={\"姓名: #\"} despField={\"描述: #\"} />\n\t                <h3 className=\"comp-tip\"> 如果name或desp中有不要的字段，传空字符\"\" </h3>\n\t                <ImageList images={this.state.images} column={4} titleField={\"姓名: #\"} despField={\"\"} />\n\t                <Code target=\"imagelist-format\" /> \n\t                \n\t                <h3 className=\"comp-type\">otherParams(默认{}) 其他增加项</h3>\n\t                <ImageList images={this.state.images} column={4} otherParams={{\"score\":\"分数: #\"}} />\n\t                <Code target=\"imagelist-otherparams\" /> \n\t\n\t                <h3 className=\"comp-type\">clickCallback(默认null) 点击单个图片块的回调函数</h3>\n\t                <ImageList images={this.state.images} column={4} clickCallback={(data)=>{console.log(data);}} />\n\t                <Code target=\"imagelist-clickcallback\" /> \n\t\n\t                <h3 className=\"comp-type\">children(默认无) 内容完全自定义</h3>\n\t                <ImageList column={4}>\n\t                    {\n\t                        this.state.images.map((data,index)=>{\n\t                            return (\n\t                                <dl key={index}>\n\t                                    <dd>\n\t                                        <p className=\"ph-image-title\">{data.title}</p>\n\t                                        <p className=\"ph-image-desp\">{data.desp}</p>\n\t                                    </dd>\n\t                                    <dt>\n\t                                        <img src={data.image} alt={data.title} />\n\t                                    </dt>\n\t                                </dl>\n\t                            )\n\t                        })\n\t                    }\n\t                </ImageList>\n\t                <Code target=\"imagelist-custom\" /> \n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/imagelist"
            ],
            "isApp": true,
            "show": true
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/Input.js",
            "line": 6,
            "description": "input框组件<br/>\n- 使用方式跟原生一致, 支持disabled。\n- 通过type设置input的类型, 可选text,checkbox,radio。\n- 当类型为text时, 可通过defaultValue设置默认值; 可通过value和onChange事件配合使用手动设置输入值。\n- 当类型为checkbox&radio时, 可通过label设置展示的文字。\n- 当类型为checkbox&radio时, 可通过defaultChecked设置默认值; 可通过checked和onChange事件配合使用手动设置输入值。\n\n主要属性和接口：\n- type:input类型, 默认text <br/>\n如：`<Input type=\"checkbox\" />`\n- defaultValue:默认值(text) <br/>\n如：`<Input type=\"text\" defaultValue=\"测试\" />`\n- value&onChange:(text)<br/>\n如：`<Input type=\"text\" value={this.state.value} onChange={()=>{this.setState({value:\"测试\"})}} />`\n- label:展示的文字信息(checkbox&radio), 默认空<br/>\n如：`<Input type=\"checkbox\" label=\"测试\" />`\n- defaultChecked:默认值(checkbox&radio)<br/>\n如：`<Input type=\"checkbox\" defaultChecked={true} />`\n- checked&onChange:(checkbox&radio)<br/>\n如：`<Input type=\"checkbox\" checked={this.state.checked} onChange={()=>{this.setState({checked:false})}} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Input} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name: \"value和onChange配合使用\",\n\t            checkboxChecked: true,\n\t            radioChecked: true\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    onCheckboxChange(){\n\t        this.setState({\n\t            checkboxChecked: !this.state.checkboxChecked\n\t        });\n\t    }\n\t\n\t    onRadioChange(){\n\t        this.setState({\n\t            radioChecked: !this.state.radioChecked\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Input</h2>\n\t                <h3 className=\"comp-type\">type(默认text) 类型</h3>\n\t                <h3 className=\"comp-type\">text 文本框</h3>\n\t                <div className=\"content\">\n\t                    <Input placeholder=\"默认text\" />\n\t                    <Input type=\"text\" defaultValue=\"默认值defaultValue\" placeholder=\"请输入\" />\n\t                    <Input type=\"text\" value={this.state.name} onChange={::this.setValue.bind(this,\"name\")} placeholder=\"请输入\" />\n\t                </div>\n\t                <Code target=\"input-text\" />\n\t\n\t                <h3 className=\"comp-type\">checkbox 多选框</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">默认</h3>\n\t                    <Input type=\"checkbox\" label=\"苹果\" />\n\t                    <h3 className=\"comp-tip\">defaultChecked 初始传值</h3>\n\t                    <Input type=\"checkbox\" label=\"香蕉\" defaultChecked={true} />\n\t                    <h3 className=\"comp-tip\">checked和onChange配合使用</h3>\n\t                    <Input type=\"checkbox\" label=\"西瓜\" checked={this.state.checkboxChecked} onChange={::this.onCheckboxChange} />\n\t                    <h3 className=\"comp-tip\">disabled</h3>\n\t                    <Input type=\"checkbox\" label=\"西瓜\" disabled/>\n\t                </div>\n\t                <Code target=\"input-checkbox\" />\n\t\n\t                <h3 className=\"comp-type\">radio 单选框</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">默认</h3>\n\t                    <Input type=\"radio\" label=\"男\" name=\"sex1\" />\n\t                    <Input type=\"radio\" label=\"女\" name=\"sex1\" />\n\t                    <h3 className=\"comp-tip\">defaultChecked 初始传值</h3>\n\t                    <Input type=\"radio\" label=\"男\" name=\"sex2\" defaultChecked={true}/>\n\t                    <Input type=\"radio\" label=\"女\" name=\"sex2\"/>\n\t                    <h3 className=\"comp-tip\">checked和onChange配合使用</h3>\n\t                    <Input type=\"radio\" label=\"男\" name=\"sex3\" checked={this.state.radioChecked} onChange={::this.onRadioChange}/>\n\t                    <Input type=\"radio\" label=\"女\" name=\"sex3\" checked={!this.state.radioChecked} onChange={::this.onRadioChange}/>\n\t                    <h3 className=\"comp-tip\">disabled</h3>\n\t                    <Input type=\"radio\" label=\"男\" name=\"sex4\" disabled />\n\t                    <Input type=\"radio\" label=\"女\" name=\"sex4\" disabled />\n\t                </div>\n\t                <Code target=\"input-radio\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/input"
            ],
            "isApp": true,
            "show": true
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/Label.js",
            "line": 14,
            "description": "标签组件<br/>\n- 通过phStyle来改变颜色, 可选primary、warning、danger、info、error、success。\n- 通过phSize设置大小, 可选sm、md、lg。\n- 不提供默认回调, 但支持自定义className，事件等操作。\n\n主要属性和接口：\n- phStyle:标签颜色, 默认primary <br/>\n如：`<Label phStyle=\"info\">惠</Label>`\n- phSize:标签大小, 默认sm <br/>\n如：`<Label phSize=\"lg\">惠</Label>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Label} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class Labels extends Component{\n\t    render(){\n\t        return(\n\t        \t<div>\n\t            \t<h2 className=\"comp-title\">Label</h2>\n\t                <h3 className=\"comp-type\">phStyle(默认primary) 标签颜色</h3>\n\t                <div className=\"content\">\n\t\t                <Label>惠</Label>\n\t\t                <Label phStyle=\"success\">惠</Label>\n\t\t                <Label phStyle=\"info\">惠</Label>\n\t\t\t\t\t\t<Label phStyle=\"danger\">惠</Label>\n\t\t                <Label phStyle=\"error\">惠</Label>\n\t\t                <Label phStyle=\"warning\">惠</Label>\n\t                </div>\n\t                <Code target=\"label-phstyle\" />\n\t\n\t                <h3 className=\"comp-type\">phSize(默认sm) 标签大小</h3>\n\t                <div className=\"content\">\n\t\t                <Label>惠</Label>\n\t\t                <Label phSize=\"md\">惠</Label>\n\t\t                <Label phSize=\"lg\">惠</Label>\n\t                </div>\n\t                <Code target=\"label-phsize\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/label"
            ],
            "isApp": true,
            "show": true
        },
        "LoadingList": {
            "name": "LoadingList",
            "shortname": "LoadingList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/LoadingList.js",
            "line": 10,
            "description": "加载更多组件<br/>\n- 通过phMode设置加载更多的模式，有点击按钮加载更多，以及滑到最底端自动加载，可选 [button,auto] 2种参数。\n- 通过loadingStatus设置当前状态，包括 0加载更多, 1加载中, 2数据加载成功, 3数据加载失败, 4没有更多。\n- 可通过loadTips设置按钮文字和状态提示语，默认[\"加载更多\",\"加载中\",\"加载成功\",\"加载失败\",\"没有更多\"]，分别对应loadingStatus的状态。\n- 可通过buttonStyles设置按钮的样式，如果当前phMode为auto设置是看不到效果的，默认[\"primary\",\"info\",\"success\",\"error\",\"gray\"]，分别对应loadingStatus的状态。\n- 可通过onLoading设置点击按钮加载或滑到底部自动加载的回调函数。\n- 可通过onLoadingEnd设置每次加载结束的回调函数。\n\n主要属性和接口：\n- phMode:加载更多的模式，默认auto。\n- loadingStatus:当前状态:0加载更多, 1加载中, 2数据加载成功, 3数据加载失败, 4没有更多，默认1。\n- loadTips:按钮文字和状态提示语，默认[\"加载更多\",\"加载中\",\"加载成功\",\"加载失败\",\"没有更多\"]。\n- buttonStyles:按钮的样式，默认[\"primary\",\"info\",\"success\",\"error\",\"gray\"]。\n- onLoading:点击按钮加载或滑到底部自动加载的回调函数。\n- onLoadingEnd:每次加载结束的回调函数。\n\n示例：\n```code\n <LoadingList phMode=\"auto\" loadingStatus={this.state.loadingStatus} \n     loadTips={[\"点击加载更多\",\"加载中...\",\"加载成功！\",\"加载失败！\",\"没有更多\"]} \n     buttonStyles={[\"primary\",\"gray\",\"success\",\"danger\",\"gray\"]} \n     onLoading={::this.onLoading} onLoadingEnd={::this.onLoadingEnd}>\n         ...\n </LoadingList>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.6.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {LoadingList} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\timport {ajax} from \"./utils/tool.js\";\n\t\n\texport default class loadinglist extends Component{\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.count = 0;\n\t\n\t        this.state = {\n\t            loadingData : [],\n\t            loadingStatus: 1 // 状态：0\"加载更多\",1\"加载中\",2\"加载成功\",3\"加载失败\",4\"没有更多\"\n\t        }\n\t\n\t        this.getData(\"./data/post.json\");\n\t    }\n\t\n\t    getData(fileName){ // 获取数据方法，ajax方法在下面定义了\n\t        ajax(fileName).then((json)=>{\n\t            let data = json.data;\n\t            let loadingData = this.state.loadingData.slice(0);\n\t            for(let i in data){\n\t                loadingData.push(data[i]);\n\t            }\n\t            this.setState({\n\t                loadingData: loadingData,\n\t                loadingStatus: json.final? 4:2\n\t            }); \n\t\n\t        }, (error)=>{// 加载失败\n\t            this.setState({\n\t                loadingStatus: 3\n\t            }); \n\t            console.error(\"出错了\", error)\n\t        });\n\t    }\n\t\n\t    onLoading(){ // 加载更多的执行回调(点击按钮刷新或滑倒屏幕最下方自动刷新)\n\t\n\t        // 如果已经没有更多，不再执行请求数据的操作\n\t        if(this.state.loadingStatus==4) return;\n\t        \n\t        // 点击之后显示加载中的状态\n\t        this.setState({\n\t            loadingStatus: 1\n\t        }); \n\t\n\t        if(this.state.loadingStatus!=3) this.count++; // 请求失败继续请求当前json\n\t        this.getData(\"./data/post\"+this.count+\".json\"); // 开始请求数据\n\t    }\n\t\n\t    onLoadingEnd(){ //  DOM加载完成执行的回调\n\t        if(this.state.loadingStatus==3) return;\n\t\n\t        this.setState({\n\t            loadingStatus: 0\n\t        }); \n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">LoadingList</h2>\n\t                <h3 className=\"comp-type\">phMode(默认auto) 加载更多的模式，可选[auto,button]</h3>\n\t                <h3 className=\"comp-type\">loadingStatus(默认1) 0－加载更多, 1－加载中, 2－数据加载成功, 3－数据加载失败, 4－没有更多</h3>\n\t                <h3 className=\"comp-type\">buttonStyles 按钮的样式，默认[\"primary\",\"info\",\"success\",\"error\",\"gray\"]</h3>\n\t                <h3 className=\"comp-type\">loadTips 按钮文字和状态提示语，默认[\"加载更多\",\"加载中\",\"加载成功\",\"加载失败\",\"没有更多\"]</h3>\n\t                <h3 className=\"comp-type\">onLoading函数 点击按钮加载或滑到底部自动加载的回调函数</h3>\n\t                <h3 className=\"comp-type\">onLoadingEnd函数 每次加载结束的回调函数</h3>\n\t                <LoadingList phMode=\"auto\" loadingStatus={this.state.loadingStatus} \n\t                    loadTips={[\"点击加载更多\",\"加载中...\",\"加载成功！\",\"加载失败！\",\"没有更多\"]} \n\t                    buttonStyles={[\"primary\",\"gray\",\"success\",\"danger\",\"gray\"]} \n\t                    onLoading={::this.onLoading} onLoadingEnd={::this.onLoadingEnd}>\n\t                    <ul>\n\t                        {\n\t                            this.state.loadingData.map((data,index)=>{\n\t                                return (\n\t                                    <li key={index}>\n\t                                        <img src={data.image} alt={data.title} />\n\t                                        <p>{data.title}</p>\n\t                                        <p>{data.desp}</p>\n\t                                    </li>\n\t                                );\n\t                            })\n\t                        }\n\t                    </ul>\n\t                </LoadingList>\n\t                <Code target=\"loadinglist\" />\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/LoadingList"
            ],
            "isApp": true,
            "show": true
        },
        "Popover": {
            "name": "Popover",
            "shortname": "Popover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "提示组件",
            "namespace": "",
            "file": "src/Popover.js",
            "line": 6,
            "description": "气泡组件<br/>\n- 配合倾听者组件Whisper使用, 作为Whisper的target。\n\n示例:\n```code\n    const popover = ( // 可以通过style自定义位置\n        <Popover>\n            <ul className=\"ph-popover-list\">\n                <li className=\"ph-popover-item\">未上线单店</li>\n                <li className=\"ph-popover-item\">未上线连锁店</li>\n            </ul>\n        </Popover>\n    );\n```\n```code\n    <Whisper placement=\"top\" onTargetChange={()=>{console.log('气泡出现消失时额外的执行函数');}} target={popover} distance={10} >Top</Whisper>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Whisper, Popover} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class popover extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onTargetChange(){\n\t        alert(\"气泡出现消失时额外的执行函数\"); \n\t    }\n\t\n\t    render(){\n\t        const popover = ( // 可以通过style自定义位置\n\t            <Popover>\n\t                <ul className=\"ph-popover-list\">\n\t                    <li className=\"ph-popover-item\">未上线单店</li>\n\t                    <li className=\"ph-popover-item\">未上线连锁店</li>\n\t                </ul>\n\t            </Popover>\n\t        );\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Whisper/Popover</h2>\n\t                <h3 className=\"comp-type\">\n\t                    target 显示的目标物<br/>\n\t                    placement(默认bottom) 气泡出现时相对点击对象的位置\n\t                </h3>\n\t                <div className=\"content\">\n\t                    <Whisper target={popover}>Bottom</Whisper>\n\t                    <Whisper placement=\"top\" target={popover}>Top</Whisper>\n\t                    <Whisper placement=\"right\" target={popover}>Right</Whisper>\n\t                    <Whisper placement=\"left\" target={popover}>Left</Whisper>\n\t                    <Whisper placement=\"top right\" target={popover}>Top Right</Whisper>\n\t                    <Whisper placement=\"top left\" target={popover}>Top Left</Whisper>\n\t                    <Whisper placement=\"bottom right\" target={popover}>Bottom Right</Whisper>\n\t                    <Whisper placement=\"bottom left\" target={popover}>Bottom Left</Whisper>\n\t                </div>\n\t                <Code target=\"popover-placement\" />\n\t\n\t                <h3 className=\"comp-type\">distance(默认15) 气泡想对点击对象的距离</h3>\n\t                <div className=\"content\">\n\t                    <Whisper target={popover} distance={10}>10</Whisper>\n\t                    <Whisper target={popover} distance={20}>20</Whisper>\n\t                </div>\n\t                <Code target=\"popover-distance\" />\n\t\n\t                <h3 className=\"comp-type\">onTargetChange 气泡显隐时额外的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Whisper onTargetChange={this.onTargetChange} target={popover}>popover</Whisper>\n\t                </div>\n\t                <Code target=\"popover-ontargetchange\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/popover"
            ],
            "isApp": true,
            "show": true
        },
        "Popup": {
            "name": "Popup",
            "shortname": "Popup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Popup.js",
            "line": 7,
            "description": "弹层组件<br/>\n- 由于弹层的显示操作在组件以外, 所以需要在使用时自定义visible、onShow、onClose函数。\n- 通过align设置碳层弹出的位置, 可选top/bottom。\n- 可通过onClose配置点击弹层阴影部分来关闭弹层。\n\n主要属性和接口：\n- visible:弹层是否显示标识, 默认false不可见\n- onClose:关闭弹层的功能函数\n- align:弹层的位置, 默认top\n\n示例:\n```code\n    <Popup align=\"top\" visible={this.state.visible} onClose={::this.onClose}>\n        <ul className=\"ph-popup-list\">\n            <li className=\"ph-popup-item\" onClick={::this.onClose}>未上线单店</li>\n            <li className=\"ph-popup-item\" onClick={::this.onClose}>未上线连锁店</li>\n        </ul>\n    </Popup>\n```\n```code\n    onShow(){\n        this.setState({\n            visible: true\n        });\n    }\n    onClose(){\n        this.setState({\n            visible: false\n        });\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.4.0",
            "example": [
                "\timport React, { Component } from 'react';\n\timport {Button, Popup} from 'phoenix-ui';\n\timport Code from \"./code/code\";\n\t\n\texport default class popup extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            topVisible: false,\n\t            bottomVisible: false\n\t        }\n\t    }\n\t\n\t    onShowTopPopup(){\n\t        this.setState({\n\t          topVisible: true\n\t        });\n\t    }\n\t\n\t    onCloseTopPopup(){\n\t        this.setState({\n\t          topVisible: false\n\t        });\n\t    }\n\t\n\t    onShowBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: true\n\t        });\n\t    }\n\t\n\t    onCloseBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: false\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Popup</h2>\n\t                <h3 className=\"comp-type\">visible(默认false) 弹层是否可见，必需<br/>onClose 关闭弹层的执行函数<br/>align(默认top) 弹层弹出位置</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.onShowTopPopup}>Top</Button>\n\t                </div>\n\t                <Popup visible={this.state.topVisible} onClose={::this.onCloseTopPopup}>\n\t                    <ul className=\"ph-popup-list\">\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>未上线单店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>未上线连锁店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>在线单店</li>\n\t                        <li className=\"ph-popup-item\" onClick={::this.onCloseTopPopup}>在线连锁店</li>\n\t                    </ul>\n\t                </Popup>\n\t                <Code target=\"popup-top\" />\n\t\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.onShowBottomPopup}>Bottom</Button>\n\t                </div>\n\t                <Popup align=\"bottom\" visible={this.state.bottomVisible} onClose={::this.onCloseBottomPopup}>\n\t                    <div className=\"ph-action-sheet\">\n\t                        <ul>\n\t                            <li className=\"ph-popup-item ph-popup-tip\">确认 删除此作品？</li>\n\t                            <li className=\"ph-popup-item ph-popup-delete\" onClick={::this.onCloseBottomPopup}>删除作品</li>\n\t                        </ul>\n\t                        <div className=\"ph-popup-operate\" onClick={::this.onCloseBottomPopup}>取消</div>\n\t                    </div>\n\t                </Popup>\n\t                <Code target=\"popup-bottom\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/popup"
            ],
            "isApp": true,
            "show": true
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/Row.js",
            "line": 5,
            "description": "行组件<br/>\n- 搭配Col列组件可实现自适应宽度布局。\n- 可通过align定义项目在交叉轴上的对齐方式, 可选top、bottom、center、baseline、stretch。\n\n主要属性和接口：\n- align:项目在交叉轴上的对齐方式, 默认stretch\n```code\n    <Row align=\"baseline\">\n        <Col>\n            <div className='col-demo'>baseline</div>\n        </Col>\n        <Col>\n            <div className='col-demo'>baseline<br />baseline</div>\n        </Col>\n    </Row>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Grid,Row,Col} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\"><strong>Row</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认stretch) 容器属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">stretch</h3>\n\t                    <Grid>\n\t                        <Row align=\"stretch\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />stretch<br />stretch</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">baseline</h3>\n\t                    <Grid>\n\t                        <Row align=\"baseline\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline<br />baseline</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top</h3>\n\t                    <Grid>\n\t                        <Row align=\"top\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top<br />top</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">bottom</h3>\n\t                    <Grid>\n\t                        <Row align=\"bottom\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">center</h3>\n\t                    <Grid>\n\t                        <Row align=\"center\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center<br />center</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"row-align\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Col</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认auto) 项目属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">auto</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto auto auto</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col align=\"top\">\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col align=\"center\">\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col align=\"bottom\">\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />center<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-align\" />\n\t\n\t                <h3 className=\"comp-type\">width 设置项目宽度百分比</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"15\">\n\t                                <div className=\"col-demo\">15</div>\n\t                            </Col>\n\t                            <Col width=\"20\">\n\t                                <div className=\"col-demo\">20</div>\n\t                            </Col>\n\t                            <Col width=\"25\">\n\t                                <div className=\"col-demo\">25</div>\n\t                            </Col>\n\t                            <Col width=\"40\">\n\t                                <div className=\"col-demo\">40<br />40<br />40</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-width\" />\n\t\n\t                <h3 className=\"comp-type\">offset(即margin-left) 偏移值</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"20\" offset=\"10\">\n\t                                <div className=\"col-demo\">10</div>\n\t                            </Col>\n\t                            <Col width=\"40\" offset=\"10\" >\n\t                                <div className=\"col-demo\">10<br />10<br />10</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-offset\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/grid"
            ],
            "isApp": true,
            "since": "0.1.0",
            "show": true
        },
        "Slider": {
            "name": "Slider",
            "shortname": "Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Slider.js",
            "line": 8,
            "description": "滑动输入条组件<br/>\n- 滑动进度条确定当前进度的百分比。\n- 可通过设置process确定初始进度百分比, 范围从0-100。\n- 可通过placement设置当前进度提示框的位置, 可选top/bottoom。\n- 可通过tipStay设置初始和松开按钮时提示是否消失，默认false不显示。\n- 可通过range制定范围，默认0-100，必需是长度为2的数组，第一个数字表示初始，第二个数字表示终点。\n- 可通过showRange判断是否在进度条前后显示范围，默认不显示。\n- 可通过duration设置固定移动的距离，默认1。\n- 可通过onSliderChange设置拖拽进度条松开时的回调函数。\n- 可通过disabled设置进度条只读。\n- 使用Slider前确保父级是有宽度的元素；使用flex需要加一层宽度100%的外壳。\n\n主要属性和接口：\n- process:初始进度百分比, 默认0 <br/>\n如: `<Slider progress={10}/>`\n- placement:进度提示框的位置, 默认top <br/>\n如: `<Slider placement=\"bottom\" />`\n- tipStay:初始和松开按钮时提示是否消失，默认false <br/>\n如: `<Slider tipStay />`\n- range:范围，默认[0,100]。 <br/>\n如: `<Slider range={[20,50]} />`\n- showRange:是否在进度条前后显示范围，默认不显示。 <br/>\n如: `<Slider showRange />`\n- duration:固定移动的距离，默认1。 <br/>\n如: `<Slider duration={20} />`\n- onSliderChange:拖拽进度条松开时的回调函数 <br/>\n如: `<Slider onSliderChange={(progress)=>{console.log(progress);} />`\n- disabled:进度条只读, 不可操作 <br/>\n如: `<Slider disabled/>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Slider} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class slider extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            progress: 50,\n\t            progress1: 20\n\t        }\n\t    }\n\t\n\t    onSliderChange(key, newProgress){ // progress百分比\n\t        let o = {};\n\t        o[key] = newProgress;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Slider</h2>\n\t                <h3 className=\"comp-type\">progress(默认0) 初始进度百分比</h3>\n\t                <div className=\"content\">\n\t                    <Slider progress={25} />\n\t                </div>\n\t                <Code target=\"slider-progress\" />\n\t\n\t                <h3 className=\"comp-type\">placement(默认top) 进度条提示框的位置</h3>\n\t                <div className=\"content\">\n\t                    <Slider />\n\t                    <Slider placement=\"bottom\" />\n\t                </div>\n\t                <Code target=\"slider-placement\" />\n\t\n\t                <h3 className=\"comp-type\">tipStay(默认false) 松开进度条时是否要隐藏提示</h3>\n\t                <div className=\"content\">\n\t                    <Slider tipStay />\n\t                </div>\n\t                <Code target=\"slider-tipstay\" />\n\t\n\t                <h3 className=\"comp-type\">range(默认[0,100]) 范围</h3>\n\t                <div className=\"content\">\n\t                    <Slider range={[50,200]} showRange />\n\t                </div>\n\t                <Code target=\"slider-range\" />\n\t\n\t                <h3 className=\"comp-type\">showRange(默认false) 范围</h3>\n\t                <div className=\"content\">\n\t                    <Slider range={[25,65]} showRange />\n\t                </div>\n\t                <Code target=\"slider-showrange\" />\n\t\n\t                <h3 className=\"comp-type\">duration(默认1) 每次滑动的距离</h3>\n\t                <div className=\"content\">\n\t                    <Slider duration={20} />\n\t                </div>\n\t                <Code target=\"slider-duration\" />\n\t\n\t                <h3 className=\"comp-type\">onSliderChange 拖拽进度条松开时的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Slider progress={this.state.progress} onSliderChange={(newProgress)=>{this.onSliderChange('progress',newProgress);}} />\n\t                    <div style={{textAlign:\"center\",padding:\"1rem 0\"}}>Progress: {this.state.progress}</div>\n\t                </div>\n\t                <Code target=\"slider-onsliderchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\">disabled 进度条只读</h3>\n\t                <div className=\"content\">\n\t                    <Slider disabled progress={10} />\n\t                </div>\n\t                <Code target=\"slider-disabled\" />\n\t\n\t                <h3 className=\"comp-type\">整合</h3>\n\t                <div className=\"content\">\n\t                    <Slider progress={this.state.progress1} onSliderChange={(newProgress)=>{this.onSliderChange('progress1',newProgress);}} \n\t                        range={[10,50]} duration={5} showRange tipStay />\n\t                </div>\n\t                <Code target=\"slider-disabled\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/slider"
            ],
            "isApp": true,
            "show": true
        },
        "Star": {
            "name": "Star",
            "shortname": "Star",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/Star.js",
            "line": 16,
            "description": "星级评价组件<br />\n- 通过Rate设置星级评价的分数, 最低0, 最高50, 5的倍数。\n- 通过phSize设置大小, 可选sm、md、lg。\n\n主要属性和接口：\n- phSize(v1.1.2以下用size):星星的大小。分别为sm、md、lg, 默认sm。 <br/>\n如：`<Star phSize=\"lg\" />`\n- Rate:星级评价的分数。最低0, 最高50, 5的倍数递增, 默认0。 <br/>\n如：`<Star Rate={10} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Star} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class star extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Star</h2>\n\t                <h3 className=\"comp-type\">Rate(默认0) 星级评价的分数</h3>\n\t                <div className=\"content\">\n\t                    <Star />\n\t                    <Star Rate={5} />\n\t                    <Star Rate={15} />\n\t                    <Star Rate={20} />\n\t                    <Star Rate={25} />\n\t                    <Star Rate={30} />\n\t                    <Star Rate={35} />\n\t                </div>\n\t                <Code target=\"star-rate\" />\n\t\n\t                <h3 className=\"comp-type\">phSize(默认sm) 星星大小</h3>\n\t                <div className=\"content\">\n\t                    <Star Rate={40} phSize=\"sm\" />\n\t                    <Star Rate={45} phSize=\"md\" />\n\t                    <Star Rate={50} phSize=\"lg\" />\n\t                </div>\n\t                <Code target=\"star-phsize\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/star"
            ],
            "isApp": true,
            "show": true
        },
        "Steps": {
            "name": "Steps",
            "shortname": "Steps",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Steps.js",
            "line": 7,
            "description": "步骤组件<br/>\n- 通过list设置步骤过程名称数组，如[\"合作信息\",\"公司信息\",\"资质信息\"]，必需。\n- 可通过currentStep设置当前步骤，从0开始计算。\n- 可通过clickCallback设置点击步骤的回调，函数返回步骤名称和索引。\n- 可通过readOnly设置步骤是否只读不可点击，默认可点击。\n\n主要属性和接口：\n- list:初始进度百分比, 默认0。 <br/>\n如: `<Steps list={[\"合作信息\",\"公司信息\",\"资质信息\"]} />`\n- currentStep:当前步骤，从0开始计算，默认0。 <br/>\n如: `<Steps currentStep={1} list={[\"合作信息\",\"公司信息\",\"资质信息\"]} />`\n- clickCallback:点击步骤的回调，函数返回步骤名称和索引。 <br/>\n如: `<Steps clickCallback={(str,index)=>{console.log(index);}} list={[\"合作信息\",\"公司信息\",\"资质信息\"]}/>`\n- readOnly:只读不可点击，默认false。<br/>\n如: `<Steps readOnly list={[\"合作信息\",\"公司信息\",\"资质信息\"]} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.7.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Steps} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class steps extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            index: 2,\n\t            list1: [\"合作信息\",\"公司信息\",\"资质信息\",\"资质信息\"],\n\t            list2: [\"合作信息\",\"公司信息\",\"资质信息\",\"公司信息\",\"资质信息\",\"公司信息\"]\n\t        };\n\t    }\n\t\n\t    clickCallback(str, index){\n\t        alert(\"name: \"+str+\", index: \"+index);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Steps</h2>\n\t                <h3 className=\"comp-type\">list(默认[],必需) 步骤名称列表，根据顺序排列</h3>\n\t                <div className=\"content\">\n\t                    <Steps list={[\"合作信息\",\"公司信息\",\"资质信息\"]} />\n\t                </div>\n\t                <Code target=\"steps-list\" />\n\t\n\t                <h3 className=\"comp-type\">currentStep(默认0) 当前步骤(从0开始)</h3>\n\t                <div className=\"content\">\n\t                    <Steps currentStep={2} list={this.state.list1} />\n\t                </div>\n\t                <Code target=\"steps-currentstep\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback(默认null) 选择步骤的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Steps clickCallback={::this.clickCallback} list={this.state.list1}/>\n\t                </div>\n\t                <Code target=\"steps-clickcallback\" />\n\t\n\t                <h3 className=\"comp-type\">readOnly(默认false) 是否只读，只读时不可点击选择步骤</h3>\n\t                <div className=\"content\">\n\t\t                <Steps readOnly list={this.state.list2} />\n\t                </div>\n\t                <Code target=\"steps-readonly\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/steps"
            ],
            "isApp": true,
            "show": true
        },
        "Swipe": {
            "name": "Swipe",
            "shortname": "Swipe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Swipe.js",
            "line": 9,
            "description": "左滑组件<br/>\n- 向左滑动出现可操作按钮, 类似IOS列表操作的组件。\n- 通过buttons设置可操作按钮的文字text、样式phStyle以及点击按钮的回调函数onHandle。\n- buttons的phStyle默认'primary', 可选primary、info、error、warning、danger、link、gray、success。\n\n示例:\n```code\n    <Swipe buttons={[\n        {text: '删除', onHandle: this.onDelete, phStyle: 'error'},\n        {text: '取消', onHandle: this.onCancle, phStyle: 'info'}\n    ]}>\n        <div style={{padding: '1rem'}}>\n            // 内容\n        </div>\n    </Swipe>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.3.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Swipe} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class swipe extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onDelete(){\n\t        console.log(\"delete!!\");\n\t    }\n\t\n\t    onCancle(){\n\t        console.log(\"cancle!!\");\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Swipe</h2>\n\t                <h3 className=\"comp-type\">buttons(默认空数组) 左滑后出现的操作按钮</h3>\n\t                <div className=\"contents\">\n\t                    <h3 className=\"comp-tip\">buttons的phStyle默认primary</h3>\n\t                    <Swipe buttons={[\n\t                        {text: \"删除\", onHandle: this.onDelete}\n\t                    ]}>\n\t                        <div style={{padding: \"1rem\"}}>\n\t                            滑动块1\n\t                        </div>\n\t                    </Swipe>\n\t                </div>\n\t                <Code target=\"swipe-phstyle\" />\n\t\n\t                <div className=\"contents\">\n\t                    <h3 className=\"comp-tip\">自定义buttons参数</h3>\n\t                    <Swipe buttons={[\n\t                        {text: \"删除\", onHandle: this.onDelete, phStyle: \"error\"},\n\t                        {text: \"取消\", onHandle: this.onCancle, phStyle: \"info\"}\n\t                    ]}>\n\t                        <div style={{padding: \"1rem\"}}>\n\t                            滑动块2\n\t                        </div>\n\t                    </Swipe>\n\t                </div>\n\t                <Code target=\"swipe-buttons\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/swipe"
            ],
            "isApp": true,
            "show": true
        },
        "Switch": {
            "name": "Switch",
            "shortname": "Switch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/Switch.js",
            "line": 6,
            "description": "开关切换组件，仿真ios的开关控件<br/>\n- 可通过defaultChecked设置默认值。\n- 可通过checked和onChange事件配合使用手动设置输入值。\n\n主要属性和接口：\n- defaultChecked:默认值<br/>\n如：`<Switch defaultChecked={true} />`\n- checked&onChange:<br/>\n如：`<Switch checked={this.state.checked} onChange={()=>{this.setState({checked:false})}} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from 'react';\n\timport {Switch} from 'phoenix-ui';\n\timport Code from \"./code/code\";\n\t\n\texport default class switchs extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            checked: true\n\t        };\n\t    }\n\t\n\t    onChange(){\n\t        this.setState({\n\t            checked: !this.state.checked\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Switch</h2>\n\t                <h3 className=\"comp-type\">开关</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">默认</h3>\n\t                    <Switch />\n\t                    <h3 className=\"comp-tip\">defaultChecked 初始传值</h3>\n\t                    <Switch defaultChecked={true} />\n\t                    <h3 className=\"comp-tip\">checked和onChange配合使用</h3>\n\t                    <Switch checked={this.state.checked} onChange={::this.onChange} />\n\t                </div>\n\t                <Code target=\"switch\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/switch"
            ],
            "isApp": true,
            "show": true
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "选项卡",
            "namespace": "",
            "file": "src/Tab.js",
            "line": 6,
            "description": "tab选项卡组件<br/>\n- 通过heading设置选项卡的显示内容。\n- 可通过onTabChange设置点击选项卡的回调函数。\n- 可自定义className等常用属性以及事件。\n\n具体属性和接口如下：\n- heading:选项卡的显示内容, 默认'tab'\n- onTabChange:点击事件的回调函数\n\n示例:\n```code\n    <Tabset activeIndex ={this.state.index} tabCallback={(index)=>{console.log(index);}>\n        <Tab heading='标题1' className='tab-test'>\n            横向内容1\n        </Tab>\n        <Tab heading='标题2' onTabChange={(index)=>{console.log(index);}>\n            横向内容2\n        </Tab>\n    </Tabset>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Tabset,Tab} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class tab extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t\n\t    onTabsetChange(index){\n\t        alert(\"测试tabset回调\", \"index: \" + index);\n\t    }\n\t\n\t    onTabChange(index){\n\t        alert(\"测试tab回调\", \"index: \" + index);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\"><strong>Tabset</strong></h3>\n\t                <h3 className=\"comp-type\">activeIndex(默认0) 默认选中选项卡的索引值</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex={1}>\n\t                        <Tab heading=\"标题1\">\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tabset-activeindex\" />\n\t\n\t                <h3 className=\"comp-type\">vertical(默认false) 设置选项卡竖排</h3>\n\t                <div className=\"content\">\n\t                    <Tabset vertical>\n\t                        <Tab heading=\"标题1\">\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            竖向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <br/>\n\t                <Code target=\"tabset-vertical\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认20) 设置vertical之后标题的占比</h3>\n\t                <div className=\"content\">\n\t                    <Tabset vertical width={30}>\n\t                        <Tab heading=\"标题1\">\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            竖向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <br/>\n\t                <Code target=\"tabset-width\" />\n\t\n\t                <h3 className=\"comp-type\">onTabsetChange 点击选项卡的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Tabset onTabsetChange={::this.onTabsetChange}>\n\t                        <Tab heading=\"标题1\">\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tabset-ontabsetchange\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Tab</strong></h3>\n\t                <h3 className=\"comp-type\">heading(默认\"tab\") 选项卡的标题内容</h3>\n\t                <div className=\"content\">\n\t                    <Tabset>\n\t                        <Tab heading=\"Tab heading 1\">\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"Tab heading 2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tab-heading\" />\n\t\n\t                <h3 className=\"comp-type\">onTabChange 点击单个选项卡的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Tabset>\n\t                        <Tab heading=\"标题1\" onTabChange={::this.onTabChange}>\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tab-ontabchange\" />\n\t           </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/tab"
            ],
            "isApp": true,
            "show": true
        },
        "TableView": {
            "name": "TableView",
            "shortname": "TableView",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/TableView.js",
            "line": 6,
            "description": "展现形式如表格一般, 用来组织数据, 显示链接的集合, 或一系列的控件。<br />\n- 使用时如果需要跳转功能可通过添加href属性并赋予正确的url(任何标签)。\n- 可搭配其他组件一起使用, 如徽章组件Badge, 开关组件Switch等。\n\n示例:\n```code\n    <TableView>\n        <a href=\"https://github.com/future-team/phoenix-ui\">Item 1</a>\n        <a>Item 2 <Badge>2</Badge></a>\n        <a>Item 3 <Switch /></a>\n    </TableView>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from 'react';\n\timport {TableView,Badge,Switch} from 'phoenix-ui';\n\timport Code from \"./code/code\";\n\t\n\texport default class tableview extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">TableView</h2>\n\t                <h3 className=\"comp-type\">仿表格组件</h3>\n\t                <div className=\"contents\">\n\t                    <h3 className=\"comp-tip\">子元素设置href属性(设置href属性增加右箭头)</h3>\n\t                    <TableView>\n\t                        <a href=\"http://www.baidu.com\">Item 1</a>\n\t                    </TableView>\n\t                </div>\n\t                <Code target=\"table-view-href\" />\n\t\n\t                <div className=\"contents\">\n\t                    <h3 className=\"comp-tip\">配合其他组件使用</h3>\n\t                    <TableView>\n\t                        <a>Item 2 <Badge>2</Badge></a>\n\t                        <a href=\"###\">Item 3 <Badge>5</Badge></a>\n\t                        <a>Item 4 <Switch /></a>\n\t                    </TableView>\n\t                </div>\n\t                <Code target=\"table-view-other-component\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/tableview"
            ],
            "isApp": true,
            "show": true
        },
        "Tabset": {
            "name": "Tabset",
            "shortname": "Tabset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "选项卡",
            "namespace": "",
            "file": "src/Tabset.js",
            "line": 17,
            "description": "tabset选项卡组件<br/>\n- 通过activeIndex指定默认的选中tab的索引值。\n- 选项卡默认横排, 可通过vertical设置为竖排。\n- 当设置为vertical后, 可通过width设置tab标题部分的宽度占比。\n- 可通过onTabsetChange设置点击选项卡的回调函数。\n- 可自定义className等常用属性以及事件。\n\n具体属性和接口如下：\n- activeIndex:默认选中的标签卡索引值，默认0第一个tab\n- vertical:是否竖排，如需要直接添加改属性即可，默认不竖排\n- width:选项卡头部的宽度，取值0-100之间, 只有设置vertical下生效, 默认20\n- onTabsetChange:点击选项卡执行的回调函数\n\n示例:\n- 横排\n```code\n    <Tabset activeIndex ={this.state.index} onTabsetChange={(index)=>{console.log(index);}>\n        <Tab heading='标题1' className='tab-test'>\n            横向内容1\n        </Tab>\n        <Tab heading='标题2' clickCallback={(index)=>{console.log(index);}>\n            横向内容2\n        </Tab>\n    </Tabset>\n```\n- 竖排\n```code\n    <Tabset vertical width={30} activeIndex ={this.state.index} onTabsetChange={(index)=>{console.log(index);}>\n        <Tab heading='标题1'>\n            竖向内容1\n        </Tab>\n        <Tab heading='标题2' clickCallback={(index)=>{console.log(index);}>\n            竖向内容2\n        </Tab>\n    </Tabset>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Tabset,Tab} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class tab extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t\n\t    onTabsetChange(index){\n\t        alert(\"测试tabset回调\", \"index: \" + index);\n\t    }\n\t\n\t    onTabChange(index){\n\t        alert(\"测试tab回调\", \"index: \" + index);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\"><strong>Tabset</strong></h3>\n\t                <h3 className=\"comp-type\">activeIndex(默认0) 默认选中选项卡的索引值</h3>\n\t                <div className=\"content\">\n\t                    <Tabset activeIndex={1}>\n\t                        <Tab heading=\"标题1\">\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tabset-activeindex\" />\n\t\n\t                <h3 className=\"comp-type\">vertical(默认false) 设置选项卡竖排</h3>\n\t                <div className=\"content\">\n\t                    <Tabset vertical>\n\t                        <Tab heading=\"标题1\">\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            竖向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <br/>\n\t                <Code target=\"tabset-vertical\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认20) 设置vertical之后标题的占比</h3>\n\t                <div className=\"content\">\n\t                    <Tabset vertical width={30}>\n\t                        <Tab heading=\"标题1\">\n\t                            竖向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            竖向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <br/>\n\t                <Code target=\"tabset-width\" />\n\t\n\t                <h3 className=\"comp-type\">onTabsetChange 点击选项卡的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Tabset onTabsetChange={::this.onTabsetChange}>\n\t                        <Tab heading=\"标题1\">\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tabset-ontabsetchange\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Tab</strong></h3>\n\t                <h3 className=\"comp-type\">heading(默认\"tab\") 选项卡的标题内容</h3>\n\t                <div className=\"content\">\n\t                    <Tabset>\n\t                        <Tab heading=\"Tab heading 1\">\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"Tab heading 2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tab-heading\" />\n\t\n\t                <h3 className=\"comp-type\">onTabChange 点击单个选项卡的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Tabset>\n\t                        <Tab heading=\"标题1\" onTabChange={::this.onTabChange}>\n\t                            横向内容1\n\t                        </Tab>\n\t                        <Tab heading=\"标题2\">\n\t                            横向内容2\n\t                        </Tab>\n\t                    </Tabset>\n\t                </div>\n\t                <Code target=\"tab-ontabchange\" />\n\t           </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/tab"
            ],
            "isApp": true,
            "show": true
        },
        "TextArea": {
            "name": "TextArea",
            "shortname": "TextArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/Textarea.js",
            "line": 17,
            "description": "多行文本框组件<br/>\n- 使用方式跟原生一致。\n- 可通过defaultValue设置默认值,如果是通过请求获得的数据请使用value，defaultValue只有初始赋值有效。 \n- 可通过value和onChange事件配合使用手动设置输入值。\n- 可通过设置count判断是否显示当前输入字数。\n- 可通过设置maxLength配置最大输入字数。\n\n主要属性和接口：\n- defaultValue:默认值 <br/>\n如：`<Textarea defaultValue=\"测试\" />`\n- value&onChange:<br/>\n如：`<Textarea value={this.state.value} onChange={()=>{this.setState({value:\"测试\"})}} />`\n- count:是否显示当前输入字数, 默认false不显示, 配合maxLength使用<br/>\n如：`<Textarea count maxLength={150} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.3.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Textarea} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class textarea extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:\"默认值defaultValue\",\n\t            words: \"value和onChange配合使用\",\n\t            MAX_LENGTH: 100\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Textarea</h2>\n\t                <h3 className=\"comp-type\">count(默认false) 是否计字数</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">默认不计数</h3>\n\t                    <Textarea placeholder=\"请输入...\" />\n\t                    <h3 className=\"comp-tip\">count配合maxLength计数</h3>\n\t                    <Textarea count maxLength={this.state.MAX_LENGTH} placeholder=\"请输入...\" />\n\t                </div>\n\t                <Code target=\"textarea-count\" />\n\t\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">defaultValue 默认值</h3>\n\t                    <Textarea defaultValue={this.state.name} placeholder=\"请输入...\" />\n\t                    <h3 className=\"comp-tip\">value和onChange配合使用</h3>\n\t                    <Textarea value={this.state.words} onChange={this.setValue.bind(this,\"words\")} placeholder=\"请输入...\" />\n\t                </div>\n\t                <Code target=\"textarea\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/textarea"
            ],
            "isApp": true,
            "show": true
        },
        "Toast": {
            "name": "Toast",
            "shortname": "Toast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/Toast.js",
            "line": 7,
            "description": "飘字组件<br/>\n- 由于飘字的使用范围可预估, 为方便使用在原组件的基础上更进一步改为函数式的使用方式。\n- 普通信息: `Toast.info(message, duration, callback)`\n- 成功信息: `Toast.success(message, duration, callback)`\n- 失败信息: `Toast.fail(message, duration, callback)`\n- 加载中: `Toast.loading(message, duration, callback)`\n- 移除: `Toast.remove()`\n- 如果不根据设置的时间移除飘字，`duration`设置为false，`Toast.remove()`移除飘字。\n\n示例: <br/>\n- 显示普通飘字, 如:<br/>\n`Toast.info('只显示信息的toast！', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 显示成功信息, 如:<br/>\n`Toast.success('操作成功', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 显示失败信息, 如:<br/>\n`Toast.fail('操作失败', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 显示加载中, 如:<br/>\n`Toast.loading('加载中...', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 移除飘字, 如:<br/>\n`Toast.remove()`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.3.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Button, Toast} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class toast extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t\n\t    showToastInfo(){\n\t        Toast.info(\"只显示信息的toast！\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    showToastSuccess(){\n\t        Toast.success(\"操作成功\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    showToastFail(){\n\t        Toast.fail(\"操作失败\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    showToastLoading(){\n\t        Toast.loading(\"加载中...\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    removeToastLoading(){\n\t        Toast.remove();\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Toast</h2>\n\t                <h3 className=\"comp-type\">Toast.info(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastInfo}>info</Button>\n\t                </div>\n\t                <Code target=\"toast-info\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.success(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastSuccess}>success</Button>\n\t                </div>\n\t                <Code target=\"toast-success\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.fail(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastFail}>fail</Button>\n\t                </div>\n\t                <Code target=\"toast-fail\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.loading(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastLoading}>loading</Button>\n\t                </div>\n\t                <Code target=\"toast-loading\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.remove()<br/>自定义消失的情况：Toast出现函数设置duration为false</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.removeToastLoading}>remove</Button>\n\t                </div>\n\t                <Code target=\"toast-remove\" />     \n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "toast"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/toast"
            ],
            "isApp": true,
            "show": true
        },
        "Whisper": {
            "name": "Whisper",
            "shortname": "Whisper",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "提示组件",
            "namespace": "",
            "file": "src/Whisper.js",
            "line": 17,
            "description": "倾听者组件<br/>\n- 配合提示组件使用, 通过target设置显示的目标。\n- 可通过placement设置目标物的显示位置, 可选top、bottom、left、right、top left、top right、bottom left、bottom right。\n- 可通过distance设置目标物到点击对象(倾听者)的位置。\n- 可通过onTargetChange定义目标物显隐时额外的回调函数。\n\n主要属性和接口：\n- target:目标物。\n- placement:目标物的显示位置, 默认bottom。\n- distance:目标物到点击对象(倾听者)的位置, 默认15。\n- onTargetChange:目标物显隐时额外的回调函数。\n\n示例:\n```code\n    const popover = ( // 可以通过style自定义位置\n        <Popover>\n            <ul className=\"ph-popover-list\">\n                <li className=\"ph-popover-item\">未上线单店</li>\n                <li className=\"ph-popover-item\">未上线连锁店</li>\n            </ul>\n        </Popover>\n    );\n```\n```code\n    <Whisper placement=\"top\" onTargetChange={()=>{console.log('气泡出现消失时额外的执行函数');}} target={popover} distance={10} >Top</Whisper>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\timport {Whisper, Popover} from \"phoenix-ui\";\n\timport Code from \"./code/code\";\n\t\n\texport default class popover extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onTargetChange(){\n\t        alert(\"气泡出现消失时额外的执行函数\"); \n\t    }\n\t\n\t    render(){\n\t        const popover = ( // 可以通过style自定义位置\n\t            <Popover>\n\t                <ul className=\"ph-popover-list\">\n\t                    <li className=\"ph-popover-item\">未上线单店</li>\n\t                    <li className=\"ph-popover-item\">未上线连锁店</li>\n\t                </ul>\n\t            </Popover>\n\t        );\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Whisper/Popover</h2>\n\t                <h3 className=\"comp-type\">\n\t                    target 显示的目标物<br/>\n\t                    placement(默认bottom) 气泡出现时相对点击对象的位置\n\t                </h3>\n\t                <div className=\"content\">\n\t                    <Whisper target={popover}>Bottom</Whisper>\n\t                    <Whisper placement=\"top\" target={popover}>Top</Whisper>\n\t                    <Whisper placement=\"right\" target={popover}>Right</Whisper>\n\t                    <Whisper placement=\"left\" target={popover}>Left</Whisper>\n\t                    <Whisper placement=\"top right\" target={popover}>Top Right</Whisper>\n\t                    <Whisper placement=\"top left\" target={popover}>Top Left</Whisper>\n\t                    <Whisper placement=\"bottom right\" target={popover}>Bottom Right</Whisper>\n\t                    <Whisper placement=\"bottom left\" target={popover}>Bottom Left</Whisper>\n\t                </div>\n\t                <Code target=\"popover-placement\" />\n\t\n\t                <h3 className=\"comp-type\">distance(默认15) 气泡想对点击对象的距离</h3>\n\t                <div className=\"content\">\n\t                    <Whisper target={popover} distance={10}>10</Whisper>\n\t                    <Whisper target={popover} distance={20}>20</Whisper>\n\t                </div>\n\t                <Code target=\"popover-distance\" />\n\t\n\t                <h3 className=\"comp-type\">onTargetChange 气泡显隐时额外的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Whisper onTargetChange={this.onTargetChange} target={popover}>popover</Whisper>\n\t                </div>\n\t                <Code target=\"popover-ontargetchange\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/popover"
            ],
            "isApp": true,
            "show": true
        }
    },
    "classitems": [
        {
            "file": "src/menu/Menu.js",
            "line": 59,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu'",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/Menu.js",
            "line": 66,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/Menu.js",
            "line": 72,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/Menu.js",
            "line": 79,
            "description": "点击收起展开的回调函数",
            "itemtype": "method",
            "name": "onMenuChange",
            "type": "Function",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/Menu.js",
            "line": 85,
            "description": "是否滚动吸顶, 默认不吸顶(false); 设置确定的数字从当前距离开始吸顶",
            "itemtype": "property",
            "name": "scrollCeiling",
            "type": "Number",
            "default": "不设置",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 41,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-body'",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 48,
            "description": "菜单位置, 可选[top,left,right,left-full,right-full,full-screen], 默认top",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "default": "'top'",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 55,
            "description": "自定义菜单宽度百分比（限左右）",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "50",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 63,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuHeader.js",
            "line": 40,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-header'",
            "class": "MenuHeader",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuHeader.js",
            "line": 47,
            "description": "菜单按钮位置, 可选[left,right], left",
            "itemtype": "property",
            "name": "align",
            "type": "String",
            "default": "'left'",
            "class": "MenuHeader",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 50,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-item'",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 57,
            "description": "icon符号类型",
            "itemtype": "property",
            "name": "phIcon",
            "type": "string",
            "default": "''",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 64,
            "description": "跳转地址",
            "itemtype": "property",
            "name": "href",
            "type": "string",
            "default": "''",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 71,
            "description": "当前项目的唯一标志",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "null",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 78,
            "description": "点击事件的回调函数",
            "itemtype": "method",
            "name": "onMenuitemChange",
            "type": "Function",
            "default": "null",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuList.js",
            "line": 42,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-list'",
            "class": "MenuList",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuList.js",
            "line": 49,
            "description": "当前选中的项目name，对应item的name属性",
            "itemtype": "property",
            "name": "activeName",
            "type": "String",
            "default": "null",
            "class": "MenuList",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuList.js",
            "line": 56,
            "description": "点击事件的回调函数",
            "itemtype": "method",
            "name": "onMenulistChange",
            "type": "Function",
            "default": "null",
            "class": "MenuList",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuNav.js",
            "line": 40,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-nav'",
            "class": "MenuNav",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuNav.js",
            "line": 47,
            "description": "导航的位置, 可选[top,center,bottom], 默认top",
            "itemtype": "property",
            "name": "align",
            "type": "String",
            "default": "'top'",
            "class": "MenuNav",
            "module": "菜单组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 52,
            "description": "标题",
            "itemtype": "property",
            "name": "title",
            "type": "String|Element",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 58,
            "description": "内容",
            "itemtype": "property",
            "name": "title",
            "type": "String|Element",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 64,
            "description": "尾部按钮",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 70,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 76,
            "description": "关闭弹框的执行函数",
            "itemtype": "method",
            "name": "onClose",
            "type": "Function",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 82,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 88,
            "description": "阴影部分是否点击可关闭弹框, 默认传了onClose之后可关闭",
            "itemtype": "property",
            "name": "shadowDisabled",
            "type": "Boolean",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 69,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'dialog'",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 76,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 82,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 88,
            "description": "关闭弹框的执行函数",
            "itemtype": "method",
            "name": "onClose",
            "type": "Function",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 94,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 100,
            "description": "阴影部分是否点击可关闭弹框, 默认传了onClose之后可关闭",
            "itemtype": "property",
            "name": "shadowDisabled",
            "type": "Boolean",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 54,
            "description": "标题",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 60,
            "description": "内容",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 66,
            "description": "尾部按钮",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 72,
            "description": "内容区域文本框",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 78,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 84,
            "description": "关闭弹框的执行函数",
            "itemtype": "method",
            "name": "onClose",
            "type": "Function",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 90,
            "description": "点击确定的回调函数",
            "itemtype": "method",
            "name": "onConfirm",
            "type": "Function",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 96,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 102,
            "description": "阴影部分是否点击可关闭弹框, 默认传了onClose之后可关闭",
            "itemtype": "property",
            "name": "shadowDisabled",
            "type": "Boolean",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/MethodMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/PropertyMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/Tool.js",
            "line": 1,
            "description": "Created by mac on 16/11/28.",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 11,
            "description": "状态",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 62,
            "description": "颜色",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 76,
            "description": "form列表相关",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 86,
            "description": "tab",
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/utils/extend.js",
            "line": 5,
            "description": "A recursive merge between two objects.",
            "params": [
                {
                    "name": "base",
                    "description": "- the object whose properties are to be overwritten. It\n                  should be either the root level or some nested level."
                },
                {
                    "name": "override",
                    "description": "- an object containing properties to be overwritten. It\n                  should have the same structure as the object object."
                }
            ],
            "class": "Accordion",
            "module": "弹出框组件"
        },
        {
            "file": "src/Accordion.js",
            "line": 67,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'accordion'",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Accordion.js",
            "line": 74,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Accordion.js",
            "line": 80,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Accordion.js",
            "line": 87,
            "description": "点击收起展开的回调函数",
            "itemtype": "method",
            "name": "onAccordionChange",
            "type": "Function",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Accordion.js",
            "line": 93,
            "description": "向下的箭头是否可见， 默认可见",
            "itemtype": "property",
            "name": "hideIcon",
            "type": "Boolean",
            "default": "false",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/Animate.js",
            "line": 41,
            "description": "动画名称,默认fade",
            "itemtype": "property",
            "name": "transitionName",
            "type": "String",
            "default": "'fade'",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/Animate.js",
            "line": 48,
            "description": "动画进入延迟时间",
            "itemtype": "property",
            "name": "transitionEnterTimeout",
            "type": "Number",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/Animate.js",
            "line": 54,
            "description": "动画退出延迟时间",
            "itemtype": "property",
            "name": "transitionLeaveTimeout",
            "type": "Number",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/Badge.js",
            "line": 25,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'badge'",
            "class": "Badge",
            "module": "标签组件"
        },
        {
            "file": "src/Badge.js",
            "line": 32,
            "description": "badge徽章颜色[primary、warning、danger、info、error、success], 默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "string",
            "default": "'primary'",
            "class": "Badge",
            "module": "标签组件"
        },
        {
            "file": "src/Button.js",
            "line": 33,
            "description": "按钮尺寸[sm、md、lg], 默认为sm",
            "itemtype": "property",
            "name": "phSize",
            "type": "String",
            "default": "'sm'",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 40,
            "description": "按钮颜色[primary、warning、danger、info、error、success、link、gray], 默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "Boolean",
            "default": "'primary'",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 47,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'button'",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 54,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 60,
            "description": "块级显示",
            "itemtype": "property",
            "name": "block",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 67,
            "description": "圆角",
            "itemtype": "property",
            "name": "radius",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 74,
            "description": "空背景",
            "itemtype": "property",
            "name": "hollow",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 81,
            "description": "不可点状态",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/Button.js",
            "line": 88,
            "description": "激活状态",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 38,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'button-group'",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 45,
            "description": "是否有自适应宽度，垂直排列等属性，取值为justify(水平排列)或者tacked(垂直排列)",
            "itemtype": "property",
            "name": "phType",
            "type": "String",
            "default": "'justify'",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/ButtonGroup.js",
            "line": 52,
            "description": "按钮被按下后的回调",
            "itemtype": "method",
            "name": "onButtongroupChange",
            "type": "Function",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/Col.js",
            "line": 56,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'col'",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/Col.js",
            "line": 63,
            "description": "占100份的多少份，目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)",
            "itemtype": "property",
            "name": "width",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/Col.js",
            "line": 69,
            "description": "偏移多少，目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)，默认不偏移",
            "itemtype": "property",
            "name": "offset",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/Col.js",
            "line": 75,
            "description": "竖直方向的排列是靠上、居中还是靠下",
            "itemtype": "property",
            "name": "align",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/Drag.js",
            "line": 45,
            "description": "抓取的执行函数,对应TouchStart/TouchMove",
            "itemtype": "method",
            "name": "onDrag",
            "type": "Function",
            "class": "Drag",
            "module": "辅助组件"
        },
        {
            "file": "src/Drag.js",
            "line": 51,
            "description": "放开的执行函数,对应TouchEnd",
            "itemtype": "method",
            "name": "onDrop",
            "type": "Function",
            "class": "Drag",
            "module": "辅助组件"
        },
        {
            "file": "src/FormGroup.js",
            "line": 48,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'form-group'",
            "class": "FormGroup",
            "module": "表单组件"
        },
        {
            "file": "src/FormGroup.js",
            "line": 55,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "FormGroup",
            "module": "表单组件"
        },
        {
            "file": "src/Grid.js",
            "line": 47,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'grid'",
            "class": "Grid",
            "module": "布局组件"
        },
        {
            "file": "src/Icon.js",
            "line": 25,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'icon'",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/Icon.js",
            "line": 32,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "'span'",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/Icon.js",
            "line": 39,
            "description": "icon符号类型",
            "itemtype": "property",
            "name": "phIcon",
            "type": "string",
            "default": "''",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/ImageList.js",
            "line": 73,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'image-list'",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/ImageList.js",
            "line": 80,
            "description": "图片列表数据",
            "itemtype": "property",
            "name": "images",
            "type": "Array",
            "default": "[]",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/ImageList.js",
            "line": 87,
            "description": "图片列数",
            "itemtype": "property",
            "name": "column",
            "type": "Number",
            "default": "1",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/ImageList.js",
            "line": 94,
            "description": "名称格式",
            "itemtype": "property",
            "name": "titleField",
            "type": "String",
            "default": "\"#\"",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/ImageList.js",
            "line": 101,
            "description": "描述格式",
            "itemtype": "property",
            "name": "despField",
            "type": "String",
            "default": "\"#\"",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/ImageList.js",
            "line": 108,
            "description": "其他参数，额外增加的可自定义的字段",
            "itemtype": "property",
            "name": "otherParams",
            "type": "Object",
            "default": "{}",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/ImageList.js",
            "line": 115,
            "description": "点击单个图片块的回调函数,返回当前图片的所有信息",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "default": "null",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/Input.js",
            "line": 40,
            "description": "input类型, 可选[text,checkbox,radio], 默认text",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'text'",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/Input.js",
            "line": 47,
            "description": "类型为checkbox&radio时, 展示的文字信息",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "default": "''",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/Input.js",
            "line": 54,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'input'",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/Input.js",
            "line": 61,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/Input.js",
            "line": 67,
            "description": "更改值时触发的回调",
            "itemtype": "event",
            "name": "onChange",
            "type": "Function",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/Label.js",
            "line": 37,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'label'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/Label.js",
            "line": 44,
            "description": "label标签大小[lg、md、sm], 默认为sm",
            "itemtype": "property",
            "name": "phSize",
            "type": "string",
            "default": "'sm'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/Label.js",
            "line": 51,
            "description": "label标签颜色[primary、warning、danger、info、error、success], 默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "string",
            "default": "'primary'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/LoadingList.js",
            "line": 48,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'loading-list'",
            "class": "LoadingList",
            "module": "操作类组件"
        },
        {
            "file": "src/LoadingList.js",
            "line": 55,
            "description": "加载更多的模式，可选[button,auto], 默认auto",
            "itemtype": "property",
            "name": "phStyle",
            "type": "String",
            "default": "'auto'",
            "class": "LoadingList",
            "module": "操作类组件"
        },
        {
            "file": "src/LoadingList.js",
            "line": 62,
            "description": "加载状态：0加载更多, 1加载中, 2数据加载成功, 3数据加载失败, 4没有更多",
            "itemtype": "property",
            "name": "loadingStatus",
            "type": "Number",
            "default": "1",
            "class": "LoadingList",
            "module": "操作类组件"
        },
        {
            "file": "src/LoadingList.js",
            "line": 69,
            "description": "加载5个状态的文字描述，默认[\"加载更多\",\"加载中\",\"加载成功\",\"加载失败\",\"没有更多\"]",
            "itemtype": "property",
            "name": "loadTips",
            "type": "Array",
            "default": "[\"加载更多\",\"加载中\",\"加载成功\",\"加载失败\",\"没有更多\"]",
            "class": "LoadingList",
            "module": "操作类组件"
        },
        {
            "file": "src/LoadingList.js",
            "line": 76,
            "description": "加载5个状态的style，默认[\"primary\",\"info\",\"success\",\"error\",\"gray\"]",
            "itemtype": "property",
            "name": "buttonStyles",
            "type": "Array",
            "default": "[\"primary\",\"info\",\"success\",\"error\",\"gray\"]",
            "class": "LoadingList",
            "module": "操作类组件"
        },
        {
            "file": "src/LoadingList.js",
            "line": 83,
            "description": "点击按钮加载或滑到底部自动加载的回调函数，用户在该函数内自定义请求",
            "itemtype": "method",
            "name": "onLoading",
            "type": "Function",
            "default": "null",
            "class": "LoadingList",
            "module": "操作类组件"
        },
        {
            "file": "src/LoadingList.js",
            "line": 90,
            "description": "每次加载结束的回调函数",
            "itemtype": "method",
            "name": "onLoadingEnd",
            "type": "Function",
            "default": "null",
            "class": "LoadingList",
            "module": "操作类组件"
        },
        {
            "file": "src/Popover.js",
            "line": 36,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'popover'",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/Popover.js",
            "line": 43,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/Popup.js",
            "line": 52,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'popup'",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Popup.js",
            "line": 59,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Popup.js",
            "line": 65,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Popup.js",
            "line": 71,
            "description": "弹层的位置,默认top",
            "itemtype": "property",
            "name": "align",
            "type": "String",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Popup.js",
            "line": 77,
            "description": "关闭的执行函数",
            "itemtype": "method",
            "name": "onClose",
            "type": "Function",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/Row.js",
            "line": 35,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'row'",
            "class": "Row",
            "module": "布局组件"
        },
        {
            "file": "src/Row.js",
            "line": 42,
            "description": "竖直方向的排列是靠上、居中、靠下、拉伸至父容器最大高度还是基于text的baseline对齐",
            "itemtype": "property",
            "name": "align",
            "type": "String",
            "class": "Row",
            "module": "布局组件"
        },
        {
            "file": "src/Slider.js",
            "line": 51,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'slider'",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 58,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 64,
            "description": "初始进程,默认0",
            "itemtype": "property",
            "name": "progress",
            "type": "String",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 70,
            "description": "进程提示的位置,默认top",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "default": "'top'",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 77,
            "description": "范围，默认0-100，可传固定范围的数组如：[25,50]",
            "itemtype": "property",
            "name": "range",
            "type": "Array",
            "default": "[0,100]",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 84,
            "description": "是否在进度条前后显示范围",
            "itemtype": "property",
            "name": "showRange",
            "type": "Boolean",
            "default": "false",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 91,
            "description": "每次移动的固定距离，默认1",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "1",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 98,
            "description": "初始及松开按钮时是否显示进度",
            "itemtype": "property",
            "name": "tipStay",
            "type": "Boolean",
            "default": "false",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Slider.js",
            "line": 105,
            "description": "改变进程时的回调函数",
            "itemtype": "method",
            "name": "onSliderChange",
            "type": "Function",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/Star.js",
            "line": 38,
            "description": "星级评价分数",
            "itemtype": "property",
            "name": "Rate",
            "type": "number",
            "default": "默认为0，最高50",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/Star.js",
            "line": 45,
            "description": "星星大小",
            "itemtype": "property",
            "name": "phSize",
            "type": "String",
            "default": "'sm'",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/Star.js",
            "line": 52,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'star'",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/Steps.js",
            "line": 35,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'badge'",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/Steps.js",
            "line": 42,
            "description": "是否为只读模式（只读模式不会触发点击回调），默认为false",
            "itemtype": "property",
            "name": "readOnly",
            "type": "Boolean",
            "default": "false",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/Steps.js",
            "line": 49,
            "description": "steps内容数组，把每一步的文案放入数组中作为list的值",
            "itemtype": "property",
            "name": "list",
            "type": "Array",
            "default": "[]",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/Steps.js",
            "line": 56,
            "description": "当前处于第几步，默认为0，也就是说所有的步骤都没有开始，如果到第一步的话将currentStep设置为1即可，注意currentStep不可以超过list数组长度",
            "itemtype": "property",
            "name": "currentStep",
            "type": "Number",
            "default": "0",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/Steps.js",
            "line": 63,
            "description": "点击每一步的回调，function(str,index){} str为步骤名称，index为第几步（从1开始计数）",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "default": "null",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/Swipe.js",
            "line": 39,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'swipe'",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/Swipe.js",
            "line": 46,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/Swipe.js",
            "line": 52,
            "description": "按钮组",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/Switch.js",
            "line": 29,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'switch'",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/Switch.js",
            "line": 36,
            "description": "默认开关值",
            "itemtype": "property",
            "name": "defaultChecked",
            "type": "Boolean",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/Switch.js",
            "line": 42,
            "description": "开关值",
            "itemtype": "property",
            "name": "checked",
            "type": "Boolean",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/Switch.js",
            "line": 48,
            "description": "更改值时触发的回调",
            "itemtype": "event",
            "name": "onChange",
            "type": "Function",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/Tab.js",
            "line": 40,
            "description": "选项卡的标题文字，默认为‘tab’",
            "itemtype": "property",
            "name": "heading",
            "type": "String",
            "default": "'tab'",
            "class": "Tab",
            "module": "选项卡"
        },
        {
            "file": "src/Tab.js",
            "line": 47,
            "description": "点击事件的回调函数",
            "itemtype": "method",
            "name": "onTabChange",
            "type": "Function",
            "default": "null",
            "class": "Tab",
            "module": "选项卡"
        },
        {
            "file": "src/TableView.js",
            "line": 32,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'table-view'",
            "class": "TableView",
            "module": "布局组件"
        },
        {
            "file": "src/TableView.js",
            "line": 39,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "TableView",
            "module": "布局组件"
        },
        {
            "file": "src/Tabset.js",
            "line": 68,
            "description": "指定默认选中的选项卡，默认为0",
            "itemtype": "property",
            "name": "activeIndex",
            "type": "Number",
            "default": "0",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 75,
            "description": "是否竖排",
            "itemtype": "property",
            "name": "vertical",
            "type": "Boolean",
            "default": "false || null",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 82,
            "description": "设置选项卡头部的宽度，只有竖排的情况下才起作用",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "'20'",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 89,
            "description": "点击事件的回调函数,返回当前选中项",
            "itemtype": "method",
            "name": "onTabsetChange",
            "type": "Function",
            "default": "null",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 110,
            "description": "首次进入获取active",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Tabset.js",
            "line": 116,
            "description": "props再次改变，再次判断active",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/Textarea.js",
            "line": 45,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'textarea'",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 52,
            "description": "默认值",
            "itemtype": "property",
            "name": "defaultValue",
            "type": "String",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 58,
            "description": "值",
            "itemtype": "property",
            "name": "value",
            "type": "String",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 64,
            "description": "输入时执行的回调",
            "itemtype": "event",
            "name": "onChange",
            "type": "Function",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 70,
            "description": "是否显示输入计数",
            "itemtype": "property",
            "name": "count",
            "type": "Boolean",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Textarea.js",
            "line": 76,
            "description": "可输入的总长度",
            "itemtype": "property",
            "name": "maxLength",
            "type": "Number",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 56,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'whisper'",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 63,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 69,
            "description": "显示的目标气泡",
            "itemtype": "property",
            "name": "target",
            "type": "Object",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 75,
            "description": "气泡的位置,默认bottom",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 81,
            "description": "气泡距离点击物的位置,默认15",
            "itemtype": "property",
            "name": "distance",
            "type": "Number",
            "class": "Whisper",
            "module": "提示组件"
        },
        {
            "file": "src/Whisper.js",
            "line": 87,
            "description": "气泡显隐时可执行的额外函数,自定义",
            "itemtype": "method",
            "name": "onTargetChange",
            "type": "Function",
            "class": "Whisper",
            "module": "提示组件"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: demo",
            "line": " src/menu/Menu.js:25"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/Menu.js:25"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuBody.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuBody.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuHeader.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuHeader.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuItem.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuItem.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuList.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuList.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuNav.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuNav.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/modal/Alert.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/modal/Alert.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/modal/Dialog.js:18"
        },
        {
            "message": "unknown tag: show",
            "line": " src/modal/Dialog.js:18"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/modal/Prompt.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/modal/Prompt.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Accordion.js:22"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Accordion.js:22"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Animate.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Animate.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Badge.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Badge.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Button.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Button.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ButtonGroup.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ButtonGroup.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Col.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Col.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Drag.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Drag.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/FormGroup.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/FormGroup.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Grid.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Grid.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Icon.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Icon.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ImageList.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ImageList.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Input.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Input.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Label.js:14"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Label.js:14"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/LoadingList.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/LoadingList.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Popover.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Popover.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Popup.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Popup.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Row.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Row.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Slider.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Slider.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Star.js:16"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Star.js:16"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Steps.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Steps.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Swipe.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Swipe.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Switch.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Switch.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tab.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Tab.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/TableView.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/TableView.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Tabset.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Tabset.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Textarea.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Textarea.js:17"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Toast.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Toast.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/Whisper.js:17"
        },
        {
            "message": "unknown tag: show",
            "line": " src/Whisper.js:17"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/ClassNameMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/MethodMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/PropertyMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/11/28.",
            "line": " src/utils/Tool.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/constants.js:1"
        },
        {
            "message": "Missing item type\n状态",
            "line": " src/utils/constants.js:11"
        },
        {
            "message": "Missing item type\n颜色",
            "line": " src/utils/constants.js:62"
        },
        {
            "message": "Missing item type\nform列表相关",
            "line": " src/utils/constants.js:76"
        },
        {
            "message": "Missing item type\ntab",
            "line": " src/utils/constants.js:86"
        },
        {
            "message": "Missing item type\nA recursive merge between two objects.",
            "line": " src/utils/extend.js:5"
        },
        {
            "message": "Missing item type\n首次进入获取active",
            "line": " src/Tabset.js:110"
        },
        {
            "message": "Missing item type\nprops再次改变，再次判断active",
            "line": " src/Tabset.js:116"
        }
    ]
}
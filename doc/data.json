{
    "project": {
        "name": "phoenix-ui",
        "description": {
            "type": "Buffer",
            "data": [
                60,
                100,
                105,
                118,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                112,
                111,
                115,
                105,
                116,
                105,
                111,
                110,
                58,
                114,
                101,
                108,
                97,
                116,
                105,
                118,
                101,
                59,
                32,
                109,
                97,
                114,
                103,
                105,
                110,
                58,
                32,
                45,
                49,
                53,
                112,
                120,
                32,
                45,
                50,
                48,
                112,
                120,
                32,
                49,
                53,
                112,
                120,
                59,
                112,
                97,
                100,
                100,
                105,
                110,
                103,
                58,
                32,
                53,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                32,
                54,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                59,
                98,
                111,
                120,
                45,
                115,
                105,
                122,
                105,
                110,
                103,
                58,
                32,
                98,
                111,
                114,
                100,
                101,
                114,
                45,
                98,
                111,
                120,
                59,
                98,
                97,
                99,
                107,
                103,
                114,
                111,
                117,
                110,
                100,
                45,
                99,
                111,
                108,
                111,
                114,
                58,
                32,
                35,
                51,
                56,
                98,
                55,
                101,
                97,
                59,
                111,
                118,
                101,
                114,
                102,
                108,
                111,
                119,
                58,
                32,
                104,
                105,
                100,
                100,
                101,
                110,
                59,
                116,
                101,
                120,
                116,
                45,
                97,
                108,
                105,
                103,
                110,
                58,
                99,
                101,
                110,
                116,
                101,
                114,
                59,
                32,
                99,
                111,
                108,
                111,
                114,
                58,
                35,
                102,
                102,
                102,
                59,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                97,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                99,
                111,
                108,
                111,
                114,
                58,
                35,
                102,
                102,
                102,
                59,
                112,
                111,
                115,
                105,
                116,
                105,
                111,
                110,
                58,
                32,
                97,
                98,
                115,
                111,
                108,
                117,
                116,
                101,
                59,
                114,
                105,
                103,
                104,
                116,
                58,
                50,
                53,
                112,
                120,
                59,
                116,
                111,
                112,
                58,
                49,
                53,
                112,
                120,
                59,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                100,
                111,
                99,
                95,
                118,
                49,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                34,
                62,
                86,
                101,
                114,
                115,
                105,
                111,
                110,
                32,
                49,
                46,
                55,
                46,
                52,
                32,
                230,
                150,
                135,
                230,
                161,
                163,
                60,
                47,
                97,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                104,
                49,
                62,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                60,
                47,
                104,
                49,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                45,
                116,
                111,
                112,
                58,
                49,
                53,
                112,
                120,
                34,
                62,
                86,
                101,
                114,
                115,
                105,
                111,
                110,
                32,
                50,
                46,
                48,
                46,
                48,
                60,
                47,
                112,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                45,
                116,
                111,
                112,
                58,
                49,
                53,
                112,
                120,
                34,
                62,
                229,
                159,
                186,
                228,
                186,
                142,
                82,
                101,
                97,
                99,
                116,
                230,
                161,
                134,
                230,
                158,
                182,
                229,
                174,
                158,
                231,
                142,
                176,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                60,
                47,
                112,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                45,
                116,
                111,
                112,
                58,
                49,
                53,
                112,
                120,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                60,
                97,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                99,
                111,
                108,
                111,
                114,
                58,
                35,
                102,
                102,
                102,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                34,
                62,
                71,
                105,
                116,
                104,
                117,
                98,
                60,
                47,
                97,
                62,
                32,
                124,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                60,
                97,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                99,
                111,
                108,
                111,
                114,
                58,
                35,
                102,
                102,
                102,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                101,
                120,
                97,
                109,
                112,
                108,
                101,
                115,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                34,
                62,
                69,
                120,
                97,
                109,
                112,
                108,
                101,
                115,
                60,
                47,
                97,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                47,
                112,
                62,
                10,
                60,
                47,
                100,
                105,
                118,
                62,
                10,
                60,
                112,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                108,
                101,
                97,
                100,
                34,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                230,
                152,
                175,
                229,
                159,
                186,
                228,
                186,
                142,
                82,
                101,
                97,
                99,
                116,
                230,
                161,
                134,
                230,
                158,
                182,
                229,
                174,
                158,
                231,
                142,
                176,
                231,
                154,
                132,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                229,
                174,
                137,
                232,
                163,
                133,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                50,
                34,
                62,
                10,
                36,
                32,
                110,
                112,
                109,
                32,
                105,
                110,
                115,
                116,
                97,
                108,
                108,
                32,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                32,
                45,
                45,
                115,
                97,
                118,
                101,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                99,
                111,
                108,
                111,
                114,
                58,
                114,
                101,
                100,
                34,
                62,
                231,
                137,
                185,
                229,
                136,
                171,
                230,
                179,
                168,
                230,
                132,
                143,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                104,
                51,
                62,
                233,
                146,
                136,
                229,
                175,
                185,
                100,
                112,
                114,
                231,
                154,
                132,
                229,
                177,
                143,
                229,
                185,
                149,
                229,
                133,
                188,
                229,
                174,
                185,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                229,
                156,
                168,
                104,
                116,
                109,
                108,
                230,
                150,
                135,
                228,
                187,
                182,
                231,
                154,
                132,
                104,
                101,
                97,
                100,
                229,
                133,
                131,
                231,
                180,
                160,
                228,
                184,
                173,
                229,
                188,
                149,
                229,
                133,
                165,
                103,
                102,
                115,
                45,
                118,
                105,
                101,
                119,
                112,
                111,
                114,
                116,
                46,
                106,
                115,
                230,
                150,
                135,
                228,
                187,
                182,
                239,
                188,
                140,
                229,
                133,
                188,
                229,
                174,
                185,
                228,
                184,
                141,
                229,
                144,
                140,
                230,
                137,
                139,
                230,
                156,
                186,
                228,
                184,
                141,
                229,
                144,
                140,
                100,
                112,
                114,
                229,
                184,
                166,
                230,
                157,
                165,
                231,
                154,
                132,
                233,
                128,
                130,
                233,
                133,
                141,
                233,
                151,
                174,
                233,
                162,
                152,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                38,
                35,
                54,
                48,
                59,
                115,
                99,
                114,
                105,
                112,
                116,
                32,
                115,
                114,
                99,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                119,
                119,
                119,
                46,
                100,
                112,
                102,
                105,
                108,
                101,
                46,
                99,
                111,
                109,
                47,
                97,
                112,
                112,
                47,
                103,
                102,
                115,
                45,
                118,
                105,
                101,
                119,
                112,
                111,
                114,
                116,
                47,
                103,
                102,
                115,
                45,
                118,
                105,
                101,
                119,
                112,
                111,
                114,
                116,
                46,
                106,
                115,
                34,
                38,
                35,
                54,
                50,
                59,
                38,
                35,
                54,
                48,
                59,
                47,
                115,
                99,
                114,
                105,
                112,
                116,
                38,
                35,
                54,
                50,
                59,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                60,
                112,
                62,
                230,
                136,
                150,
                231,
                155,
                180,
                230,
                142,
                165,
                230,
                148,
                190,
                231,
                189,
                174,
                228,
                187,
                163,
                231,
                160,
                129,
                239,
                188,
                154,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                38,
                35,
                54,
                48,
                59,
                115,
                99,
                114,
                105,
                112,
                116,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                40,
                102,
                117,
                110,
                99,
                116,
                105,
                111,
                110,
                40,
                98,
                97,
                115,
                101,
                70,
                111,
                110,
                116,
                83,
                105,
                122,
                101,
                44,
                102,
                111,
                110,
                116,
                115,
                99,
                97,
                108,
                101,
                41,
                123,
                118,
                97,
                114,
                32,
                95,
                98,
                97,
                115,
                101,
                70,
                111,
                110,
                116,
                83,
                105,
                122,
                101,
                61,
                98,
                97,
                115,
                101,
                70,
                111,
                110,
                116,
                83,
                105,
                122,
                101,
                124,
                124,
                49,
                48,
                48,
                59,
                118,
                97,
                114,
                32,
                95,
                102,
                111,
                110,
                116,
                115,
                99,
                97,
                108,
                101,
                61,
                102,
                111,
                110,
                116,
                115,
                99,
                97,
                108,
                101,
                124,
                124,
                49,
                59,
                118,
                97,
                114,
                32,
                119,
                105,
                110,
                61,
                119,
                105,
                110,
                100,
                111,
                119,
                59,
                118,
                97,
                114,
                32,
                100,
                111,
                99,
                61,
                119,
                105,
                110,
                46,
                100,
                111,
                99,
                117,
                109,
                101,
                110,
                116,
                59,
                118,
                97,
                114,
                32,
                117,
                97,
                61,
                110,
                97,
                118,
                105,
                103,
                97,
                116,
                111,
                114,
                46,
                117,
                115,
                101,
                114,
                65,
                103,
                101,
                110,
                116,
                59,
                118,
                97,
                114,
                32,
                109,
                97,
                116,
                99,
                104,
                101,
                115,
                61,
                117,
                97,
                46,
                109,
                97,
                116,
                99,
                104,
                40,
                47,
                65,
                110,
                100,
                114,
                111,
                105,
                100,
                91,
                92,
                83,
                92,
                115,
                93,
                43,
                65,
                112,
                112,
                108,
                101,
                87,
                101,
                98,
                107,
                105,
                116,
                92,
                47,
                40,
                92,
                100,
                123,
                51,
                125,
                41,
                47,
                105,
                41,
                59,
                118,
                97,
                114,
                32,
                85,
                67,
                118,
                101,
                114,
                115,
                105,
                111,
                110,
                61,
                117,
                97,
                46,
                109,
                97,
                116,
                99,
                104,
                40,
                47,
                85,
                51,
                92,
                47,
                40,
                40,
                92,
                100,
                43,
                124,
                92,
                46,
                41,
                123,
                53,
                44,
                125,
                41,
                47,
                105,
                41,
                59,
                118,
                97,
                114,
                32,
                105,
                115,
                85,
                67,
                72,
                100,
                61,
                85,
                67,
                118,
                101,
                114,
                115,
                105,
                111,
                110,
                38,
                38,
                112,
                97,
                114,
                115,
                101,
                73,
                110,
                116,
                40,
                85,
                67,
                118,
                101,
                114,
                115,
                105,
                111,
                110,
                91,
                49,
                93,
                46,
                115,
                112,
                108,
                105,
                116,
                40,
                34,
                46,
                34,
                41,
                46,
                106,
                111,
                105,
                110,
                40,
                34,
                34,
                41,
                44,
                49,
                48,
                41,
                62,
                61,
                56,
                48,
                59,
                118,
                97,
                114,
                32,
                105,
                115,
                73,
                111,
                115,
                61,
                110,
                97,
                118,
                105,
                103,
                97,
                116,
                111,
                114,
                46,
                97,
                112,
                112,
                86,
                101,
                114,
                115,
                105,
                111,
                110,
                46,
                109,
                97,
                116,
                99,
                104,
                40,
                47,
                40,
                105,
                112,
                104,
                111,
                110,
                101,
                124,
                105,
                112,
                97,
                100,
                124,
                105,
                112,
                111,
                100,
                41,
                47,
                103,
                105,
                41,
                59,
                118,
                97,
                114,
                32,
                100,
                112,
                114,
                61,
                119,
                105,
                110,
                46,
                100,
                101,
                118,
                105,
                99,
                101,
                80,
                105,
                120,
                101,
                108,
                82,
                97,
                116,
                105,
                111,
                124,
                124,
                49,
                59,
                105,
                102,
                40,
                33,
                105,
                115,
                73,
                111,
                115,
                38,
                38,
                33,
                40,
                109,
                97,
                116,
                99,
                104,
                101,
                115,
                38,
                38,
                109,
                97,
                116,
                99,
                104,
                101,
                115,
                91,
                49,
                93,
                62,
                53,
                51,
                52,
                41,
                38,
                38,
                33,
                105,
                115,
                85,
                67,
                72,
                100,
                41,
                123,
                100,
                112,
                114,
                61,
                49,
                125,
                118,
                97,
                114,
                32,
                115,
                99,
                97,
                108,
                101,
                61,
                49,
                47,
                100,
                112,
                114,
                59,
                118,
                97,
                114,
                32,
                109,
                101,
                116,
                97,
                69,
                108,
                61,
                100,
                111,
                99,
                46,
                113,
                117,
                101,
                114,
                121,
                83,
                101,
                108,
                101,
                99,
                116,
                111,
                114,
                40,
                39,
                109,
                101,
                116,
                97,
                91,
                110,
                97,
                109,
                101,
                61,
                34,
                118,
                105,
                101,
                119,
                112,
                111,
                114,
                116,
                34,
                93,
                39,
                41,
                59,
                105,
                102,
                40,
                33,
                109,
                101,
                116,
                97,
                69,
                108,
                41,
                123,
                109,
                101,
                116,
                97,
                69,
                108,
                61,
                100,
                111,
                99,
                46,
                99,
                114,
                101,
                97,
                116,
                101,
                69,
                108,
                101,
                109,
                101,
                110,
                116,
                40,
                34,
                109,
                101,
                116,
                97,
                34,
                41,
                59,
                109,
                101,
                116,
                97,
                69,
                108,
                46,
                115,
                101,
                116,
                65,
                116,
                116,
                114,
                105,
                98,
                117,
                116,
                101,
                40,
                34,
                110,
                97,
                109,
                101,
                34,
                44,
                34,
                118,
                105,
                101,
                119,
                112,
                111,
                114,
                116,
                34,
                41,
                59,
                100,
                111,
                99,
                46,
                104,
                101,
                97,
                100,
                46,
                97,
                112,
                112,
                101,
                110,
                100,
                67,
                104,
                105,
                108,
                100,
                40,
                109,
                101,
                116,
                97,
                69,
                108,
                41,
                125,
                109,
                101,
                116,
                97,
                69,
                108,
                46,
                115,
                101,
                116,
                65,
                116,
                116,
                114,
                105,
                98,
                117,
                116,
                101,
                40,
                34,
                99,
                111,
                110,
                116,
                101,
                110,
                116,
                34,
                44,
                34,
                119,
                105,
                100,
                116,
                104,
                61,
                100,
                101,
                118,
                105,
                99,
                101,
                45,
                119,
                105,
                100,
                116,
                104,
                44,
                117,
                115,
                101,
                114,
                45,
                115,
                99,
                97,
                108,
                97,
                98,
                108,
                101,
                61,
                110,
                111,
                44,
                105,
                110,
                105,
                116,
                105,
                97,
                108,
                45,
                115,
                99,
                97,
                108,
                101,
                61,
                34,
                43,
                115,
                99,
                97,
                108,
                101,
                43,
                34,
                44,
                109,
                97,
                120,
                105,
                109,
                117,
                109,
                45,
                115,
                99,
                97,
                108,
                101,
                61,
                34,
                43,
                115,
                99,
                97,
                108,
                101,
                43,
                34,
                44,
                109,
                105,
                110,
                105,
                109,
                117,
                109,
                45,
                115,
                99,
                97,
                108,
                101,
                61,
                34,
                43,
                115,
                99,
                97,
                108,
                101,
                41,
                59,
                100,
                111,
                99,
                46,
                100,
                111,
                99,
                117,
                109,
                101,
                110,
                116,
                69,
                108,
                101,
                109,
                101,
                110,
                116,
                46,
                115,
                116,
                121,
                108,
                101,
                46,
                102,
                111,
                110,
                116,
                83,
                105,
                122,
                101,
                61,
                95,
                98,
                97,
                115,
                101,
                70,
                111,
                110,
                116,
                83,
                105,
                122,
                101,
                47,
                50,
                42,
                100,
                112,
                114,
                42,
                95,
                102,
                111,
                110,
                116,
                115,
                99,
                97,
                108,
                101,
                43,
                34,
                112,
                120,
                34,
                125,
                41,
                40,
                41,
                59,
                10,
                38,
                35,
                54,
                48,
                59,
                47,
                115,
                99,
                114,
                105,
                112,
                116,
                38,
                35,
                54,
                50,
                59,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                228,
                189,
                191,
                231,
                148,
                168,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                104,
                51,
                62,
                67,
                111,
                109,
                109,
                111,
                110,
                74,
                83,
                32,
                38,
                32,
                69,
                83,
                54,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                228,
                187,
                142,
                50,
                46,
                48,
                231,
                137,
                136,
                230,
                156,
                172,
                229,
                188,
                128,
                229,
                167,
                139,
                239,
                188,
                140,
                229,
                187,
                186,
                232,
                174,
                174,
                233,
                131,
                189,
                228,
                189,
                191,
                231,
                148,
                168,
                228,
                187,
                165,
                228,
                184,
                139,
                230,
                150,
                185,
                229,
                188,
                143,
                229,
                188,
                149,
                229,
                133,
                165,
                239,
                188,
                140,
                229,
                143,
                175,
                229,
                135,
                143,
                229,
                176,
                145,
                229,
                134,
                151,
                228,
                189,
                153,
                228,
                187,
                163,
                231,
                160,
                129,
                231,
                154,
                132,
                230,
                137,
                147,
                229,
                140,
                133,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                47,
                47,
                32,
                67,
                111,
                109,
                109,
                111,
                110,
                74,
                83,
                10,
                118,
                97,
                114,
                32,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                61,
                32,
                114,
                101,
                113,
                117,
                105,
                114,
                101,
                40,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                108,
                105,
                98,
                47,
                98,
                117,
                116,
                116,
                111,
                110,
                39,
                41,
                10,
                47,
                47,
                32,
                69,
                83,
                54,
                10,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                102,
                114,
                111,
                109,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                108,
                105,
                98,
                47,
                98,
                117,
                116,
                116,
                111,
                110,
                39,
                10,
                46,
                46,
                46,
                10,
                114,
                101,
                110,
                100,
                101,
                114,
                58,
                32,
                102,
                117,
                110,
                99,
                116,
                105,
                111,
                110,
                40,
                41,
                32,
                123,
                10,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                40,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                112,
                104,
                83,
                116,
                121,
                108,
                101,
                61,
                34,
                105,
                110,
                102,
                111,
                34,
                32,
                112,
                104,
                83,
                105,
                122,
                101,
                61,
                34,
                108,
                103,
                34,
                32,
                97,
                99,
                116,
                105,
                118,
                101,
                38,
                35,
                54,
                50,
                59,
                230,
                140,
                137,
                233,
                146,
                174,
                38,
                35,
                54,
                48,
                59,
                47,
                66,
                117,
                116,
                116,
                111,
                110,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                47,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                41,
                59,
                10,
                125,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                60,
                104,
                51,
                62,
                66,
                114,
                111,
                119,
                115,
                101,
                114,
                32,
                103,
                108,
                111,
                98,
                97,
                108,
                115,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                38,
                35,
                54,
                48,
                59,
                115,
                99,
                114,
                105,
                112,
                116,
                32,
                115,
                114,
                99,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                100,
                105,
                115,
                116,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                46,
                109,
                105,
                110,
                46,
                106,
                115,
                34,
                38,
                35,
                54,
                50,
                59,
                38,
                35,
                54,
                48,
                59,
                47,
                115,
                99,
                114,
                105,
                112,
                116,
                38,
                35,
                54,
                50,
                59,
                10,
                46,
                46,
                46,
                10,
                114,
                101,
                110,
                100,
                101,
                114,
                58,
                32,
                102,
                117,
                110,
                99,
                116,
                105,
                111,
                110,
                40,
                41,
                32,
                123,
                10,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                40,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                46,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                112,
                104,
                83,
                116,
                121,
                108,
                101,
                61,
                34,
                105,
                110,
                102,
                111,
                34,
                32,
                112,
                104,
                83,
                105,
                122,
                101,
                61,
                34,
                108,
                103,
                34,
                32,
                97,
                99,
                116,
                105,
                118,
                101,
                38,
                35,
                54,
                50,
                59,
                230,
                140,
                137,
                233,
                146,
                174,
                38,
                35,
                54,
                48,
                59,
                47,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                46,
                66,
                117,
                116,
                116,
                111,
                110,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                47,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                41,
                59,
                10,
                125,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                229,
                133,
                188,
                229,
                174,
                185,
                230,
                128,
                167,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                117,
                108,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                65,
                110,
                100,
                114,
                111,
                105,
                100,
                32,
                52,
                46,
                52,
                46,
                50,
                43,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                73,
                79,
                83,
                32,
                56,
                43,
                32,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                67,
                104,
                114,
                111,
                109,
                101,
                60,
                47,
                108,
                105,
                62,
                10,
                60,
                47,
                117,
                108,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                86,
                101,
                114,
                115,
                105,
                111,
                110,
                32,
                50,
                46,
                48,
                46,
                48,
                32,
                233,
                135,
                141,
                229,
                164,
                167,
                228,
                191,
                174,
                230,
                148,
                185,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                111,
                108,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                229,
                142,
                187,
                230,
                142,
                137,
                84,
                97,
                98,
                108,
                101,
                86,
                105,
                101,
                119,
                229,
                146,
                140,
                70,
                111,
                114,
                109,
                71,
                114,
                111,
                117,
                112,
                239,
                188,
                140,
                230,
                150,
                176,
                229,
                162,
                158,
                76,
                105,
                115,
                116,
                239,
                188,
                140,
                230,
                156,
                137,
                233,
                156,
                128,
                232,
                166,
                129,
                102,
                111,
                114,
                109,
                229,
                133,
                131,
                231,
                180,
                160,
                231,
                154,
                132,
                229,
                143,
                175,
                232,
                135,
                170,
                232,
                161,
                140,
                229,
                156,
                168,
                229,
                164,
                150,
                229,
                177,
                130,
                229,
                138,
                160,
                228,
                184,
                138,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                229,
                142,
                187,
                230,
                142,
                137,
                76,
                111,
                97,
                100,
                105,
                110,
                103,
                76,
                105,
                115,
                116,
                231,
                187,
                132,
                228,
                187,
                182,
                239,
                188,
                140,
                230,
                150,
                176,
                229,
                162,
                158,
                80,
                117,
                108,
                108,
                85,
                112,
                239,
                188,
                140,
                231,
                174,
                128,
                229,
                140,
                150,
                65,
                80,
                73,
                239,
                188,
                140,
                228,
                191,
                174,
                229,
                164,
                141,
                230,
                187,
                145,
                229,
                138,
                168,
                232,
                167,
                166,
                229,
                143,
                145,
                231,
                154,
                132,
                66,
                85,
                71,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                229,
                142,
                187,
                230,
                142,
                137,
                87,
                104,
                105,
                115,
                112,
                101,
                114,
                231,
                187,
                132,
                228,
                187,
                182,
                239,
                188,
                140,
                228,
                191,
                174,
                230,
                148,
                185,
                80,
                111,
                112,
                111,
                118,
                101,
                114,
                231,
                154,
                132,
                228,
                189,
                191,
                231,
                148,
                168,
                230,
                150,
                185,
                229,
                188,
                143,
                229,
                146,
                140,
                228,
                189,
                141,
                231,
                189,
                174,
                232,
                174,
                161,
                231,
                174,
                151,
                239,
                188,
                140,
                228,
                188,
                152,
                229,
                140,
                150,
                228,
                189,
                141,
                231,
                189,
                174,
                230,
                152,
                190,
                231,
                164,
                186,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                73,
                110,
                112,
                117,
                116,
                230,
                139,
                134,
                229,
                136,
                134,
                230,
                136,
                144,
                73,
                110,
                112,
                117,
                116,
                227,
                128,
                129,
                67,
                104,
                101,
                99,
                107,
                98,
                111,
                120,
                227,
                128,
                129,
                82,
                97,
                100,
                105,
                111,
                227,
                128,
                130,
                73,
                110,
                112,
                117,
                116,
                230,
                150,
                176,
                229,
                162,
                158,
                112,
                104,
                73,
                99,
                111,
                110,
                227,
                128,
                129,
                99,
                108,
                101,
                97,
                114,
                227,
                128,
                129,
                118,
                105,
                115,
                105,
                98,
                108,
                101,
                231,
                173,
                137,
                229,
                177,
                158,
                230,
                128,
                167,
                239,
                188,
                155,
                228,
                184,
                141,
                229,
                134,
                141,
                233,
                156,
                128,
                232,
                166,
                129,
                229,
                164,
                150,
                233,
                131,
                168,
                111,
                110,
                67,
                104,
                97,
                110,
                103,
                101,
                231,
                154,
                132,
                228,
                189,
                191,
                231,
                148,
                168,
                230,
                150,
                185,
                229,
                188,
                143,
                239,
                188,
                140,
                233,
                128,
                154,
                232,
                191,
                135,
                103,
                101,
                116,
                86,
                97,
                108,
                117,
                101,
                67,
                97,
                108,
                108,
                98,
                97,
                99,
                107,
                232,
                142,
                183,
                229,
                143,
                150,
                229,
                189,
                147,
                229,
                137,
                141,
                73,
                110,
                112,
                117,
                116,
                231,
                154,
                132,
                229,
                128,
                188,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                230,
                150,
                176,
                229,
                162,
                158,
                83,
                101,
                97,
                114,
                99,
                104,
                66,
                97,
                114,
                231,
                187,
                132,
                228,
                187,
                182,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                230,
                150,
                176,
                229,
                162,
                158,
                73,
                109,
                97,
                103,
                101,
                231,
                187,
                132,
                228,
                187,
                182,
                239,
                188,
                140,
                229,
                143,
                175,
                229,
                174,
                154,
                228,
                185,
                137,
                229,
                155,
                190,
                231,
                137,
                135,
                229,
                156,
                168,
                229,
                140,
                186,
                229,
                159,
                159,
                229,
                134,
                133,
                231,
                154,
                132,
                229,
                164,
                167,
                229,
                176,
                143,
                227,
                128,
                129,
                228,
                189,
                141,
                231,
                189,
                174,
                229,
                146,
                140,
                230,
                152,
                175,
                229,
                144,
                166,
                230,
                135,
                146,
                229,
                138,
                160,
                232,
                189,
                189,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                76,
                97,
                98,
                101,
                108,
                231,
                187,
                132,
                228,
                187,
                182,
                228,
                189,
                191,
                231,
                148,
                168,
                230,
                150,
                185,
                229,
                188,
                143,
                230,
                148,
                185,
                229,
                143,
                152,
                239,
                188,
                140,
                228,
                184,
                186,
                231,
                187,
                159,
                228,
                184,
                128,
                232,
                167,
                132,
                232,
                140,
                131,
                231,
                148,
                168,
                105,
                99,
                111,
                110,
                102,
                111,
                110,
                116,
                230,
                157,
                165,
                230,
                155,
                191,
                228,
                187,
                163,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                112,
                104,
                45,
                102,
                105,
                108,
                116,
                101,
                114,
                229,
                144,
                136,
                229,
                185,
                182,
                229,
                136,
                176,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                228,
                184,
                173,
                239,
                188,
                140,
                229,
                143,
                175,
                228,
                187,
                165,
                233,
                128,
                154,
                232,
                191,
                135,
                96,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                80,
                104,
                70,
                105,
                108,
                116,
                101,
                114,
                32,
                102,
                114,
                111,
                109,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                108,
                105,
                98,
                47,
                112,
                104,
                45,
                102,
                105,
                108,
                116,
                101,
                114,
                39,
                96,
                229,
                188,
                149,
                229,
                133,
                165,
                228,
                189,
                191,
                231,
                148,
                168,
                239,
                188,
                140,
                230,
                150,
                176,
                229,
                162,
                158,
                229,
                146,
                140,
                228,
                191,
                174,
                230,
                148,
                185,
                233,
                131,
                168,
                229,
                136,
                134,
                65,
                80,
                73,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                229,
                164,
                154,
                231,
                187,
                132,
                228,
                187,
                182,
                228,
                184,
                176,
                229,
                175,
                140,
                65,
                80,
                73,
                239,
                188,
                140,
                229,
                133,
                183,
                228,
                189,
                147,
                229,
                143,
                130,
                232,
                128,
                131,
                230,
                150,
                135,
                230,
                161,
                163,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                230,
                137,
                128,
                230,
                156,
                137,
                231,
                154,
                132,
                229,
                155,
                158,
                232,
                176,
                131,
                229,
                135,
                189,
                230,
                149,
                176,
                230,
                155,
                180,
                229,
                144,
                141,
                239,
                188,
                140,
                229,
                166,
                130,
                99,
                108,
                105,
                99,
                107,
                67,
                97,
                108,
                108,
                98,
                97,
                99,
                107,
                239,
                188,
                136,
                228,
                186,
                139,
                228,
                187,
                182,
                43,
                67,
                97,
                108,
                108,
                98,
                97,
                99,
                107,
                239,
                188,
                137,
                231,
                154,
                132,
                229,
                145,
                189,
                229,
                144,
                141,
                230,
                160,
                135,
                229,
                135,
                134,
                239,
                188,
                136,
                233,
                153,
                164,
                228,
                186,
                134,
                232,
                161,
                168,
                229,
                141,
                149,
                229,
                133,
                131,
                231,
                180,
                160,
                228,
                187,
                141,
                231,
                132,
                182,
                228,
                189,
                191,
                231,
                148,
                168,
                231,
                154,
                132,
                230,
                152,
                175,
                114,
                101,
                97,
                99,
                116,
                230,
                160,
                135,
                229,
                135,
                134,
                231,
                154,
                132,
                111,
                110,
                67,
                104,
                97,
                110,
                103,
                101,
                239,
                188,
                137,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                108,
                105,
                62,
                230,
                160,
                183,
                229,
                188,
                143,
                232,
                167,
                132,
                232,
                140,
                131,
                229,
                140,
                150,
                227,
                128,
                130,
                60,
                47,
                108,
                105,
                62,
                10,
                60,
                47,
                111,
                108,
                62,
                10,
                60,
                112,
                62,
                230,
                155,
                180,
                232,
                175,
                166,
                231,
                187,
                134,
                231,
                154,
                132,
                229,
                134,
                133,
                229,
                174,
                185,
                229,
                143,
                175,
                229,
                143,
                130,
                232,
                128,
                131,
                119,
                105,
                107,
                105,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                119,
                105,
                107,
                105,
                46,
                115,
                97,
                110,
                107,
                117,
                97,
                105,
                46,
                99,
                111,
                109,
                47,
                112,
                97,
                103,
                101,
                115,
                47,
                118,
                105,
                101,
                119,
                112,
                97,
                103,
                101,
                46,
                97,
                99,
                116,
                105,
                111,
                110,
                63,
                112,
                97,
                103,
                101,
                73,
                100,
                61,
                49,
                48,
                48,
                50,
                55,
                54,
                57,
                55,
                52,
                50,
                34,
                62,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                229,
                141,
                135,
                231,
                186,
                167,
                232,
                175,
                180,
                230,
                152,
                142,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                231,
                187,
                132,
                228,
                187,
                182,
                230,
                139,
                147,
                229,
                177,
                149,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                104,
                51,
                62,
                231,
                187,
                132,
                228,
                187,
                182,
                231,
                187,
                167,
                230,
                137,
                191,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                102,
                114,
                111,
                109,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                108,
                105,
                98,
                47,
                98,
                117,
                116,
                116,
                111,
                110,
                39,
                10,
                10,
                32,
                32,
                32,
                32,
                101,
                120,
                112,
                111,
                114,
                116,
                32,
                100,
                101,
                102,
                97,
                117,
                108,
                116,
                32,
                99,
                108,
                97,
                115,
                115,
                32,
                77,
                121,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                101,
                120,
                116,
                101,
                110,
                100,
                115,
                32,
                66,
                117,
                116,
                116,
                111,
                110,
                123,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                46,
                46,
                46,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                47,
                47,
                32,
                230,
                150,
                185,
                230,
                179,
                149,
                232,
                166,
                134,
                231,
                155,
                150,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                114,
                101,
                110,
                100,
                101,
                114,
                73,
                99,
                111,
                110,
                40,
                41,
                123,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                110,
                117,
                108,
                108,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                125,
                10,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                114,
                101,
                110,
                100,
                101,
                114,
                40,
                41,
                123,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                40,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                100,
                105,
                118,
                32,
                99,
                108,
                97,
                115,
                115,
                78,
                97,
                109,
                101,
                61,
                39,
                109,
                121,
                45,
                98,
                117,
                116,
                116,
                111,
                110,
                39,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                46,
                46,
                46,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                47,
                47,
                32,
                230,
                150,
                185,
                230,
                179,
                149,
                232,
                176,
                131,
                231,
                148,
                168,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                123,
                116,
                104,
                105,
                115,
                46,
                114,
                101,
                110,
                100,
                101,
                114,
                66,
                117,
                116,
                116,
                111,
                110,
                40,
                41,
                125,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                38,
                35,
                54,
                48,
                59,
                47,
                100,
                105,
                118,
                38,
                35,
                54,
                50,
                59,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                41,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                125,
                10,
                32,
                32,
                32,
                32,
                125,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                60,
                104,
                51,
                62,
                233,
                171,
                152,
                233,
                152,
                182,
                231,
                187,
                132,
                228,
                187,
                182,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                123,
                67,
                111,
                109,
                112,
                111,
                110,
                101,
                110,
                116,
                125,
                32,
                102,
                114,
                111,
                109,
                32,
                39,
                114,
                101,
                97,
                99,
                116,
                39,
                10,
                32,
                32,
                32,
                32,
                105,
                109,
                112,
                111,
                114,
                116,
                32,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                102,
                114,
                111,
                109,
                32,
                39,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                108,
                105,
                98,
                47,
                98,
                117,
                116,
                116,
                111,
                110,
                39,
                10,
                10,
                32,
                32,
                32,
                32,
                102,
                117,
                110,
                99,
                116,
                105,
                111,
                110,
                32,
                101,
                110,
                104,
                97,
                110,
                99,
                101,
                40,
                87,
                114,
                97,
                112,
                112,
                101,
                100,
                67,
                111,
                109,
                112,
                111,
                110,
                101,
                110,
                116,
                41,
                123,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                99,
                108,
                97,
                115,
                115,
                32,
                101,
                120,
                116,
                101,
                110,
                100,
                115,
                32,
                67,
                111,
                109,
                112,
                111,
                110,
                101,
                110,
                116,
                123,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                46,
                46,
                46,
                10,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                114,
                101,
                110,
                100,
                101,
                114,
                40,
                41,
                123,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                114,
                101,
                116,
                117,
                114,
                110,
                32,
                60,
                87,
                114,
                97,
                112,
                112,
                101,
                100,
                67,
                111,
                109,
                112,
                111,
                110,
                101,
                110,
                116,
                32,
                123,
                46,
                46,
                46,
                116,
                104,
                105,
                115,
                46,
                112,
                114,
                111,
                112,
                115,
                125,
                32,
                47,
                62,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                125,
                10,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                125,
                10,
                32,
                32,
                32,
                32,
                125,
                10,
                10,
                32,
                32,
                32,
                32,
                99,
                111,
                110,
                115,
                116,
                32,
                77,
                121,
                66,
                117,
                116,
                116,
                111,
                110,
                32,
                61,
                32,
                101,
                110,
                104,
                97,
                110,
                99,
                101,
                40,
                66,
                117,
                116,
                116,
                111,
                110,
                41,
                10,
                10,
                32,
                32,
                32,
                32,
                101,
                120,
                112,
                111,
                114,
                116,
                32,
                100,
                101,
                102,
                97,
                117,
                108,
                116,
                32,
                77,
                121,
                66,
                117,
                116,
                116,
                111,
                110,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                10,
                60,
                104,
                50,
                62,
                230,
                160,
                183,
                229,
                188,
                143,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                104,
                51,
                62,
                229,
                133,
                179,
                228,
                186,
                142,
                230,
                141,
                162,
                232,
                130,
                164,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                233,
                187,
                152,
                232,
                174,
                164,
                229,
                146,
                140,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                34,
                62,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                60,
                47,
                97,
                62,
                32,
                40,
                231,
                187,
                132,
                228,
                187,
                182,
                230,
                160,
                183,
                229,
                188,
                143,
                229,
                186,
                147,
                41,
                233,
                133,
                141,
                229,
                144,
                136,
                228,
                189,
                191,
                231,
                148,
                168,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                62,
                229,
                166,
                130,
                230,
                158,
                156,
                232,
                166,
                129,
                230,
                141,
                162,
                230,
                136,
                144,
                105,
                111,
                115,
                228,
                184,
                187,
                233,
                162,
                152,
                231,
                154,
                132,
                231,
                154,
                174,
                232,
                130,
                164,
                239,
                188,
                140,
                229,
                156,
                168,
                230,
                137,
                147,
                229,
                140,
                133,
                228,
                185,
                139,
                229,
                144,
                142,
                231,
                154,
                132,
                99,
                115,
                115,
                230,
                150,
                135,
                228,
                187,
                182,
                229,
                144,
                142,
                229,
                134,
                141,
                229,
                188,
                149,
                229,
                133,
                165,
                105,
                111,
                115,
                45,
                115,
                107,
                105,
                110,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                239,
                188,
                154,
                60,
                47,
                112,
                62,
                10,
                60,
                112,
                114,
                101,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                119,
                101,
                108,
                108,
                32,
                119,
                101,
                108,
                108,
                45,
                115,
                109,
                97,
                108,
                108,
                32,
                115,
                105,
                103,
                110,
                45,
                108,
                101,
                102,
                116,
                51,
                34,
                62,
                10,
                46,
                46,
                46,
                10,
                38,
                35,
                54,
                48,
                59,
                108,
                105,
                110,
                107,
                32,
                114,
                101,
                108,
                61,
                34,
                115,
                116,
                121,
                108,
                101,
                115,
                104,
                101,
                101,
                116,
                34,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                47,
                100,
                105,
                115,
                116,
                47,
                105,
                111,
                115,
                45,
                115,
                107,
                105,
                110,
                46,
                109,
                105,
                110,
                46,
                99,
                115,
                115,
                34,
                32,
                47,
                38,
                35,
                54,
                50,
                59,
                10,
                60,
                47,
                112,
                114,
                101,
                62,
                10,
                60,
                104,
                51,
                62,
                229,
                133,
                179,
                228,
                186,
                142,
                229,
                184,
                131,
                229,
                177,
                128,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                229,
                187,
                186,
                232,
                174,
                174,
                228,
                189,
                191,
                231,
                148,
                168,
                114,
                101,
                109,
                229,
                184,
                131,
                229,
                177,
                128,
                239,
                188,
                140,
                103,
                102,
                115,
                45,
                118,
                105,
                101,
                119,
                112,
                111,
                114,
                116,
                228,
                188,
                154,
                230,
                160,
                185,
                230,
                141,
                174,
                229,
                189,
                147,
                229,
                137,
                141,
                231,
                154,
                132,
                100,
                112,
                114,
                232,
                191,
                155,
                232,
                161,
                140,
                229,
                159,
                186,
                231,
                161,
                128,
                230,
                150,
                135,
                229,
                173,
                151,
                40,
                104,
                116,
                109,
                108,
                32,
                102,
                111,
                110,
                116,
                45,
                115,
                105,
                122,
                101,
                41,
                229,
                164,
                167,
                229,
                176,
                143,
                231,
                154,
                132,
                229,
                136,
                135,
                230,
                141,
                162,
                239,
                188,
                140,
                228,
                189,
                191,
                231,
                148,
                168,
                114,
                101,
                109,
                228,
                188,
                154,
                230,
                160,
                185,
                230,
                141,
                174,
                232,
                175,
                165,
                229,
                159,
                186,
                231,
                161,
                128,
                229,
                173,
                151,
                228,
                189,
                147,
                229,
                184,
                131,
                229,
                177,
                128,
                227,
                128,
                130,
                60,
                98,
                114,
                47,
                62,
                10,
                228,
                184,
                128,
                232,
                136,
                172,
                232,
                174,
                190,
                232,
                174,
                161,
                231,
                187,
                153,
                229,
                135,
                186,
                231,
                154,
                132,
                230,
                152,
                175,
                55,
                53,
                48,
                229,
                174,
                189,
                231,
                154,
                132,
                229,
                159,
                186,
                228,
                186,
                142,
                105,
                112,
                104,
                111,
                110,
                101,
                54,
                231,
                154,
                132,
                85,
                69,
                68,
                239,
                188,
                140,
                229,
                156,
                168,
                229,
                189,
                147,
                229,
                137,
                141,
                229,
                176,
                186,
                229,
                175,
                184,
                229,
                159,
                186,
                231,
                161,
                128,
                228,
                184,
                139,
                60,
                115,
                116,
                114,
                111,
                110,
                103,
                62,
                233,
                153,
                164,
                228,
                187,
                165,
                49,
                48,
                48,
                60,
                47,
                115,
                116,
                114,
                111,
                110,
                103,
                62,
                239,
                188,
                140,
                229,
                176,
                177,
                230,
                152,
                175,
                229,
                190,
                151,
                229,
                136,
                176,
                231,
                154,
                132,
                114,
                101,
                109,
                229,
                128,
                188,
                227,
                128,
                130,
                60,
                98,
                114,
                47,
                62,
                10,
                229,
                166,
                130,
                239,
                188,
                154,
                56,
                56,
                112,
                120,
                32,
                32,
                45,
                62,
                32,
                46,
                56,
                56,
                114,
                101,
                109,
                32,
                60,
                47,
                112,
                62,
                10,
                60,
                104,
                51,
                62,
                229,
                133,
                182,
                228,
                187,
                150,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                230,
                160,
                183,
                229,
                188,
                143,
                230,
                143,
                144,
                228,
                190,
                155,
                228,
                186,
                134,
                229,
                175,
                185,
                229,
                186,
                148,
                231,
                154,
                132,
                100,
                111,
                109,
                231,
                187,
                147,
                230,
                158,
                132,
                239,
                188,
                140,
                232,
                191,
                152,
                230,
                156,
                137,
                232,
                131,
                189,
                229,
                164,
                159,
                229,
                133,
                168,
                229,
                177,
                128,
                229,
                186,
                148,
                231,
                148,
                168,
                231,
                154,
                132,
                231,
                177,
                187,
                239,
                188,
                154,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                58,
                47,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                46,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                105,
                111,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                115,
                116,
                121,
                108,
                101,
                115,
                47,
                101,
                120,
                97,
                109,
                112,
                108,
                101,
                47,
                105,
                110,
                100,
                101,
                120,
                46,
                104,
                116,
                109,
                108,
                34,
                62,
                229,
                133,
                183,
                228,
                189,
                147,
                230,
                159,
                165,
                231,
                156,
                139,
                232,
                175,
                180,
                230,
                152,
                142,
                60,
                47,
                97,
                62,
                227,
                128,
                130,
                60,
                47,
                112,
                62,
                10,
                10,
                10,
                60,
                104,
                50,
                62,
                230,
                142,
                168,
                232,
                141,
                144,
                60,
                47,
                104,
                50,
                62,
                10,
                60,
                104,
                51,
                62,
                231,
                167,
                187,
                229,
                138,
                168,
                231,
                171,
                175,
                229,
                159,
                186,
                228,
                186,
                142,
                86,
                117,
                101,
                231,
                154,
                132,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                32,
                45,
                32,
                115,
                119,
                97,
                110,
                45,
                117,
                105,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                71,
                105,
                116,
                104,
                117,
                98,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                115,
                119,
                97,
                110,
                45,
                117,
                105,
                34,
                62,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                115,
                119,
                97,
                110,
                45,
                117,
                105,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                60,
                104,
                51,
                62,
                80,
                67,
                231,
                171,
                175,
                229,
                159,
                186,
                228,
                186,
                142,
                82,
                101,
                97,
                99,
                116,
                231,
                154,
                132,
                85,
                73,
                231,
                187,
                132,
                228,
                187,
                182,
                229,
                186,
                147,
                32,
                45,
                32,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                60,
                47,
                104,
                51,
                62,
                10,
                60,
                112,
                62,
                71,
                105,
                116,
                104,
                117,
                98,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                34,
                62,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                101,
                97,
                103,
                108,
                101,
                45,
                117,
                105,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                10,
                60,
                100,
                105,
                118,
                32,
                115,
                116,
                121,
                108,
                101,
                61,
                34,
                109,
                97,
                114,
                103,
                105,
                110,
                58,
                50,
                53,
                112,
                120,
                32,
                45,
                50,
                48,
                112,
                120,
                32,
                45,
                49,
                53,
                112,
                120,
                59,
                112,
                97,
                100,
                100,
                105,
                110,
                103,
                58,
                53,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                32,
                54,
                48,
                112,
                120,
                32,
                50,
                52,
                112,
                120,
                59,
                98,
                111,
                120,
                45,
                115,
                105,
                122,
                105,
                110,
                103,
                58,
                98,
                111,
                114,
                100,
                101,
                114,
                45,
                98,
                111,
                120,
                59,
                98,
                97,
                99,
                107,
                103,
                114,
                111,
                117,
                110,
                100,
                45,
                99,
                111,
                108,
                111,
                114,
                58,
                114,
                103,
                98,
                40,
                50,
                51,
                56,
                44,
                50,
                51,
                56,
                44,
                50,
                51,
                56,
                41,
                59,
                116,
                101,
                120,
                116,
                45,
                97,
                108,
                105,
                103,
                110,
                58,
                99,
                101,
                110,
                116,
                101,
                114,
                59,
                34,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                108,
                101,
                97,
                100,
                34,
                62,
                228,
                189,
                191,
                231,
                148,
                168,
                228,
                184,
                173,
                233,
                129,
                135,
                229,
                136,
                176,
                233,
                151,
                174,
                233,
                162,
                152,
                232,
                175,
                183,
                230,
                143,
                144,
                228,
                186,
                164,
                105,
                115,
                115,
                117,
                101,
                58,
                32,
                60,
                97,
                32,
                104,
                114,
                101,
                102,
                61,
                34,
                104,
                116,
                116,
                112,
                115,
                58,
                47,
                47,
                103,
                105,
                116,
                104,
                117,
                98,
                46,
                99,
                111,
                109,
                47,
                102,
                117,
                116,
                117,
                114,
                101,
                45,
                116,
                101,
                97,
                109,
                47,
                112,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                47,
                105,
                115,
                115,
                117,
                101,
                115,
                34,
                62,
                80,
                104,
                111,
                101,
                110,
                105,
                120,
                45,
                117,
                105,
                32,
                73,
                115,
                115,
                117,
                101,
                115,
                60,
                47,
                97,
                62,
                60,
                47,
                112,
                62,
                10,
                32,
                32,
                32,
                32,
                60,
                112,
                32,
                99,
                108,
                97,
                115,
                115,
                61,
                34,
                108,
                101,
                97,
                100,
                34,
                62,
                70,
                111,
                114,
                32,
                231,
                130,
                185,
                232,
                175,
                132,
                231,
                154,
                132,
                229,
                176,
                143,
                228,
                188,
                153,
                228,
                188,
                180,
                44,
                32,
                229,
                143,
                175,
                229,
                164,
                167,
                232,
                177,
                161,
                32,
                64,
                99,
                104,
                101,
                110,
                97,
                105,
                98,
                105,
                110,
                103,
                32,
                230,
                136,
                150,
                32,
                64,
                109,
                105,
                110,
                46,
                120,
                105,
                97,
                111,
                60,
                47,
                112,
                62,
                10,
                60,
                47,
                100,
                105,
                118,
                62,
                10
            ]
        },
        "version": "1.0.0",
        "url": "",
        "navs": [
            {
                "name": "主页",
                "url": "index.html"
            }
        ],
        "isApp": true
    },
    "files": {
        "src/accordion/index.js": {
            "name": "src/accordion/index.js",
            "modules": {
                "操作类组件": 1
            },
            "classes": {
                "Accordion": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/animate/index.js": {
            "name": "src/animate/index.js",
            "modules": {},
            "classes": {
                "Animate": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/badge/index.js": {
            "name": "src/badge/index.js",
            "modules": {},
            "classes": {
                "Badge": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/button/index.js": {
            "name": "src/button/index.js",
            "modules": {},
            "classes": {
                "Button": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/button-group/index.js": {
            "name": "src/button-group/index.js",
            "modules": {},
            "classes": {
                "ButtonGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/checkbox/index.js": {
            "name": "src/checkbox/index.js",
            "modules": {},
            "classes": {
                "Checkbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/drag/index.js": {
            "name": "src/drag/index.js",
            "modules": {
                "辅助组件": 1
            },
            "classes": {
                "Drag": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/grid/Col.js": {
            "name": "src/grid/Col.js",
            "modules": {},
            "classes": {
                "Col": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/grid/Grid.js": {
            "name": "src/grid/Grid.js",
            "modules": {
                "布局组件": 1
            },
            "classes": {
                "Grid": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/grid/Row.js": {
            "name": "src/grid/Row.js",
            "modules": {},
            "classes": {
                "Row": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/icon/index.js": {
            "name": "src/icon/index.js",
            "modules": {},
            "classes": {
                "Icon": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/image/index.js": {
            "name": "src/image/index.js",
            "modules": {},
            "classes": {
                "Image": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/image-list/index.js": {
            "name": "src/image-list/index.js",
            "modules": {},
            "classes": {
                "ImageList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/input/index.js": {
            "name": "src/input/index.js",
            "modules": {},
            "classes": {
                "Input": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/label/index.js": {
            "name": "src/label/index.js",
            "modules": {
                "标签组件": 1
            },
            "classes": {
                "Label": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/list/index.js": {
            "name": "src/list/index.js",
            "modules": {
                "列表组件": 1
            },
            "classes": {
                "List": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuBody.js": {
            "name": "src/menu/MenuBody.js",
            "modules": {},
            "classes": {
                "MenuBody": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuHeader.js": {
            "name": "src/menu/MenuHeader.js",
            "modules": {},
            "classes": {
                "MenuHeader": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuItem.js": {
            "name": "src/menu/MenuItem.js",
            "modules": {},
            "classes": {
                "MenuItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/MenuList.js": {
            "name": "src/menu/MenuList.js",
            "modules": {},
            "classes": {
                "MenuList": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/menu/index.js": {
            "name": "src/menu/index.js",
            "modules": {
                "菜单组件": 1
            },
            "classes": {
                "Menu": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/modal/Alert.js": {
            "name": "src/modal/Alert.js",
            "modules": {},
            "classes": {
                "Alert": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/modal/Dialog.js": {
            "name": "src/modal/Dialog.js",
            "modules": {
                "弹出框组件": 1
            },
            "classes": {
                "Dialog": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/modal/Prompt.js": {
            "name": "src/modal/Prompt.js",
            "modules": {},
            "classes": {
                "Prompt": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ph-filter/components/FilterCheckbox.js": {
            "name": "src/ph-filter/components/FilterCheckbox.js",
            "modules": {},
            "classes": {
                "FilterCheckbox": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ph-filter/components/FilterContainer.js": {
            "name": "src/ph-filter/components/FilterContainer.js",
            "modules": {
                "筛选控件": 1
            },
            "classes": {
                "FilterContainer": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ph-filter/components/FilterItem.js": {
            "name": "src/ph-filter/components/FilterItem.js",
            "modules": {},
            "classes": {
                "FilterItem": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ph-filter/components/FilterItemGroup.js": {
            "name": "src/ph-filter/components/FilterItemGroup.js",
            "modules": {},
            "classes": {
                "FilterItemGroup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ph-filter/components/FilterPanel.js": {
            "name": "src/ph-filter/components/FilterPanel.js",
            "modules": {},
            "classes": {
                "FilterPanel": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/ph-filter/components/FilterPanelSimple.js": {
            "name": "src/ph-filter/components/FilterPanelSimple.js",
            "modules": {},
            "classes": {
                "FilterPanelSimple": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/popover/index.js": {
            "name": "src/popover/index.js",
            "modules": {
                "提示组件": 1
            },
            "classes": {
                "Popover": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/popup/index.js": {
            "name": "src/popup/index.js",
            "modules": {},
            "classes": {
                "Popup": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/pullup/index.js": {
            "name": "src/pullup/index.js",
            "modules": {},
            "classes": {
                "PullUp": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/radio/index.js": {
            "name": "src/radio/index.js",
            "modules": {},
            "classes": {
                "Radio": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/search-bar/index.js": {
            "name": "src/search-bar/index.js",
            "modules": {
                "搜索组件": 1
            },
            "classes": {
                "SearchBar": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/slider/index.js": {
            "name": "src/slider/index.js",
            "modules": {},
            "classes": {
                "Slider": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/star/index.js": {
            "name": "src/star/index.js",
            "modules": {
                "基础组件": 1
            },
            "classes": {
                "Star": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/steps/index.js": {
            "name": "src/steps/index.js",
            "modules": {},
            "classes": {
                "Steps": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/swipe/index.js": {
            "name": "src/swipe/index.js",
            "modules": {},
            "classes": {
                "Swipe": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/switch/index.js": {
            "name": "src/switch/index.js",
            "modules": {},
            "classes": {
                "Switch": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tab/Tab.js": {
            "name": "src/tab/Tab.js",
            "modules": {},
            "classes": {
                "Tab": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/tab/Tabset.js": {
            "name": "src/tab/Tabset.js",
            "modules": {
                "选项卡": 1
            },
            "classes": {
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/textarea/index.js": {
            "name": "src/textarea/index.js",
            "modules": {
                "表单组件": 1
            },
            "classes": {
                "TextArea": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/toast/index.js": {
            "name": "src/toast/index.js",
            "modules": {},
            "classes": {
                "Toast": 1
            },
            "fors": {},
            "namespaces": {}
        },
        "src/utils/ClassNameMixin.js": {
            "name": "src/utils/ClassNameMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/MethodMixin.js": {
            "name": "src/utils/MethodMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/PropertyMixin.js": {
            "name": "src/utils/PropertyMixin.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/Tool.js": {
            "name": "src/utils/Tool.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/constants.js": {
            "name": "src/utils/constants.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        },
        "src/utils/extend.js": {
            "name": "src/utils/extend.js",
            "modules": {},
            "classes": {},
            "fors": {},
            "namespaces": {}
        }
    },
    "modules": {
        "操作类组件": {
            "name": "操作类组件",
            "submodules": {
                "undefined": 1
            },
            "classes": {
                "ImageList": 1,
                "Popup": 1,
                "Slider": 1,
                "Steps": 1,
                "Toast": 1,
                "Accordion": 1,
                "PullUp": 1,
                "Swipe": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/toast/index.js",
            "line": 11,
            "description": "<h5>操作类组件，主要包括组件:</h5>\n<strong><a href='../classes/Accordion.html'>Accordion 手风琴</a></strong><br/>\n<strong><a href='../classes/Toast.html'>Toast 飘字</a></strong><br>\n<strong><a href='../classes/Popup.html'>Popup 弹层</a></strong><br>\n<strong><a href='../classes/Slider.html'>Slider 滑动输入条</a></strong><br>\n<strong><a href='../classes/Swipe.html'>Swipe 左滑动</a></strong><br>\n<strong><a href='../classes/Menu.html'>Menu 菜单</a></strong><br>\n<strong><a href='../classes/LoadingList.html'>LoadingList 加载更多</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "辅助组件": {
            "name": "辅助组件",
            "submodules": {},
            "classes": {
                "Drag": 1,
                "Animate": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/drag/index.js",
            "line": 6,
            "description": "拖拽组件<br/>\n- 兼容移动端的touch和pc端的mouse事件。\n- 可通过dragCallback设置抓取的回调函数, 返回抓取在屏幕上的位置, 分别保存在start和move中, 以x和y的形式展示。\n- 可通过dropCallback设置松开瞬间的回调函数, 返回松开时在屏幕上的位置, 保存在end中, 以x和y的形式展示。\n\n示例:\n```code\n    <Drag dragCallback={::this.dragCallback} dropCallback={::this.dropCallback} style={{height:0}}>\n        <div className='box' ref={(box)=>{this.box = box}}>Drag</div>\n    </Drag>\n```\n```code\n    dragCallback(event,position){\n        this.prePosition = position.start;\n        this.nowPosition = position.move;\n\n        this.distanceX = this.preDistanceX + this.nowPosition.x - this.prePosition.x;\n        this.distanceY = this.preDistanceY + this.nowPosition.y - this.prePosition.y;\n        console.log(this.distanceX, this.distanceY);\n    }\n    dropCallback(event,position){\n        this.preDistanceX = this.distanceX;\n        this.preDistanceY = this.distanceY;\n    }\n```"
        },
        "标签组件": {
            "name": "标签组件",
            "submodules": {},
            "classes": {
                "Icon": 1,
                "Badge": 1,
                "Label": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/label/index.js",
            "line": 18,
            "description": "<h5>标签组件，主要包括组件:</h5>\n<strong><a href='../classes/Label.html'>Label 标签</a></strong><br/>\n<strong><a href='../classes/Badge.html'>Badge 徽章</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "基础组件": {
            "name": "基础组件",
            "submodules": {},
            "classes": {
                "Image": 1,
                "Button": 1,
                "ButtonGroup": 1,
                "Star": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/star/index.js",
            "line": 18,
            "description": "<h5>基础组件，主要包括:</h5>\n<strong><a href='../classes/Star.html'>Star 星级</a></strong><br/>\n<strong><a href='../classes/Button.html'>Button 按钮</a></strong><br>\n <strong><a href='../classes/ButtonGroup.html'>ButtonGroup 按钮组</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "表单组件": {
            "name": "表单组件",
            "submodules": {},
            "classes": {
                "Input": 1,
                "Radio": 1,
                "Switch": 1,
                "Checkbox": 1,
                "TextArea": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/textarea/index.js",
            "line": 19,
            "description": "<h5>表单组件，主要包括组件:</h5>\n<strong><a href='../classes/Input.html'>Input 文本框/单选框/多选框</a></strong><br/>\n<strong><a href='../classes/Textarea.html'>Textarea 多行文本框</a></strong><br>\n<strong><a href='../classes/FormGroup.html'>FormGroup 表单组</a></strong><br/>\n<strong><a href='../classes/Switch.html'>Switch 开关</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "布局组件": {
            "name": "布局组件",
            "submodules": {},
            "classes": {
                "Col": 1,
                "Grid": 1,
                "Row": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/grid/Row.js",
            "line": 8,
            "description": "<h5>主要栅格化布局组件</h5>\n<strong><a href='../classes/Grid.html'>Grid 外框</a></strong><br>\n<strong><a href='../classes/Row.html'>Row 行排列</a></strong><br>\n<strong><a href='../classes/Col.html'>Col 竖排列</a></strong><br>\n<strong><a href='../classes/TableView.html'>TableView 仿表格组件</a></strong><br>\n<h6>点击以上链接进行相关查看</h6>",
            "itemtype": "main"
        },
        "列表组件": {
            "name": "列表组件",
            "submodules": {},
            "classes": {
                "List": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/list/index.js",
            "line": 11,
            "description": "List<br/>\n- \n\n主要属性和接口："
        },
        "菜单组件": {
            "name": "菜单组件",
            "submodules": {},
            "classes": {
                "MenuBody": 1,
                "MenuHeader": 1,
                "MenuItem": 1,
                "MenuList": 1,
                "Menu": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/menu/index.js",
            "line": 26,
            "description": "<h5>菜单组件，主要包括组件:</h5>\n<strong><a href='../classes/Menu.html'>Menu 菜单</a></strong><br/>\n<strong><a href='../classes/MenuHeader.html'>MenuHeader 菜单头部</a></strong><br>\n<strong><a href='../classes/MenuBody.html'>MenuBody 菜单主体</a></strong><br>\n<strong><a href='../classes/MenuList.html'>MenuList 菜单导航列表</a></strong><br>\n<strong><a href='../classes/MenuItem.html'>MenuItem 菜单导航列表项</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "弹出框组件": {
            "name": "弹出框组件",
            "submodules": {},
            "classes": {
                "Alert": 1,
                "Dialog": 1,
                "Prompt": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/modal/Prompt.js",
            "line": 10,
            "description": "<h5>弹出框组件，主要包括组件:</h5>\n<strong><a href='../classes/Dialog.html'>Dialog 基础弹框</a></strong><br/>\n<strong><a href='../classes/Alert.html'>Alert弹框</a></strong><br>\n<strong><a href='../classes/Prompt.html'>Prompt弹框</a></strong>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "筛选控件": {
            "name": "筛选控件",
            "submodules": {},
            "classes": {
                "FilterCheckbox": 1,
                "FilterContainer": 1,
                "FilterItem": 1,
                "FilterItemGroup": 1,
                "FilterPanel": 1,
                "FilterPanelSimple": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/ph-filter/components/FilterPanelSimple.js",
            "line": 5,
            "description": "<h5>筛选控件，主要包括组件:</h5>\n<strong><a href='../classes/FilterContainer.html'>FilterContainer 单选筛选</a></strong><br/>\n<strong><a href='../classes/FilterCheckbox.html'>FilterCheckbox 多选筛选</a></strong><br>\n<strong><a href='../classes/FilterPanelSimple.html'>FilterPanelSimple 简单面板</a></strong><br>\n<strong><a href='../classes/FilterPanel.html'>FilterPanel 面板</a></strong><br>\n<strong><a href='../classes/FilterItemGroup.html'>FilterItemGroup 主菜单</a></strong><br>\n<strong><a href='../classes/FilterItem.html'>FilterItem 筛选项</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        },
        "提示组件": {
            "name": "提示组件",
            "submodules": {},
            "classes": {
                "Popover": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/popover/index.js",
            "line": 12,
            "description": "气泡组件<br/>\n- 通过getTarget返回当前点击元素，必需。\n- 可通过placement设置气泡的显示位置, 可选top、bottom、left、right。\n- 当设置的位置不足够放置气泡，以下顺序顺延(top->bottom->left->right, bottom->top->left->right, left->right->top->bottom, right->left->top->bottom)。\n- 可通过distance设置气泡到点击对象的位置。\n- 可通过clickCallback定义气泡显隐时额外的回调函数。\n\n示例:\n```code\n <Button phSize='lg' ref={(button)=>{this.button = button}}>按钮</Button>\n <Popover getTarget={()=>{return this.button}} placement='top'>\n     <div className='ph-popover-text'>\n         一条很长的很长的气泡提示语，为了占位存在的气泡提示语。一条很长的很长的气泡提示语，为了占位存在的气泡提示语。\n     </div>\n </Popover>\n```\n```code\n <Button phSize='lg' ref={(button)=>{this.button1 = button}}>按钮</Button>\n <Popover getTarget={()=>{return this.button1}} placement='right'>\n     <ul className='ph-popover-list'>\n         <li className='ph-popover-item'>未上线单店</li>\n         <li className='ph-popover-item'>未上线连锁店</li>\n     </ul>\n </Popover>\n```"
        },
        "搜索组件": {
            "name": "搜索组件",
            "submodules": {},
            "classes": {
                "SearchBar": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "module",
            "file": "src/search-bar/index.js",
            "line": 11,
            "description": "SearchBar<br/>\n- 可通过buttonText设置按钮的文字。\n- 可通过clickCallback设置点击按钮的回调。\n- 可通过queryCallback设置回车/搜索动作的回调函数。\n- 可通过focusCallback设置聚焦的回调；可通过blurCallback设置失焦的回调。\n\n主要属性和接口：\n- buttonText: 按钮文字 <br/>\n如：`<SearchBar buttonText=\"no\" />`\n- clickCallback: 点击按钮的回调 <br/>\n如：`<SearchBar clickCallback={(value)=>{console.log(value)}} />`\n- queryCallback: 回车/搜索动作的回调函数 <br/>\n如：`<SearchBar queryCallback={(value)=>{console.log(value)}} />`\n- focusCallback: 聚焦的回调 <br/>\n如：`<SearchBar focusCallback={()=>{console.log(\"focus\")}} />`\n- blurCallback: 失焦的回调 <br/>\n如：`<SearchBar blurCallback={()=>{console.log(\"blur\")}} />`"
        },
        "选项卡": {
            "name": "选项卡",
            "submodules": {},
            "classes": {
                "Tab": 1,
                "Tabset": 1
            },
            "fors": {},
            "namespaces": {},
            "tag": "main",
            "file": "src/tab/Tabset.js",
            "line": 19,
            "description": "<h5>tab选项卡，主要包括一下两个组件:</h5>\n<strong><a href='../classes/Tabset.html'>tabset</a></strong><br/>\n<strong><a href='../classes/Tab.html'>tab</a></strong><br>\n<h6>点击以上链接或者左侧导航栏的组件名称链接进行查看</h6>",
            "itemtype": "main"
        }
    },
    "classes": {
        "Accordion": {
            "name": "Accordion",
            "shortname": "Accordion",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/accordion/index.js",
            "line": 23,
            "description": "手风琴组件<br/>\n- 通过visible设置初始展开或收起的状态, 可选true/false。\n- 可通过clickCallback设置展开收起时额外的回调函数。\n- 可通过hideIcon设置隐藏向下的箭头。\n\n主要属性和接口：\n- visible:初始展开或收起的状态, 默认false收起。\n= hideIcon:设置隐藏向下的箭头, 默认false可见。<br/>\n如：\n```code\n    <Accordion visible={true} hideIcon>\n        <Accordion.Header>\n            标题一\n        </Accordion.Header>\n        <Accordion.Body>\n            ...\n        </Accordion.Body>\n    </Accordion>\n```\n- clickCallback:点击收起展开的额外的回调执行函数。<br/>\n如：\n```code\n    <Accordion clickCallback={(visible)=>{console.log(visible);}}>\n        <Accordion.Header>\n            标题一\n        </Accordion.Header>\n        <Accordion.Body>\n            ...\n        </Accordion.Body>\n    </Accordion>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.4.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\timport classnames from \"classnames\"\n\t\n\timport Accordion from \"phoenix-ui/lib/accordion\"\n\timport List from \"phoenix-ui/lib/list\"\n\timport Col from \"phoenix-ui/lib/grid/Col\"\n\timport Code from \"./code/code\"\n\t\n\texport default class accordion extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible : false\n\t        }\n\t    }\n\t\n\t    clickCallback(visible){\n\t        alert(visible);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Accordion</h2>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Accordion>\n\t                    <Accordion.Header>标题一(收起状态)</Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>未上线单店</List.Col>\n\t                            </List.Item>\n\t                            <List.Item>\n\t                                <List.Col>未上线连锁店</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Accordion visible>\n\t                    <Accordion.Header>标题二(展开状态)</Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>未上线单店</List.Col>\n\t                            </List.Item>\n\t                            <List.Item>\n\t                                <List.Col>未上线连锁店</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Code target=\"accordion-visible\" />\n\t\n\t                <h3 className=\"comp-type\">hideIcon(默认false) 向下的按钮是否可见</h3>\n\t                <Accordion hideIcon>\n\t                    <Accordion.Header>\n\t                        标题一\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>未上线单店</List.Col>\n\t                            </List.Item>\n\t                            <List.Item>\n\t                                <List.Col>未上线连锁店</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Code target=\"accordion-hideicon\" />\n\t                \n\t                <h3 className=\"comp-type\">clickCallback 展开收起的回调函数</h3>\n\t                <Accordion visible={this.state.visible} clickCallback={this.clickCallback.bind(this)}>\n\t                    <Accordion.Header>\n\t                        标题一\n\t                    </Accordion.Header>\n\t                    <Accordion.Body>\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>未上线单店</List.Col>\n\t                            </List.Item>\n\t                            <List.Item>\n\t                                <List.Col>未上线连锁店</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Accordion.Body>\n\t                </Accordion>\n\t                <Code target=\"accordion-clickcallback\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/accordion"
            ],
            "isApp": true,
            "show": true
        },
        "Animate": {
            "name": "Animate",
            "shortname": "Animate",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "辅助组件",
            "namespace": "",
            "file": "src/animate/index.js",
            "line": 8,
            "description": "动画外层组件<br/>\n- 使用时需要在子元素增加animated类名实现动画效果, animated定义的是过渡的duration和fill-mode, 默认300ms, 完全可以自定义。\n- 可通过transitionName设置动画名称, 可选fade、slide-top、slide-bottom(还将补充), 默认fade。\n- 可通过transitionEnterTimeout设置进入延迟时间。\n- 可通过transitionLeaveTimeout设置离开延迟时间。\n\n示例:\n```code\n    <Animate className='popup-content' transitionName='slide-top'>\n        {this.renderPopup()}\n    </Animate>\n```\n```code\n    renderPopup(){\n        let {visible,children,className} = this.props;\n        if(visible){\n            return <div {...this.props} className={'popup-main', 'animated', className)}>{children}</div>;\n        }else{\n            return '';\n        }\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Row from \"phoenix-ui/lib/grid/Row\"\n\timport Col from \"phoenix-ui/lib/grid/Col\"\n\timport Input from \"phoenix-ui/lib/input\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport List from \"phoenix-ui/lib/list\"\n\timport Animate from \"phoenix-ui/lib/animate\"\n\timport Code from \"./code/code\"\n\t\n\texport default class animate extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            list: [\"看一本书\", \"睡8个小时\"]\n\t        }\n\t    }\n\t\n\t    addTodo(){\n\t        let newList = this.state.list.concat(this.input.getValueCallback())\n\t        \n\t        this.setState({\n\t            list: newList\n\t        })\n\t    }\n\t\n\t    removeTodo(index){\n\t        let newList = this.state.list.slice()\n\t\n\t        newList.splice(index,1)\n\t\n\t        this.setState({\n\t            list: newList\n\t        })\n\t    }\n\t\n\t    renderList(){\n\t        const items = this.state.list.map((item,index)=>{\n\t            return (\n\t                <List.Item key={index} className=\"animated\" onClick={this.removeTodo.bind(this,index).bind(this)}>\n\t                    <List.Col>{item}</List.Col>\n\t                </List.Item>\n\t            )\n\t        })\n\t        return items\n\t    }\n\t\n\t    render(){\n\t        \n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Animate</h2>\n\t                <h3 className=\"comp-type\">Todo demo</h3>\n\t                <div className=\"content ph-row-no-padding todo-demo\">\n\t                    <Row>\n\t                        <Col width=\"80\">\n\t                            <Input type=\"text\" ref={(input)=>{this.input=input}}/>\n\t                        </Col>\n\t                        <Col>\n\t                            <Button phStyle=\"primary\" onClick={this.addTodo.bind(this)} >Add</Button>\n\t                        </Col>\n\t                    </Row>\n\t                </div>\n\t                <List>\n\t                    <Animate transitionName=\"fade\" className=\"animate-field\">\n\t                        {this.renderList()}\n\t                    </Animate>\n\t                </List>\n\t                <Code target=\"animate\" />             \n\t            </div>\n\t        )\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/animate"
            ],
            "isApp": true,
            "show": true
        },
        "Badge": {
            "name": "Badge",
            "shortname": "Badge",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/badge/index.js",
            "line": 8,
            "description": "Badge标记<br/>\n- 主要是用来提供不同颜色的标识, 通过phStyle来改变颜色, 可选default、primary、warning、danger、info、error、success。\n- 不提供默认回调, 但支持自定义className，事件等操作。\n\n主要属性和接口：\n- phStyle:颜色, 默认primary <br/>\n如：`<Badge phStyle='info'>惠</Badge>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Badge from \"phoenix-ui/lib/badge\"\n\timport Code from \"./code/code\"\n\t\n\texport default class badge extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Badge</h2>\n\t                <h3 className=\"comp-type\">默认颜色</h3>\n\t                <div className=\"content\">\n\t\t                <Badge>1</Badge>\n\t\t                <Badge>10</Badge>\n\t                    <Badge>Hot</Badge>\n\t                </div>\n\t                <h3 className=\"comp-type\">phStyle 标记颜色</h3>\n\t                <div className=\"content\">\n\t\t                <Badge phStyle=\"primary\">New</Badge>\n\t\t                <Badge phStyle=\"success\">New</Badge>\n\t\t                <Badge phStyle=\"info\">New</Badge>\n\t                    <Badge phStyle=\"danger\">New</Badge>\n\t                    <Badge phStyle=\"error\">New</Badge>\n\t                    <Badge phStyle=\"warning\">New</Badge>\n\t                </div>\n\t                <Code target=\"badge-phstyle\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/badge"
            ],
            "isApp": true,
            "show": true
        },
        "Button": {
            "name": "Button",
            "shortname": "Button",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/button/index.js",
            "line": 9,
            "description": "按钮组件<br/>\n- 按钮组件提供所有properties中内置的颜色及字体大小样式供选择。\n- 也可以自定义行内样式和className名字定义UI展示。\n- 通过phSize设置大小, 可选sm、md、lg。\n- 通过phStyle选择按钮颜色，可选primary、info、error、warning、danger、link、gray、success。\n- 支持disabled, active属性定义。\n- 按钮内容默认居中，可通过stable属性设置按钮不占位，只有内容部分居中，适用于动态添加icon且不希望文字移位的情况。\n\n主要属性和接口：\n- phSize:按钮大小, 默认sm <br/>\n如: `<Button phSize='lg'>button</Button>`\n- phStyle:按钮颜色, 默认primary <br/>\n如: `<Button phStyle='info'>button</Button>`\n- block:是否块级显示，默认false <br/>\n如: `<Button block>button</Button>`\n- phIcon:icon符号类型,默认没有符号 <br/>\n如: `<Button phIcon='search'>button</Button>`\n- stable: icon不占位 <br/>\n如: `<Button phIcon='search' stable>button</Button>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\"\n\t\n\texport default class button extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Button</h2>\n\t                <h3 className=\"comp-type\">phSize(默认sm) 按钮大小</h3>\n\t                <div className=\"content\">\n\t                    <Button>默认sm</Button>\n\t                    <br/>\n\t                    <Button phSize=\"md\">md 按钮</Button>\n\t                    <br/>\n\t                    <Button phSize=\"lg\">lg 按钮</Button>\n\t                </div>\n\t                <Code target=\"button-phsize\" />\n\t\n\t                <h3 className=\"comp-type\">phStyle(默认primary) 按钮颜色</h3>\n\t                <div className=\"content\">\n\t                    <Button>默认Primary</Button>\n\t                    <Button phStyle=\"info\">Info</Button>\n\t                    <Button phStyle=\"success\">Success</Button>\n\t                    <Button phStyle=\"error\">Error</Button>\n\t                    <Button phStyle=\"danger\">Danger</Button>\n\t                    <Button phStyle=\"warning\">Warning</Button>\n\t                    <Button phStyle=\"gray\">Gray</Button>\n\t                    <Button phStyle=\"link\">Link</Button>\n\t                </div>\n\t                <Code target=\"button-phstyle\" />\n\t\n\t                <h3 className=\"comp-type\">hollow属性</h3>\n\t                <div className=\"content\">\n\t                    <Button hollow>按钮</Button>\n\t                </div>\n\t                <Code target=\"button-phstyle\" />\n\t\n\t                <h3 className=\"comp-type\">block属性</h3>\n\t                <div className=\"content\">\n\t                    <Button block>按钮</Button>\n\t                </div>\n\t                <Code target=\"button-block\" />\n\t\n\t                <h3 className=\"comp-type\">disabled属性</h3>\n\t                <div className=\"content\">\n\t                    <Button hollow disabled>按钮</Button>\n\t                    <Button disabled>按钮</Button>\n\t                </div>\n\t                <Code target=\"button-disabled\" />\n\t\n\t                <h3 className=\"comp-type\">active属性</h3>\n\t                <div className=\"content\">\n\t                    <Button phStyle=\"gray\" hollow active>按钮</Button>\n\t                    <Button hollow active>按钮</Button>\n\t                    <Button active>按钮</Button>\n\t                </div>\n\t                <Code target=\"button-active\" />\n\t\n\t                <h3 className=\"comp-type\">phIcon属性</h3>\n\t                <div className=\"content\">\n\t                    <Button phIcon=\"search\" block>整体居中</Button>\n\t                    <br/>\n\t                    <Button phIcon=\"loading-white\" block>整体居中</Button>\n\t                </div>\n\t                <Code target=\"button-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">stable属性</h3>\n\t                <div className=\"content\">\n\t                    <Button phIcon=\"search\" block stable>文字居中</Button>\n\t                    <br/>\n\t                    <Button phIcon=\"loading-white\" block stable>文字居中</Button>\n\t                </div>\n\t                <Code target=\"button-stable\" />\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/button"
            ],
            "isApp": true,
            "show": true
        },
        "ButtonGroup": {
            "name": "ButtonGroup",
            "shortname": "ButtonGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/button-group/index.js",
            "line": 8,
            "description": "按钮组组件<br/>\n- 按钮组组件配合Button组件,提供了横、竖两种排列方式, 可选default,justify,segmente,tacked,footer。\n- 可通过index设置默认的选中索引值。\n- 可通过clickCallback实现点击回调，default和footer模式下不支持clickCallback。\n\n主要属性和接口：\n- phType:是否自适应宽度或者垂直排列, 默认default <br/>\n如:\n```code\n    <ButtonGroup phType='tacked'>\n        <Button block>tacked1</Button>\n        <Button block>tacked2</Button>\n    </ButtonGroup>\n```\nindex:默认的选中索引值, 默认0 <br/>\n如:\n```code\n    <ButtonGroup phType='justify' index={1}>\n        <Button>justify</Button>\n        <Button>justify</Button>\n    </ButtonGroup>\n```\n- clickCallback:点击按钮组的回调函数。<br/>\n```code\n    <ButtonGroup clickCallback={(target,html)=>{console.log(target,html);}}>\n        <Button>tacked1</Button>\n        <Button>tacked2</Button>\n    </ButtonGroup>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.4",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport ButtonGroup from \"phoenix-ui/lib/button-group\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\"\n\t\n\texport default class buttongroup extends Component{\n\t    \n\t    clickCallback(index){\n\t        alert(index);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">ButtonGroup</h2>\n\t                <h3 className=\"comp-type\">phType(默认default) 自适应宽度</h3>\n\t                <div className=\"content\">\n\t                    <div className=\"comp-tip\">default</div>\n\t                    <ButtonGroup>\n\t                        <Button phSize=\"lg\">确定</Button>\n\t                        <Button phSize=\"lg\" phStyle=\"gray\" hollow >取消</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-phtype-default\" />\n\t\n\t                <div className=\"content\">\n\t                    <div className=\"comp-tip\">justify 横向满行</div>\n\t                    <ButtonGroup phType=\"justify\">\n\t                        <Button>justify1</Button>\n\t                        <Button>justify2</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-phtype-justify\" />\n\t\n\t                <div className=\"content\">\n\t                    <div className=\"comp-tip\">segmente 行内元素，每一个标签固定宽度</div>\n\t                    <ButtonGroup phType=\"segmente\">\n\t                        <Button>标签1</Button>\n\t                        <Button>标签2</Button>\n\t                        <Button>标签3</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-phtype-segmente\" />\n\t\n\t                <div className=\"content\">\n\t                    <div className=\"comp-tip\">tacked</div>\n\t                    <ButtonGroup phType=\"tacked\">\n\t                        <Button block>tacked1</Button>\n\t                        <Button block>tacked2</Button>\n\t                        <Button block>tacked3</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-phtype-tacked\" />\n\t\n\t                <h3 className=\"comp-type\">index 选中的索引</h3>\n\t                <div className=\"content\">\n\t                    <ButtonGroup phType=\"justify\" index={1}>\n\t                        <Button>justify1</Button>\n\t                        <Button>justify2</Button>\n\t                        <Button>justify3</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-index\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击按钮组回调函数</h3>\n\t                <div className=\"content\">\n\t                    <ButtonGroup phType=\"justify\" clickCallback={this.clickCallback}>\n\t                        <Button>justify1</Button>\n\t                        <Button>justify2</Button>\n\t                        <Button>justify3</Button>\n\t                    </ButtonGroup>\n\t                </div>\n\t                <Code target=\"button-group-callback\" />\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/buttongroup"
            ],
            "isApp": true,
            "show": true
        },
        "Checkbox": {
            "name": "Checkbox",
            "shortname": "Checkbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/checkbox/index.js",
            "line": 8,
            "description": "复选框组件<br/>\n- 使用方式跟原生一致, 支持disabled等原生属性。\n- 可通过label设置展示的文字。\n- 可通过defaultChecked设置默认值; 可通过checked和onChange事件配合使用手动设置输入值。\n\n主要属性和接口：\n- label:展示的文字信息, 默认空<br/>\n如：`<Checkbox label='测试' />`\n- defaultChecked:默认值<br/>\n如：`<Checkbox defaultChecked={true} />`\n- checked&onChange:<br/>\n如：`<Checkbox checked={this.state.checked} onChange={()=>{this.setState({checked:false})}} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Checkbox from \"phoenix-ui/lib/checkbox\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\"\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            checkboxChecked: true\n\t        };\n\t    }\n\t\n\t    onCheckboxChange(){\n\t        this.setState({\n\t            checkboxChecked: !this.state.checkboxChecked\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Checkbox</h2>\n\t                <h3 className=\"comp-type\">defaultChecked 初始传值</h3>\n\t                <div className=\"content\">\n\t                    <Checkbox label=\"香蕉\" defaultChecked={true} />\n\t                </div>\n\t                <Code target=\"checkbox-default\" />\n\t\n\t                <h3 className=\"comp-type\">checked和onChange配合使用</h3>\n\t                <div className=\"content\">\n\t                    <Checkbox label=\"西瓜\" checked={this.state.checkboxChecked} onChange={::this.onCheckboxChange} />\n\t                </div>\n\t                <Code target=\"checkbox-onchange\" />\n\t\n\t                <h3 className=\"comp-type\">disabled</h3>\n\t                <div className=\"content\">\n\t                    <Checkbox label=\"西瓜\" disabled/>\n\t                </div>\n\t                <Code target=\"checkbox-disabled\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/checkbox"
            ],
            "isApp": true,
            "show": true
        },
        "Drag": {
            "name": "Drag",
            "shortname": "Drag",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "辅助组件",
            "namespace": "",
            "file": "src/drag/index.js",
            "line": 6,
            "description": "拖拽组件<br/>\n- 兼容移动端的touch和pc端的mouse事件。\n- 可通过dragCallback设置抓取的回调函数, 返回抓取在屏幕上的位置, 分别保存在start和move中, 以x和y的形式展示。\n- 可通过dropCallback设置松开瞬间的回调函数, 返回松开时在屏幕上的位置, 保存在end中, 以x和y的形式展示。\n\n示例:\n```code\n    <Drag dragCallback={::this.dragCallback} dropCallback={::this.dropCallback} style={{height:0}}>\n        <div className='box' ref={(box)=>{this.box = box}}>Drag</div>\n    </Drag>\n```\n```code\n    dragCallback(event,position){\n        this.prePosition = position.start;\n        this.nowPosition = position.move;\n\n        this.distanceX = this.preDistanceX + this.nowPosition.x - this.prePosition.x;\n        this.distanceY = this.preDistanceY + this.nowPosition.y - this.prePosition.y;\n        console.log(this.distanceX, this.distanceY);\n    }\n    dropCallback(event,position){\n        this.preDistanceX = this.distanceX;\n        this.preDistanceY = this.distanceY;\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Drag from \"phoenix-ui/lib/drag\"\n\timport Code from \"./code/code\"\n\t\n\texport default class toast extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.preDistanceX = 0;\n\t        this.preDistanceY = 0;\n\t        this.distanceX = 0;\n\t        this.distanceY = 0;\n\t    }\n\t\n\t    dragCallback(event,position){\n\t        this.prePosition = position.start;\n\t        this.nowPosition = position.move;\n\t\n\t        this.distanceX = this.preDistanceX + this.nowPosition.x - this.prePosition.x;\n\t        this.distanceY = this.preDistanceY + this.nowPosition.y - this.prePosition.y;\n\t\n\t        this.setBoxPosition(this.distanceX, this.distanceY);\n\t    }\n\t\n\t    dropCallback(event,position){\n\t        this.preDistanceX = this.distanceX;\n\t        this.preDistanceY = this.distanceY;\n\t    }\n\t\n\t    setBoxPosition(x,y){\n\t        this.box.style.webkitTransform = \"translate(\"+x+\"px,\"+y+\"px)\";\n\t        this.box.style.transform = \"translate(\"+x+\"px,\"+y+\"px)\";\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Drag</h2>\n\t                <h3 className=\"comp-type\">Dragable Box demo</h3>\n\t                <Code target=\"drag\" />\n\t                <div className=\"content-drag\">\n\t                    <Drag dragCallback={this.dragCallback.bind(this)} dropCallback={this.dropCallback.bind(this)} style={{height:0}}>\n\t                        <div className=\"box\" ref={(box)=>{this.box = box}}>Drag</div>\n\t                    </Drag>\n\t                </div>\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/drag"
            ],
            "isApp": true,
            "show": true
        },
        "Col": {
            "name": "Col",
            "shortname": "Col",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/grid/Col.js",
            "line": 8,
            "description": "列组件<br/>\n- 搭配Row行组件可实现自适应宽度布局。\n- 可通过align定义单个项目在交叉轴上的对齐方式, 可选auto、top、bottom、center。\n- 可通过width设置单个项目宽度的百分比, 目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)。\n- 可通过offset设置单个项目左边外边距。\n\n主要属性和接口：\n- align:单个项目在交叉轴上的对齐方式, 默认auto <br/>\n```code\n    <Row>\n        <Col align='top'>\n            <div className='col-demo'>top</div>\n        </Col>\n        <Col align='center'>\n            <div className='col-demo'>center</div>\n        </Col>\n        <Col align='bottom'>\n            <div className='col-demo'>bottom</div>\n        </Col>\n    </Row>\n```\n- width:单个项目的宽度百分比 <br/>\n```code\n    <Row>\n        <Col width='15'>\n            <div className='col-demo'>15</div>\n        </Col>\n    </Row>\n```\n- offset:单个项目的偏移值,即左边外边距 <br/>\n```code\n    <Row>\n        <Col width='20' offset='10'>\n            <div className='col-demo'>10</div>\n        </Col>\n    </Row>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Grid from \"phoenix-ui/lib/grid/Grid\"\n\timport Row from \"phoenix-ui/lib/grid/Row\"\n\timport Col from \"phoenix-ui/lib/grid/Col\"\n\timport Code from \"./code/code\"\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\"><strong>Row</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认stretch) 容器属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">stretch</h3>\n\t                    <Grid>\n\t                        <Row align=\"stretch\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />stretch<br />stretch</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">baseline</h3>\n\t                    <Grid>\n\t                        <Row align=\"baseline\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline<br />baseline</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top</h3>\n\t                    <Grid>\n\t                        <Row align=\"top\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top<br />top</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">bottom</h3>\n\t                    <Grid>\n\t                        <Row align=\"bottom\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">center</h3>\n\t                    <Grid>\n\t                        <Row align=\"center\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center<br />center</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"row-align\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Col</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认auto) 项目属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">auto</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto auto auto</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col align=\"top\">\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col align=\"center\">\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col align=\"bottom\">\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />center<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-align\" />\n\t\n\t                <h3 className=\"comp-type\">width 设置项目宽度百分比</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"15\">\n\t                                <div className=\"col-demo\">15</div>\n\t                            </Col>\n\t                            <Col width=\"20\">\n\t                                <div className=\"col-demo\">20</div>\n\t                            </Col>\n\t                            <Col width=\"25\">\n\t                                <div className=\"col-demo\">25</div>\n\t                            </Col>\n\t                            <Col width=\"40\">\n\t                                <div className=\"col-demo\">40<br />40<br />40</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-width\" />\n\t\n\t                <h3 className=\"comp-type\">offset(即margin-left) 偏移值</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"20\" offset=\"10\">\n\t                                <div className=\"col-demo\">10</div>\n\t                            </Col>\n\t                            <Col width=\"40\" offset=\"10\" >\n\t                                <div className=\"col-demo\">10<br />10<br />10</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-offset\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/grid"
            ],
            "isApp": true,
            "since": "0.1.0",
            "show": true
        },
        "Grid": {
            "name": "Grid",
            "shortname": "Grid",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/grid/Grid.js",
            "line": 19,
            "description": "栅格容器组件<br/>\n- 配合Row、Col使用布局。\n- 可自定义className、style等属性以及自定义事件。\n\n示例:\n```code\n    <Grid> //定义栅格\n        <Row> //定义一行\n            <Col> //定义一列，最多12份\n                <div className='col-demo'>内容</div>\n            </Col>\n            <Col>\n                <div className='col-demo'>stretch<br />baseline</div>\n            </Col>\n        </Row>\n    </Grid>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Grid from \"phoenix-ui/lib/grid/Grid\"\n\timport Row from \"phoenix-ui/lib/grid/Row\"\n\timport Col from \"phoenix-ui/lib/grid/Col\"\n\timport Code from \"./code/code\"\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\"><strong>Row</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认stretch) 容器属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">stretch</h3>\n\t                    <Grid>\n\t                        <Row align=\"stretch\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />stretch<br />stretch</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">baseline</h3>\n\t                    <Grid>\n\t                        <Row align=\"baseline\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline<br />baseline</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top</h3>\n\t                    <Grid>\n\t                        <Row align=\"top\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top<br />top</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">bottom</h3>\n\t                    <Grid>\n\t                        <Row align=\"bottom\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">center</h3>\n\t                    <Grid>\n\t                        <Row align=\"center\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center<br />center</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"row-align\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Col</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认auto) 项目属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">auto</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto auto auto</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col align=\"top\">\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col align=\"center\">\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col align=\"bottom\">\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />center<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-align\" />\n\t\n\t                <h3 className=\"comp-type\">width 设置项目宽度百分比</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"15\">\n\t                                <div className=\"col-demo\">15</div>\n\t                            </Col>\n\t                            <Col width=\"20\">\n\t                                <div className=\"col-demo\">20</div>\n\t                            </Col>\n\t                            <Col width=\"25\">\n\t                                <div className=\"col-demo\">25</div>\n\t                            </Col>\n\t                            <Col width=\"40\">\n\t                                <div className=\"col-demo\">40<br />40<br />40</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-width\" />\n\t\n\t                <h3 className=\"comp-type\">offset(即margin-left) 偏移值</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"20\" offset=\"10\">\n\t                                <div className=\"col-demo\">10</div>\n\t                            </Col>\n\t                            <Col width=\"40\" offset=\"10\" >\n\t                                <div className=\"col-demo\">10<br />10<br />10</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-offset\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/grid"
            ],
            "isApp": true,
            "show": true
        },
        "Row": {
            "name": "Row",
            "shortname": "Row",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "布局组件",
            "namespace": "",
            "file": "src/grid/Row.js",
            "line": 8,
            "description": "行组件<br/>\n- 搭配Col列组件可实现自适应宽度布局。\n- 可通过align定义项目在交叉轴上的对齐方式, 可选top、bottom、center、baseline、stretch。\n\n主要属性和接口：\n- align:项目在交叉轴上的对齐方式, 默认stretch\n```code\n    <Row align='baseline'>\n        <Col>\n            <div className='col-demo'>baseline</div>\n        </Col>\n        <Col>\n            <div className='col-demo'>baseline<br />baseline</div>\n        </Col>\n    </Row>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Grid from \"phoenix-ui/lib/grid/Grid\"\n\timport Row from \"phoenix-ui/lib/grid/Row\"\n\timport Col from \"phoenix-ui/lib/grid/Col\"\n\timport Code from \"./code/code\"\n\t\n\texport default class grid extends Component {\n\t    \n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Grid</h2>\n\t                <h3 className=\"comp-type\"><strong>Row</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认stretch) 容器属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">stretch</h3>\n\t                    <Grid>\n\t                        <Row align=\"stretch\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">stretch<br />stretch<br />stretch</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">baseline</h3>\n\t                    <Grid>\n\t                        <Row align=\"baseline\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">baseline<br />baseline<br />baseline</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top</h3>\n\t                    <Grid>\n\t                        <Row align=\"top\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />top<br />top</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">bottom</h3>\n\t                    <Grid>\n\t                        <Row align=\"bottom\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">bottom<br />bottom<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">center</h3>\n\t                    <Grid>\n\t                        <Row align=\"center\">\n\t                            <Col>\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">center<br />center<br />center</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"row-align\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Col</strong></h3>\n\t                <h3 className=\"comp-type\">align(默认auto) 项目属性</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">auto</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">auto auto auto auto</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                    <h3 className=\"comp-tip\">top/center/bottom</h3>\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col align=\"top\">\n\t                                <div className=\"col-demo\">top</div>\n\t                            </Col>\n\t                            <Col align=\"center\">\n\t                                <div className=\"col-demo\">center</div>\n\t                            </Col>\n\t                            <Col align=\"bottom\">\n\t                                <div className=\"col-demo\">bottom</div>\n\t                            </Col>\n\t                            <Col>\n\t                                <div className=\"col-demo\">top<br />center<br />bottom</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-align\" />\n\t\n\t                <h3 className=\"comp-type\">width 设置项目宽度百分比</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"15\">\n\t                                <div className=\"col-demo\">15</div>\n\t                            </Col>\n\t                            <Col width=\"20\">\n\t                                <div className=\"col-demo\">20</div>\n\t                            </Col>\n\t                            <Col width=\"25\">\n\t                                <div className=\"col-demo\">25</div>\n\t                            </Col>\n\t                            <Col width=\"40\">\n\t                                <div className=\"col-demo\">40<br />40<br />40</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-width\" />\n\t\n\t                <h3 className=\"comp-type\">offset(即margin-left) 偏移值</h3>\n\t                <div className=\"content\">\n\t                    <Grid>\n\t                        <Row>\n\t                            <Col width=\"20\" offset=\"10\">\n\t                                <div className=\"col-demo\">10</div>\n\t                            </Col>\n\t                            <Col width=\"40\" offset=\"10\" >\n\t                                <div className=\"col-demo\">10<br />10<br />10</div>\n\t                            </Col>\n\t                        </Row>\n\t                    </Grid>\n\t                </div>\n\t                <Code target=\"col-offset\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/grid"
            ],
            "isApp": true,
            "since": "0.1.0",
            "show": true
        },
        "Icon": {
            "name": "Icon",
            "shortname": "Icon",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/icon/index.js",
            "line": 8,
            "description": "Icon<br/>\n- 可通过phIcon来配置不同类型的符号, 可选[查看所有icon类型](http://future-team.github.io/gfs-icons/index.html)。\n- 支持自定义className，事件等操作。\n\n主要属性和接口：\n- phIcon:配置不同类型的符号 <br/>\n如：`<Icon phIcon='search' />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Icon from \"phoenix-ui/lib/icon\"\n\timport Code from \"./code/code\"\n\t\n\texport default class icon extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Icon</h2>\n\t\n\t                <h3 className=\"comp-type\">phIcon 符号类型(对应icon的名称)</h3>\n\t                <div className=\"content\">\n\t                    <Icon phIcon=\"search\" />\n\t                    <Icon phIcon=\"home\" />\n\t                </div>\n\t                <a className=\"code-mark ph-button-link\" href=\"http://future-team.github.io/gfs-icons/index.html\">查看所有icon类型</a>\n\t                <Code target=\"icon-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">phSize 符号大小</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">xs-24px</h3>\n\t                    <Icon phIcon=\"tip-circle\" phSize=\"xs\" />\n\t                    <h3 className=\"comp-tip\">sm-32px</h3>\n\t                    <Icon phIcon=\"tip-circle\" phSize=\"sm\" />\n\t                    <h3 className=\"comp-tip\">md-40px</h3>\n\t                    <Icon phIcon=\"tip-circle\" phSize=\"md\" />\n\t                    <h3 className=\"comp-tip\">lg-48px</h3>\n\t                    <Icon phIcon=\"tip-circle\" phSize=\"lg\" />\n\t                    <h3 className=\"comp-tip\">xlg-80px</h3>\n\t                    <Icon phIcon=\"tip-circle\" phSize=\"xlg\" />\n\t                </div>\n\t                <Code target=\"icon-phsize\" />\n\t\n\t                <h3 className=\"comp-type\">phStyle 符号颜色</h3>\n\t                <div className=\"content\">\n\t                    <Icon phIcon=\"search\" phStyle=\"primary\" />\n\t                    <Icon phIcon=\"search\" phStyle=\"info\" />\n\t                    <Icon phIcon=\"search\" phStyle=\"success\" />\n\t                </div>\n\t                <Code target=\"icon-phstyle\" />\n\t\n\t                <h3 className=\"comp-type\">其他(动态，不存在icon库)</h3>\n\t                <div className=\"content\" style={{backgroundColor: '#f0f0f0'}}>\n\t                    <h3 className=\"comp-tip\">白色加载中(按钮，Toast)</h3>\n\t\t                <Icon phIcon=\"loading-white\" />\n\t                    <h3 className=\"comp-tip\">灰色加载中(列表)</h3>\n\t                    <Icon phIcon=\"loading-gray\" />\n\t                </div>\n\t                <Code target=\"icon-other\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/icon"
            ],
            "isApp": true,
            "show": true
        },
        "Image": {
            "name": "Image",
            "shortname": "Image",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/image/index.js",
            "line": 9,
            "description": "图片组件<br/>\n- 和普通图片使用方式一致，src为必填选项，可自行添加alt属性。\n- 可通过defaultSrc添加默认图片地址，在图片未加载出来之前显示。\n- 可通过phSize设置图片大小，default为宽高和父级一致；cover为覆盖，不变形，没有空白区域；contain包含，不变形，可能有空白区域。\n- 可通过lazy设置图片为懒加载的模式，当图片进入视口之后才开始加载，可配合ImageList使用。\n- 可通过loadCallback设置图片加载完成的回调函数。\n- cover和contain必须设置定高。\n\n主要属性和接口：\n- src: 图片地址。<br/>\n如：`<Image src={IMAGE_URL} alt='图片没有加载上的提示语'/>`\n- defaultSrc: 默认图片地址。<br/>\n如：`<Image src={IMAGE_URL} defaultSrc={DEFAULT_URL}/>`\n- phSize: 图片大小。<br/>\n如：`<Image src={IMAGE_URL} phSize='cover'/>`\n- lazy: 是否懒加载<br/>\n如：`<Image src={IMAGE_URL} lazy/>`\n- loadCallback: 图片加载完成的回调<br/>\n如：`<Image src={IMAGE_URL} loadCallback={(err)=>{if(!err) console.log('success!')}}/>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Image from \"phoenix-ui/lib/image\"\n\timport Code from \"./code/code\"\n\t\n\tconst DEFULT_IMAGE = 'http://file.digitaling.com/eImg/uimages/20150907/1441607165383971.gif',\n\t      IMAGE_URL = 'http://img5.duitang.com/uploads/item/201602/11/20160211214958_RhdCY.jpeg',\n\t      LAZY_URL = 'http://imglf1.ph.126.net/V0-JUTmkXrb0nkcfTVfH9g==/6630709324908900349.jpg'\n\t\n\texport default class image extends Component{\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    loadCallback(err){\n\t        if(!err){\n\t            console.log('success!')\n\t        }else{\n\t            console.error(err)\n\t        }\n\t    }\n\t                \n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Image</h2>\n\t                <h3 className=\"comp-type\">src(必须) 图片地址</h3>\n\t                <div className=\"content\">\n\t                    <Image src={IMAGE_URL} alt=\"...\"/>\n\t                </div>\n\t                <Code target=\"image-src\" />\n\t\n\t                <h3 className=\"comp-type\">defaultSrc 默认图片地址</h3>\n\t                <div className=\"content\">\n\t                    <Image defaultSrc={DEFULT_IMAGE} src={IMAGE_URL} />\n\t                </div>\n\t                <Code target=\"image-defaultsrc\" />\n\t\n\t                <h3 className=\"comp-type\">lazy 是否懒加载(当图片到达视口区域才加载)</h3>\n\t                <div className=\"content\">\n\t                    <Image defaultSrc={DEFULT_IMAGE} src={LAZY_URL} lazy />\n\t                </div>\n\t                <Code target=\"image-lazy\" />\n\t\n\t                <h3 className=\"comp-type\">phSize(默认default) 图片大小(default/cover/contain)</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">default(宽高100%)</h3>\n\t                    <Image src={IMAGE_URL} phSize=\"default\" />\n\t                    <h3 className=\"comp-tip\">cover(短边100%，不变形)</h3>\n\t                    <Image src={IMAGE_URL} phSize=\"cover\" />\n\t                    <h3 className=\"comp-tip\">contain(长边100%，不变形，留有空白区)</h3>\n\t                    <Image src={IMAGE_URL} phSize=\"contain\" />\n\t                </div>\n\t                <Code target=\"image-phsize\" />\n\t\n\t                <h3 className=\"comp-type\">loadCallback 图片加载完成的回调</h3>\n\t                <div className=\"content\">\n\t                    <Image src={IMAGE_URL} loadCallback={this.loadCallback.bind(this)} />\n\t                </div>\n\t                <Code target=\"image-loadcallback\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/image"
            ],
            "isApp": true,
            "show": true
        },
        "ImageList": {
            "name": "ImageList",
            "shortname": "ImageList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/image-list/index.js",
            "line": 8,
            "description": "图片列表组件<br/>\n- 通过column设置图片列表的列数，1-8列。\n- 若需要懒加载，请配合Image组件使用。\n\n主要属性和接口：\n- column:列表的列数，默认1列。<br>\n```code\n<ImageList column={4}>\n {\n     this.state.images.map((data,index)=>{\n         return (\n             <dl className='ph-image-item' key={index}>\n                 <dt>\n                     <Image src={data.image} alt={data.title} lazy/>\n                 </dt>\n                 <dd>\n                     <p className='ph-image-title'>{data.title}</p>\n                     <p className='ph-image-desp'>{data.desp}</p>\n                 </dd>\n             </dl>\n         )\n     })\n }\n</ImageList>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.7.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport ImageList from \"phoenix-ui/lib/image-list\"\n\timport Image from \"phoenix-ui/lib/image\"\n\timport Code from \"./code/code\"\n\timport {ajax} from \"./utils/tool.js\"\n\t\n\texport default class imagelist extends Component{\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            images: []\n\t        }\n\t\n\t        this.getData(\"./data/post1.json\",0);\n\t    }\n\t\n\t    getData(fileName){ // 获取数据方法，ajax方法在下面定义了\n\t        ajax(fileName).then((json)=>{\n\t            let data = json.data;\n\t\n\t            this.setState({\n\t                images: data\n\t            }); \n\t\n\t        }, (error)=>{// 加载失败\n\t            console.error(\"出错了\", error)\n\t        });\n\t    }\n\t                \n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">ImageList</h2>\n\t                <h3 className=\"comp-type\">column(默认1) 图片列数</h3>\n\t                <ImageList column={4}>\n\t                    {\n\t                        this.state.images.map((data,index)=>{\n\t                            return (\n\t                                <dl className=\"ph-image-item\" key={index}>\n\t                                    <dt>\n\t                                        <Image src={data.image} alt={data.title}/>\n\t                                    </dt>\n\t                                    <dd>\n\t                                        <p className='ph-image-title'>{data.title}</p>\n\t                                        <p className='ph-image-desp'>{data.desp}</p>\n\t                                    </dd>\n\t                                </dl>\n\t                            )\n\t                        })\n\t                    }\n\t                </ImageList>\n\t                <ImageList column={2}>\n\t                    {\n\t                        this.state.images.map((data,index)=>{\n\t                            return (\n\t                                <dl className=\"ph-image-item\" key={index}>\n\t                                    <dt>\n\t                                        <Image src={data.image} alt={data.title}/>\n\t                                    </dt>\n\t                                    <dd>\n\t                                        <p className='ph-image-title'>{data.title}</p>\n\t                                        <p className='ph-image-desp'>{data.desp}</p>\n\t                                    </dd>\n\t                                </dl>\n\t                            )\n\t                        })\n\t                    }\n\t                </ImageList>\n\t                <Code target=\"imagelist-column\" />                \n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/imagelist"
            ],
            "isApp": true,
            "show": true
        },
        "Input": {
            "name": "Input",
            "shortname": "Input",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/input/index.js",
            "line": 10,
            "description": "输入框组件<br/>\n- 使用方式跟原生一致, 支持disabled、maxLength等原生属性。\n- 通过type设置input的类型, 可选text,search,password。\n- 可通过value设置默认值。\n- 可通过设置clear属性是否显示清除按钮，默认不显示。\n- 可通过设置visible属性判断password类型是否显示可见密码的按钮，默认不显示。\n- 可通过设置error设置当前输入错误。\n- 可通过getValueCallback获取当前元素的value值，仅适用于text、search。\n- 可通过设置phReg设置正则表达式，失焦时如果不符合正则显示错误样式。\n\n主要属性和接口：\n- type:input类型, 默认text <br/>\n如：`<Input type='search' disabled/>`\n- value:设置默认值 <br/>\n如：`<Input value='测试' />`\n- clear:是否显示清除按钮 <br/>\n如：`<Input value='测试' clear/>`\n- visible: 是否显示可见密码的按钮(仅适用于password类型)<br/>\n如：`<Input type='password' value='123456' visible />`\n- error: 当前输入错误<br/>\n如：`<Input type='password' value='123456' error />`\n- phReg: 正则表达式<br/>\n如：`<Input type=\"text\" placeholder=\"6-18位不以数字开头的用户名\" phReg={/^[a-zA-Z$_]\\w{5,17}$/} />`\n- getValueCallback: 获取当前input的value。<br/>\n如：`<Input ref={(inputElem)=>{this.inputElem=inputElem}} />`<br/>\n`this.inputElem.getValueCallback();`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Input from \"phoenix-ui/lib/input\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\"\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name: \"value和onChange配合使用\",\n\t            value: \"\"\n\t        };\n\t    }\n\t\n\t    setValue(key,e){\n\t        let o ={};\n\t        o[key || e.target.name] = e.target.value;\n\t        this.setState(o);\n\t    }\n\t\n\t    getValue(){\n\t        this.setState({\n\t            value: this.inputElem.getValueCallback()\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Input</h2>\n\t                <h3 className=\"comp-type\">type(text/search/password)</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">text</h3>\n\t                    <Input placeholder=\"请输入\"/>\n\t                    <Input placeholder=\"请输入\" value=\"默认值\" clear />\n\t                    <Input placeholder=\"请输入\" value=\"不可编辑的情况\" disabled/>\n\t                </div>\n\t                <Code target=\"input-text\" />\n\t\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">search</h3>\n\t                    <Input type=\"search\" placeholder=\"请输入\" />\n\t                    <Input type=\"search\" placeholder=\"请输入\" value=\"可清空输入的文字\" clear />\n\t                    <Input type=\"search\" placeholder=\"请输入\" value=\"不可编辑的情况\" disabled />\n\t                </div>\n\t                <Code target=\"input-search\" />\n\t\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">password</h3>\n\t                    <Input type=\"password\" placeholder=\"请输入\" />\n\t                    <Input type=\"password\" value=\"123456\" clear />\n\t                    <Input type=\"password\" value=\"123456\" placeholder=\"请输入\" clear visible />\n\t                </div>\n\t                <Code target=\"input-password\" />\n\t\n\t                <h3 className=\"comp-type\">clear 可清除内容</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"text\" value=\"123456\" clear />\n\t                </div>\n\t                <Code target=\"input-clear\" />\n\t\n\t                <h3 className=\"comp-type\">visible 密码可见</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"password\" value=\"123456\" visible />\n\t                </div>\n\t                <Code target=\"input-visible\" />\n\t\n\t                <h3 className=\"comp-type\">error 错误</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"text\" value=\"123456\" error />\n\t                </div>\n\t                <Code target=\"input-error\" />\n\t\n\t                <h3 className=\"comp-type\">phIcon 输入框icon</h3>\n\t                <div className=\"content\">\n\t                    <Input type=\"text\" placeholder=\"请输入\" phIcon=\"search\" />\n\t                    <Input type=\"search\" placeholder=\"请输入\" phIcon=\"search\" />\n\t                    <Input type=\"text\" value=\"123456\" placeholder=\"请输入\" phIcon=\"search\" />\n\t                    <Input type=\"search\" value=\"123456\" placeholder=\"请输入\" phIcon=\"search\" />\n\t                </div>\n\t                <Code target=\"input-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">phReg 正则表达式</h3>\n\t                <div className=\"content\">\n\t                    <Input placeholder=\"6-18位不以数字开头的用户名\" phReg={/^[a-zA-Z$_]\\w{5,17}$/} />\n\t                    <Input value=\"123\" placeholder=\"6-18位不以数字开头的用户名\" phReg={/^[a-zA-Z$_]\\w{5,17}$/} />\n\t                </div>\n\t                <Code target=\"input-phreg\" />\n\t\n\t                <h3 className=\"comp-type\">getValueCallback 获取数值</h3>\n\t                <div className=\"content\">\n\t                    <Input placeholder=\"默认text\" ref={(inputElem)=>{this.inputElem = inputElem}} />\n\t                    <div><Button onClick={this.getValue.bind(this)}>点击获取值</Button> <span style={{float:'right'}}>{this.state.value}</span></div>\n\t                </div>\n\t                <Code target=\"input-getvalue\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/input"
            ],
            "isApp": true,
            "show": true
        },
        "Label": {
            "name": "Label",
            "shortname": "Label",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "标签组件",
            "namespace": "",
            "file": "src/label/index.js",
            "line": 18,
            "description": "标签组件<br/>\n- 通过phLabel设置label类型，可选参考[所有label类型](http://future-team.github.io/gfs-icons/index.html#label)\n- 通过phStyle来改变颜色, 可选primary、info、success、calm、light、gray。\n- 通过phSize设置大小, 可选sm、md。\n- 不提供默认回调, 但支持自定义className，事件等操作。\n\n主要属性和接口：\n- phLabel:标签类型 <br/>\n如：`<Label phLabel='zu'/>`\n- phStyle:标签颜色, 默认primary <br/>\n如：`<Label phStyle='info'/>`\n- phSize:标签大小, 默认sm <br/>\n如：`<Label phSize='lg'/>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Label from \"phoenix-ui/lib/label\"\n\timport Code from \"./code/code\"\n\t\n\texport default class Labels extends Component{\n\t    render(){\n\t        return(\n\t        \t<div>\n\t            \t<h2 className=\"comp-title\">Label</h2>\n\t                <h3 className=\"comp-type\">phLabel 标签类型</h3>\n\t                <div className=\"content\">\n\t\t                <Label phLabel=\"zu\"/>\n\t                    <Label phLabel=\"tuan\"/>\n\t                    <Label phLabel=\"fu\"/>\n\t                    <Label phLabel=\"cu\"/>\n\t                    <Label phLabel=\"quan\"/>\n\t                    <Label phLabel=\"shou\"/>\n\t                    <Label phLabel=\"piao\"/>\n\t                    <Label phLabel=\"ding\"/>\n\t                    <Label phLabel=\"jia\"/>\n\t                    <Label phLabel=\"yin\"/>\n\t                    <Label phLabel=\"ka\"/>\n\t                    <Label phLabel=\"wai\"/>\n\t                    <Label phLabel=\"dian\"/>\n\t                    <Label phLabel=\"pin\"/>\n\t                    <Label phLabel=\"ke\"/>\n\t                    <Label phLabel=\"pai\"/>\n\t                    <Label phLabel=\"huo\"/>\n\t                </div>\n\t                <Code target=\"label-phlabel\" />\n\t\n\t                <h3 className=\"comp-type\">phStyle(默认primary) 标签颜色</h3>\n\t                <div className=\"content\">\n\t\t                <Label phLabel=\"tuan\"/>\n\t                    <Label phLabel=\"ke\" phStyle=\"info\"/>\n\t                    <Label phLabel=\"ding\" phStyle=\"success\"/>\n\t                    <Label phLabel=\"cu\" phStyle=\"tip\"/>\n\t                    <Label phLabel=\"huo\" phStyle=\"calm\"/>\n\t                    <Label phLabel=\"ka\" phStyle=\"light\"/>\n\t                    <Label phLabel=\"zu\" phStyle=\"gray\"/>\n\t                </div>\n\t                <Code target=\"label-phstyle\" />\n\t\n\t                <h3 className=\"comp-type\">phSize(默认sm) 标签大小</h3>\n\t                <div className=\"content\">\n\t\t                <Label phLabel=\"pai\"/>\n\t                    <Label phLabel=\"pai\" phSize=\"md\"/>\n\t                </div>\n\t                <Code target=\"label-phsize\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/label"
            ],
            "isApp": true,
            "show": true
        },
        "List": {
            "name": "List",
            "shortname": "List",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "列表组件",
            "namespace": "",
            "file": "src/list/index.js",
            "line": 11,
            "description": "List<br/>\n- \n\n主要属性和接口：",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\t\n\timport List from \"phoenix-ui/lib/list\"\n\timport Input from \"phoenix-ui/lib/input\"\n\timport Checkbox from \"phoenix-ui/lib/checkbox\"\n\timport Radio from \"phoenix-ui/lib/radio\"\n\timport Icon from \"phoenix-ui/lib/icon\"\n\timport Switch from \"phoenix-ui/lib/switch\"\n\timport Badge from \"phoenix-ui/lib/badge\"\n\timport Image from \"phoenix-ui/lib/image\"\n\timport Code from \"./code/code\"\n\t\n\tconst IMAGE_URL = 'http://img5.duitang.com/uploads/item/201602/11/20160211214958_RhdCY.jpeg'\n\t\n\texport default class star extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">List</h2>\n\t                <List>\n\t                    <List.Header>标题</List.Header>\n\t                    <List.Item className=\"clickable\">\n\t                        <List.Col>\n\t                            <label>选择一</label>\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-normal\" />\n\t\n\t                <List>\n\t                    <List.Item>\n\t                        <List.Col>\n\t                            <Input type=\"text\" placeholder=\"请输入\" />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                    <List.Item>\n\t                        <List.Col heading>\n\t                            <label>姓名</label>\n\t                        </List.Col>\n\t                        <List.Col>\n\t                            <Input type=\"text\" placeholder=\"请输入\" />\n\t                        </List.Col>\n\t                        <List.Col heading>\n\t                            <label>密码</label>\n\t                        </List.Col>\n\t                        <List.Col>\n\t                            <Input type=\"text\" placeholder=\"请输入\" />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-input\" />\n\t\n\t                <List>\n\t                    <List.Item disabled>\n\t                        <List.Col heading>\n\t                            <label>姓名</label>\n\t                        </List.Col>\n\t                        <List.Col>\n\t                            <Input type=\"text\" placeholder=\"请输入\" value=\"disabled\" />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-disabled\" />\n\t\n\t                <List>\n\t                    <List.Item error>\n\t                        <List.Col heading>\n\t                            <label>姓名</label>\n\t                        </List.Col>\n\t                        <List.Col>\n\t                            <Input type=\"text\" placeholder=\"请输入\" value=\"error\" clear error/>\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-error\" />\n\t\n\t                <List>\n\t                    <List.Item>\n\t                        <List.Col heading>\n\t                            <label>密码</label>\n\t                        </List.Col>\n\t                        <List.Col>\n\t                            <Input type=\"password\" placeholder=\"请输入\" value=\"123456\" clear visible />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-password\" />\n\t\n\t                <List>\n\t                    <List.Item>\n\t                        <List.Col heading>\n\t                            <label><Icon phIcon=\"kaidiancankao\" />反馈</label>\n\t                        </List.Col>\n\t                        <List.Col>\n\t                            <Input type=\"text\" placeholder=\"请输入\" value=\"123456\" />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-phicon\" />\n\t\n\t                <List>\n\t                    <List.Item navigate>\n\t                        <List.Col heading>\n\t                            <label>性别</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Input type=\"text\" placeholder=\"男/女\" disabled />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-navigate\" />\n\t\n\t                <List>\n\t                    <List.Item>\n\t                        <List.Col heading>\n\t                            <label>Female</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Checkbox />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                    <List.Item>\n\t                        <List.Col heading>\n\t                            <label>性别</label>\n\t                        </List.Col>\n\t                        <List.Col>\n\t                            <Radio label=\"男\" name=\"sex\" />\n\t                            <Radio label=\"女\" name=\"sex\" />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                    <List.Item>\n\t                        <List.Col heading>\n\t                            <label>开关</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Switch />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-form\" />\n\t\n\t                <List>\n\t                    <List.Item navigate>\n\t                        <List.Col heading>\n\t                            <label>信息数量</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Badge>10</Badge>\n\t                        </List.Col>\n\t                    </List.Item>\n\t                    <List.Item>\n\t                        <List.Col heading>\n\t                            <label>新上线</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Badge>New</Badge>\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-badge\" />\n\t\n\t                <List>\n\t                    <List.Item navigate>\n\t                        <List.Col heading>\n\t                            <label>性别</label>\n\t                            <label className=\"ph-sub-heading\">只能选择一次</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Input type=\"text\" placeholder=\"男/女\" disabled />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-heading-twoline\" />\n\t\n\t                <List>\n\t                    <List.Item navigate>\n\t                        <List.Col heading>\n\t                            <label>性别</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Input type=\"text\" placeholder=\"男/女\" disabled />\n\t                            <label className=\"ph-sub-heading\">只能选择一次</label>\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-tail-twoline\" />\n\t\n\t                <List>\n\t                    <List.Item navigate>\n\t                        <List.Col heading>\n\t                            <label>性别</label>\n\t                        </List.Col>\n\t                        <List.Col tail>\n\t                            <Image src={IMAGE_URL} />\n\t                        </List.Col>\n\t                    </List.Item>\n\t                </List>\n\t                <Code target=\"list-image\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/list"
            ],
            "isApp": true,
            "show": true
        },
        "MenuBody": {
            "name": "MenuBody",
            "shortname": "MenuBody",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuBody.js",
            "line": 10,
            "description": "菜单内容组件<br/>\n- 通过placement设置菜单出现的位置和类型, 可选 [top,left,right,left-full,right-full,full-screen]。\n- 可通过width设置侧边菜单的宽度, 当前placement为top和full-screen不生效。\n- 可通过closeButton来配置菜单主体右上角X按钮是否显示。\n\n主要属性和接口：\n- placement:菜单出现的位置和类型, 默认top。\n- width:侧边菜单的宽度, 当前placement为top和full-screen不生效。\n- closeButton:菜单主体右上角X按钮是否显示, 默认不显示。<br/>\n如：\n```code\n    <Menu>\n        <Menu.Header ref={(menuHandler)=>{this.menuHandler=menuHandler}}>\n            标题一\n        </Menu.Header>\n        <Menu.Body width={60} placement='left' closeButton getTarget={()=>{return this.menuHandler}}>\n            ...\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\timport classnames from \"classnames\";\n\t\n\timport Menu from \"phoenix-ui/lib/menu\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Icon from \"phoenix-ui/lib/icon\"\n\timport Code from \"./code/code\"\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            width: 40,\n\t            closeButton: false,\n\t            activeName: 'index' // 对应router名称\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'setting'\n\t        });\n\t    }\n\t    \n\t    setActiveName(name){\n\t        console.log(name)\n\t\n\t        this.setState({\n\t            visible: false // 如果需要点击之后关闭false\n\t        })\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    render(){\n\t        // console.log('render', this.state.visible)\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} ceiling={100} clickCallback={this.onMenuChange.bind(this)}>\n\t                    <Menu.Header ref={(menuHandler)=>{this.menuHandler=menuHandler}}>\n\t                        <span>Phoenix</span>\n\t                    </Menu.Header>\n\t                    <Menu.Body width={this.state.width} \n\t                        placement={this.state.placement} \n\t                        closeButton={this.state.closeButton} \n\t                        getTarget={()=>{return this.menuHandler}}\n\t                        activeName={this.state.activeName} \n\t                    >\n\t                        <Menu.List clickCallback={this.setActiveName.bind(this)}>\n\t                            <Menu.Item name=\"index\" phIcon=\"meidianbao-fill\">首页</Menu.Item>\n\t                            <Menu.Item name=\"setting\" phIcon=\"shanghuguanli-fill\" href=\"#menu\" clickCallback={this.onMenuItemChange.bind(this)}>设置</Menu.Item>\n\t                        </Menu.List>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">ceiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                </div>\n\t                <Code target=\"menu-ceiling\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t                \n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">getTarget(必须) 返回点击元素</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前为MenuHeader</h3>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchActiveName.bind(this)}>改变activeName值:index->setting</Button>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchPlacement.bind(this)}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchWidth.bind(this)}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchCloseButton.bind(this)}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuHeader": {
            "name": "MenuHeader",
            "shortname": "MenuHeader",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuHeader.js",
            "line": 7,
            "description": "菜单头部组件<br/>\n如：\n```code\n    <Menu>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            ...\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\timport classnames from \"classnames\";\n\t\n\timport Menu from \"phoenix-ui/lib/menu\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Icon from \"phoenix-ui/lib/icon\"\n\timport Code from \"./code/code\"\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            width: 40,\n\t            closeButton: false,\n\t            activeName: 'index' // 对应router名称\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'setting'\n\t        });\n\t    }\n\t    \n\t    setActiveName(name){\n\t        console.log(name)\n\t\n\t        this.setState({\n\t            visible: false // 如果需要点击之后关闭false\n\t        })\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    render(){\n\t        // console.log('render', this.state.visible)\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} ceiling={100} clickCallback={this.onMenuChange.bind(this)}>\n\t                    <Menu.Header ref={(menuHandler)=>{this.menuHandler=menuHandler}}>\n\t                        <span>Phoenix</span>\n\t                    </Menu.Header>\n\t                    <Menu.Body width={this.state.width} \n\t                        placement={this.state.placement} \n\t                        closeButton={this.state.closeButton} \n\t                        getTarget={()=>{return this.menuHandler}}\n\t                        activeName={this.state.activeName} \n\t                    >\n\t                        <Menu.List clickCallback={this.setActiveName.bind(this)}>\n\t                            <Menu.Item name=\"index\" phIcon=\"meidianbao-fill\">首页</Menu.Item>\n\t                            <Menu.Item name=\"setting\" phIcon=\"shanghuguanli-fill\" href=\"#menu\" clickCallback={this.onMenuItemChange.bind(this)}>设置</Menu.Item>\n\t                        </Menu.List>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">ceiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                </div>\n\t                <Code target=\"menu-ceiling\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t                \n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">getTarget(必须) 返回点击元素</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前为MenuHeader</h3>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchActiveName.bind(this)}>改变activeName值:index->setting</Button>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchPlacement.bind(this)}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchWidth.bind(this)}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchCloseButton.bind(this)}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuItem": {
            "name": "MenuItem",
            "shortname": "MenuItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuItem.js",
            "line": 8,
            "description": "菜单导航列表项组件<br/>\n- 可通过phIcon设置菜单项名称前符号的类型，具体可以参考[gfs-icons](https://future-team.github.io/gfs-icons/index.html)。 \n- 可通过href设置菜单项的跳转地址，可不设置，自定义回调函数clickCallback。\n- 可通过name设置菜单项的唯一标识，对应MenuList的activeName。\n- 通过clickCallback设置点击菜单项时的回调。\n\n主要属性和接口：\n- phIcon:菜单项名称前符号的类型，不设置时默认没有符号。 \n- href:菜单项的跳转地址，默认null。\n- name:菜单项的唯一标识。\n- name:点击菜单项时的回调。<br/>\n如：\n```code\n    <Menu>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            <Menu.Nav>\n                 <Menu.List activeName={this.state.activeName} clickCallback={(name)=>{this.setState({activeName:name})}}>\n                     <Menu.Item name='home' href='#index' phIcon='home' clickCallback={(name)=>{console.log(name);}}>首页</Menu.Item>\n                 </Menu.List>\n             </Menu.Nav>\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.4.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\timport classnames from \"classnames\";\n\t\n\timport Menu from \"phoenix-ui/lib/menu\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Icon from \"phoenix-ui/lib/icon\"\n\timport Code from \"./code/code\"\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            width: 40,\n\t            closeButton: false,\n\t            activeName: 'index' // 对应router名称\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'setting'\n\t        });\n\t    }\n\t    \n\t    setActiveName(name){\n\t        console.log(name)\n\t\n\t        this.setState({\n\t            visible: false // 如果需要点击之后关闭false\n\t        })\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    render(){\n\t        // console.log('render', this.state.visible)\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} ceiling={100} clickCallback={this.onMenuChange.bind(this)}>\n\t                    <Menu.Header ref={(menuHandler)=>{this.menuHandler=menuHandler}}>\n\t                        <span>Phoenix</span>\n\t                    </Menu.Header>\n\t                    <Menu.Body width={this.state.width} \n\t                        placement={this.state.placement} \n\t                        closeButton={this.state.closeButton} \n\t                        getTarget={()=>{return this.menuHandler}}\n\t                        activeName={this.state.activeName} \n\t                    >\n\t                        <Menu.List clickCallback={this.setActiveName.bind(this)}>\n\t                            <Menu.Item name=\"index\" phIcon=\"meidianbao-fill\">首页</Menu.Item>\n\t                            <Menu.Item name=\"setting\" phIcon=\"shanghuguanli-fill\" href=\"#menu\" clickCallback={this.onMenuItemChange.bind(this)}>设置</Menu.Item>\n\t                        </Menu.List>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">ceiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                </div>\n\t                <Code target=\"menu-ceiling\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t                \n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">getTarget(必须) 返回点击元素</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前为MenuHeader</h3>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchActiveName.bind(this)}>改变activeName值:index->setting</Button>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchPlacement.bind(this)}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchWidth.bind(this)}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchCloseButton.bind(this)}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "MenuList": {
            "name": "MenuList",
            "shortname": "MenuList",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/MenuList.js",
            "line": 8,
            "description": "菜单导航列表组件<br/>\n- 通过activeName设置当前导航选中的菜单项， 必需。\n- 通过clickCallback函数设置点击菜单项时的回调，函数内必需手动更改activeName值，必需。\n\n主要属性和接口：\n- activeName:设置当前导航选中的菜单项,默认null。 \n- clickCallback:点击菜单项时的回调。 <br/>\n如：\n```code\n    <Menu>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            <Menu.List activeName={this.state.activeName} clickCallback={(name)=>{this.setState({activeName:name})}}>\n                 ...\n            </Menu.List>\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.4.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\timport classnames from \"classnames\";\n\t\n\timport Menu from \"phoenix-ui/lib/menu\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Icon from \"phoenix-ui/lib/icon\"\n\timport Code from \"./code/code\"\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            width: 40,\n\t            closeButton: false,\n\t            activeName: 'index' // 对应router名称\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'setting'\n\t        });\n\t    }\n\t    \n\t    setActiveName(name){\n\t        console.log(name)\n\t\n\t        this.setState({\n\t            visible: false // 如果需要点击之后关闭false\n\t        })\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    render(){\n\t        // console.log('render', this.state.visible)\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} ceiling={100} clickCallback={this.onMenuChange.bind(this)}>\n\t                    <Menu.Header ref={(menuHandler)=>{this.menuHandler=menuHandler}}>\n\t                        <span>Phoenix</span>\n\t                    </Menu.Header>\n\t                    <Menu.Body width={this.state.width} \n\t                        placement={this.state.placement} \n\t                        closeButton={this.state.closeButton} \n\t                        getTarget={()=>{return this.menuHandler}}\n\t                        activeName={this.state.activeName} \n\t                    >\n\t                        <Menu.List clickCallback={this.setActiveName.bind(this)}>\n\t                            <Menu.Item name=\"index\" phIcon=\"meidianbao-fill\">首页</Menu.Item>\n\t                            <Menu.Item name=\"setting\" phIcon=\"shanghuguanli-fill\" href=\"#menu\" clickCallback={this.onMenuItemChange.bind(this)}>设置</Menu.Item>\n\t                        </Menu.List>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">ceiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                </div>\n\t                <Code target=\"menu-ceiling\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t                \n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">getTarget(必须) 返回点击元素</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前为MenuHeader</h3>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchActiveName.bind(this)}>改变activeName值:index->setting</Button>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchPlacement.bind(this)}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchWidth.bind(this)}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchCloseButton.bind(this)}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "Menu": {
            "name": "Menu",
            "shortname": "Menu",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "菜单组件",
            "namespace": "",
            "file": "src/menu/index.js",
            "line": 26,
            "description": "菜单组件<br/>\n- 可通过visible设置菜单初始是否可见，默认不可见。\n- 不设置ceiling时默认菜单不吸顶，设置ceiling为具体数值时表示从当前距离开始吸顶，设置0表示至始至终吸顶。\n- 可通过clickCallback函数设置菜单打开收起的回调函数。\n\n主要属性和接口：\n- visible:初始展开或收起的状态, 默认false收起。\n- ceiling:设置吸顶的距离, 默认不吸顶, 设置0表示始终吸顶。\n- clickCallback:菜单打开关闭时的回调函数。 <br/>\n如：\n```code\n    <Menu ceiling={100} visible={true} clickCallback={(visible)=>{console.log(visible);}}>\n        <Menu.Header>\n            标题一\n        </Menu.Header>\n        <Menu.Body>\n            ...\n        </Menu.Body>\n    </Menu>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.3.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\timport classnames from \"classnames\";\n\t\n\timport Menu from \"phoenix-ui/lib/menu\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Icon from \"phoenix-ui/lib/icon\"\n\timport Code from \"./code/code\"\n\t\n\texport default class menu extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            visible: false,\n\t            placement: 'top',\n\t            width: 40,\n\t            closeButton: false,\n\t            activeName: 'index' // 对应router名称\n\t        }\n\t    }\n\t\n\t    onMenuChange(visible){\n\t        console.log(visible);\n\t    }\n\t\n\t    switchPlacement(){\n\t        this.setState({\n\t            placement: \"left-full\"\n\t        });\n\t    }\n\t\n\t    switchWidth(){\n\t        this.setState({\n\t            width: 50\n\t        });\n\t    }\n\t\n\t    switchCloseButton(){\n\t        this.setState({\n\t            closeButton: !this.state.closeButton\n\t        });\n\t    }\n\t\n\t    switchActiveName(){\n\t        this.setState({\n\t            activeName: 'setting'\n\t        });\n\t    }\n\t    \n\t    setActiveName(name){\n\t        console.log(name)\n\t\n\t        this.setState({\n\t            visible: false // 如果需要点击之后关闭false\n\t        })\n\t    }\n\t\n\t    onMenuItemChange(name){\n\t        console.log(name);\n\t    }\n\t\n\t    render(){\n\t        // console.log('render', this.state.visible)\n\t        return(\n\t            <div>\n\t                <Menu visible={this.state.visible} ceiling={100} clickCallback={this.onMenuChange.bind(this)}>\n\t                    <Menu.Header ref={(menuHandler)=>{this.menuHandler=menuHandler}}>\n\t                        <span>Phoenix</span>\n\t                    </Menu.Header>\n\t                    <Menu.Body width={this.state.width} \n\t                        placement={this.state.placement} \n\t                        closeButton={this.state.closeButton} \n\t                        getTarget={()=>{return this.menuHandler}}\n\t                        activeName={this.state.activeName} \n\t                    >\n\t                        <Menu.List clickCallback={this.setActiveName.bind(this)}>\n\t                            <Menu.Item name=\"index\" phIcon=\"meidianbao-fill\">首页</Menu.Item>\n\t                            <Menu.Item name=\"setting\" phIcon=\"shanghuguanli-fill\" href=\"#menu\" clickCallback={this.onMenuItemChange.bind(this)}>设置</Menu.Item>\n\t                        </Menu.List>\n\t                    </Menu.Body>\n\t                </Menu>\n\t\n\t                <h2 className=\"comp-title\">Menu</h2>\n\t                <h3 className=\"comp-type\"><strong>Menu属性</strong></h3>\n\t                <h3 className=\"comp-type\">visible(默认false) 初始可见值</h3>\n\t                <Code target=\"menu-visible\" />\n\t\n\t                <h3 className=\"comp-type\">ceiling 滚动吸顶的距离，默认不吸顶</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前设置为100</h3>\n\t                </div>\n\t                <Code target=\"menu-ceiling\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 菜单展开收起的回调函数</h3>\n\t                <Code target=\"menu-onmenuchange\" />\n\t                \n\t\n\t                <h3 className=\"comp-type\"><strong>MenuBody属性</strong></h3>\n\t                <h3 className=\"comp-type\">getTarget(必须) 返回点击元素</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">当前为MenuHeader</h3>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">activeName(默认null) 当前导航选中的菜单项</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchActiveName.bind(this)}>改变activeName值:index->setting</Button>\n\t                </div>\n\t\n\t                <h3 className=\"comp-type\">placement(默认top) 菜单的位置</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchPlacement.bind(this)}>改变placement值:top->left-full</Button>\n\t                </div>\n\t                <Code target=\"menu-body-placement\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认50) 侧边菜单的宽度</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchWidth.bind(this)}>改变width值:40->50</Button>\n\t                </div>\n\t                <Code target=\"menu-body-width\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton 菜单主体的关闭按钮是否显示</h3>\n\t                <div className=\"content\">\n\t                    <Button onClick={this.switchCloseButton.bind(this)}>切换closeButton值:默认false</Button>\n\t                </div>\n\t                <Code target=\"menu-body-closebutton\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuList属性</strong></h3>\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-list-onmenulistchange\" />\n\t\n\t\n\t                <h3 className=\"comp-type\"><strong>MenuItem属性</strong></h3>\n\t                <h3 className=\"comp-type\">phIcon(默认无) 菜单项名称前面的符号️类型</h3>\n\t                <Code target=\"menu-item-phicon\" />\n\t\n\t                <h3 className=\"comp-type\">name(默认无) 当前导航选中的菜单项</h3>\n\t                <Code target=\"menu-item-name\" />\n\t\n\t                <h3 className=\"comp-type\">href(默认无) 菜单项的链接</h3>\n\t                <Code target=\"menu-item-href\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击菜单项时的回调</h3>\n\t                <Code target=\"menu-item-onmenuitemchange\" />\n\t\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/menu"
            ],
            "isApp": true,
            "show": true
        },
        "Alert": {
            "name": "Alert",
            "shortname": "Alert",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "弹出框组件",
            "namespace": "",
            "file": "src/modal/Alert.js",
            "line": 9,
            "description": "Alert组件<br/>\n- 由于弹框的显示操作在组件以外, 所以需要在使用时自定义`visible`、`closeCallback`函数。\n- 可通过title设置弹出框标题，content设置内容，buttons设置尾部按钮。(相对Dialog新增参数)\n- 默认有[确定]1个按钮，点击[确定]默认的执行函数是closeCallback直接关闭。\n- 通过visible设置弹框是否显示, 可选true/false, 必需。\n- 可通过closeCallback配置点击弹框阴影部分以及弹框右上角X按钮来关闭弹框。\n- 可通过closeButton来配置弹框右上角X按钮是否显示, 默认不显示。\n- 默认传了closeCallback之后阴影部分就具备点击关闭弹框的按钮, 如果需要去掉该功能需要额外传shadowDisabled作为标识。\n\n主要属性和接口：\n- title:弹框的标题，必需。\n- content:弹框的内容，必需。\n- buttons:尾部按钮的内容，必需是数组的形式，text标识填充的问题，phStyle表示主题，onHandle表示点击的回调，otherProps传递按钮的其他属性，如{active:true, block:true, hollow: true}。\n- visible:弹框是否显示标识, 默认false不可见。\n- closeCallback:关闭弹框的功能函数。\n- closeButton:右上角关闭按钮是否显示的标识, 默认不显示。\n- shadowDisabled:阴影部分是否可点击关闭按钮, 默认传了closeCallback函数就可以关闭。\n\n示例:\n```code\n     const buttons = [\n           {text: '取消', phStyle: 'gray', otherProps: {hollow: true}}, // text默认'确定', phStyle默认primary，onHandle默认执行closeCallback\n           {text: '确定', onHandle: this.confirmCallback}\n       ];\n       ...\n     <Alert closeButton shadowDisabled visible={this.state.visible} closeCallback={this.closeCallback.bind(this,'visible')} \n         title='这是标题' content='这里是弹出框的内容...' buttons={buttons} />\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.5.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Alert from \"phoenix-ui/lib/modal/Alert\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\";\n\t\n\texport default class alert extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible1: false,\n\t            visible2: false,\n\t            visible3: false,\n\t            visible4: false\n\t        }\n\t    }\n\t\n\t    closeCallback(key){\n\t        let o = {};\n\t        o[key] = false;\n\t        this.setState(o);\n\t    }\n\t\n\t    confirmCallback(key){\n\t        this.closeCallback(key);\n\t    }\n\t\n\t    render(){\n\t        const buttons1 = [\n\t            // text默认\"确定\", phStyle默认primary，onHandle默认closeCallback, otherProps传按钮的属性\n\t            {text: \"取消\", phStyle: \"gray\", otherProps: {hollow: true}}, \n\t            {onHandle: this.confirmCallback.bind(this,\"visible2\")}\n\t        ],\n\t            buttons2 = [\n\t            {text: \"按钮一\", otherProps: {hollow: true}},\n\t            {text: \"按钮二\", otherProps: {hollow: true}},\n\t            {text: \"按钮三\", otherProps: {hollow: true}}\n\t        ],\n\t        buttons3 = [\n\t            {text: \"取消\", phStyle: \"gray\", otherProps: {hollow: true}}, \n\t            {onHandle: this.confirmCallback.bind(this,\"visible4\")}\n\t        ]\n\t        const content = <p>这里是弹出框的内容...</p>;\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Alert</h2>\n\t                <h3 className=\"comp-type\">title 定义标题; content 定义内容</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible1:true})}}>alert默认状态</Button>\n\t                </div>\n\t                <Alert visible={this.state.visible1} closeCallback={this.closeCallback.bind(this,\"visible1\")} title=\"这是标题\" content={content} />\n\t                <Code target=\"alert\" />\n\t\n\t                <h3 className=\"comp-type\">buttons 定义尾部按钮</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">2个按钮</h3>\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible2:true})}}>自定义按钮buttons</Button>\n\t                    <h3 className=\"comp-tip\">多个按钮</h3>\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible3:true})}}>自定义按钮buttons</Button>\n\t                </div>\n\t                <Alert visible={this.state.visible2} closeCallback={this.closeCallback.bind(this,\"visible2\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons1} />\n\t                <Alert visible={this.state.visible3} closeCallback={this.closeCallback.bind(this,\"visible3\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons2} />\n\t                <Code target=\"alert-buttons\" />\n\t\n\t                <h3 className=\"comp-type\">其他属性(visible、closeCallback、closeButton、shadowDisabled)参照<a href=\"#/dialog\">Dialog</a>组件</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible4:true})}}>完整案例</Button>\n\t                </div>\n\t                <Alert visible={this.state.visible4} closeCallback={this.closeCallback.bind(this,\"visible4\")} closeButton shadowDisabled\n\t                    title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons3} />\n\t                <Code target=\"alert-whole\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/alert"
            ],
            "isApp": true,
            "show": true
        },
        "Dialog": {
            "name": "Dialog",
            "shortname": "Dialog",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "弹出框组件",
            "namespace": "",
            "file": "src/modal/Dialog.js",
            "line": 21,
            "description": "弹框组件<br/>\n- 由于弹框的显示操作在组件以外, 所以需要在使用时自定义`visible`、`closeCallback`函数。\n- 通过visible设置弹框是否显示, 可选true/false, 必需。\n- 可通过closeCallback配置点击弹框阴影部分以及弹框右上角X按钮来关闭弹框。\n- 可通过closeButton来配置弹框右上角X按钮是否显示, 默认不显示。\n- 默认传了closeCallback之后阴影部分就具备点击关闭弹框的按钮, 如果需要去掉该功能需要额外传shadowDisabled作为标识。\n\n主要属性和接口：\n- visible:弹框是否显示标识, 默认false不可见<br/>\n- closeCallback:关闭弹框的功能函数<br/>\n- closeButton:右上角关闭按钮是否显示的标识, 默认不显示<br/>\n- shadowDisabled:阴影部分是否可点击关闭按钮, 默认传了closeCallback函数就可以关闭<br/>\n\n示例:\n```code\n    <Dialog visible={this.state.visible} closeCallback={::this.closeCallback} closeButton shadowDisabled>\n        <Dialog.Title>标题标题</Dialog.Title>\n        <Dialog.Body>\n            <p>可自定义表格内容</p>\n        </Dialog.Body>\n        <Dialog.Footer>\n            <Button hollow phSize='lg' phStyle='gray' onClick={::this.closeCallback}>取消</Button>\n        </Dialog.Footer>\n    </Dialog>\n```\n```code\n    onShow(){\n        this.setState({\n            visible: true\n        });\n    }\n    closeCallback(){\n        this.setState({\n            visible: false\n        });\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.4.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport ButtonGroup from \"phoenix-ui/lib/button-group\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Dialog from \"phoenix-ui/lib/modal/Dialog\"\n\timport Code from \"./code/code\"\n\t\n\texport default class dialog extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible1: false,\n\t            visible2: false,\n\t            visible3: false\n\t        }\n\t    }\n\t\n\t    onShow(key){\n\t        let o = {};\n\t        o[key] = true;\n\t        this.setState(o);\n\t    }\n\t\n\t    closeCallback(key){\n\t        let o = {};\n\t        o[key] = false;\n\t        this.setState(o);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Dialog</h2>\n\t                <h3 className=\"comp-type\">visible(默认false) 弹框是否可见，必需<br/>closeCallback 关闭弹框的执行函数</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={this.onShow.bind(this,\"visible1\")} >dialog1</Button>\n\t                </div>\n\t                <Dialog visible={this.state.visible1} closeCallback={this.closeCallback.bind(this,\"visible1\")}>\n\t                    <Dialog.Title>标题1</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer>\n\t                        <ButtonGroup>\n\t                            <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={this.closeCallback.bind(this,\"visible1\")}>取消</Button>\n\t                            <Button hollow phSize=\"lg\" onClick={this.closeCallback.bind(this,\"visible1\")}>确定</Button>\n\t                        </ButtonGroup> \n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t                <Code target=\"dialog-closecallback\" />\n\t\n\t                <h3 className=\"comp-type\">closeButton(默认不显示) 是否显示弹框左上角关闭按钮</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={this.onShow.bind(this,\"visible2\")}>dialog2</Button>\n\t                </div>\n\t                <Dialog visible={this.state.visible2} closeCallback={this.closeCallback.bind(this,\"visible2\")} closeButton>\n\t                    <Dialog.Title>标题2</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer>\n\t                        <ButtonGroup>\n\t                            <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={this.closeCallback.bind(this,\"visible2\")}>取消</Button>\n\t                            <Button hollow phSize=\"lg\" onClick={this.closeCallback.bind(this,\"visible2\")}>确定</Button>\n\t                        </ButtonGroup>\n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t                <Code target=\"dialog-closebutton\" />\n\t\n\t                <h3 className=\"comp-type\">shadowDisabled(默认可关闭) 阴影部分是否可点击关闭弹框</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={this.onShow.bind(this,\"visible3\")}>dialog3</Button>\n\t                </div>\n\t                <Dialog visible={this.state.visible3} closeCallback={this.closeCallback.bind(this,\"visible3\")} shadowDisabled>\n\t                    <Dialog.Title>标题3</Dialog.Title>\n\t                    <Dialog.Body>\n\t                        <p>可自定义表格内容</p>\n\t                    </Dialog.Body>\n\t                    <Dialog.Footer> \n\t                        <ButtonGroup>                       \n\t                            <Button hollow phSize=\"lg\" phStyle=\"gray\" onClick={this.closeCallback.bind(this,\"visible3\").bind(this)}>取消</Button>\n\t                            <Button hollow phSize=\"lg\" onClick={this.closeCallback.bind(this,\"visible3\")}>确定</Button>\n\t                        </ButtonGroup>\n\t                    </Dialog.Footer>\n\t                </Dialog>\n\t                <Code target=\"dialog-shadowdisabled\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/dialog"
            ],
            "isApp": true,
            "show": true
        },
        "Prompt": {
            "name": "Prompt",
            "shortname": "Prompt",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "弹出框组件",
            "namespace": "",
            "file": "src/modal/Prompt.js",
            "line": 10,
            "description": "Prompt组件<br/>\n- 由于弹框的显示操作在组件以外, 所以需要在使用时自定义`visible`、`closeCallback`函数。\n- 可通过title设置弹出框标题，content设置内容，buttons设置尾部按钮。(相对Dialog新增参数)\n- 按钮默认有[取消, 确定]2个按钮，点击[取消]默认的执行函数是直接关闭，点击[确定]通过传入的confirmCallback函数可获取input的value数组，可自行添加回调。。\n- 通过visible设置弹框是否显示, 可选true/false, 必需。\n- 可通过closeCallback配置点击弹框阴影部分以及弹框右上角X按钮来关闭弹框。\n- 可通过closeButton来配置弹框右上角X按钮是否显示, 默认不显示。\n- 默认传了closeCallback之后阴影部分就具备点击关闭弹框的按钮, 如果需要去掉该功能需要额外传shadowDisabled作为标识。\n\n主要属性和接口：\n- title:弹框的标题，必需。\n- content:弹框的内容，必需。\n- buttons:尾部按钮的内容，必需是数组的形式，text标识填充的问题，phStyle表示主题，onHandle表示点击按钮的回调，otherProps传递按钮的其他属性，如{active:true, block:true, hollow: true}。\n- confirmCallback:点击确定按钮的回调，返回input的value。\n- visible:弹框是否显示标识, 默认false不可见。\n- closeCallback:关闭弹框的功能函数。\n- closeButton:右上角关闭按钮是否显示的标识, 默认不显示。\n- shadowDisabled:阴影部分是否可点击关闭按钮, 默认传了closeCallback函数就可以关闭。\n\n示例:\n```code\n     const buttons = [\n           {text: '取消', phStyle: 'gray', otherProps: {hollow: true}}, // text默认'确定', phStyle默认primary，onHandle默认执行closeCallback\n           {text: '确定', onHandle: this.confirmCallback}\n       ];\n       ...\n     <Prompt closeButton shadowDisabled visible={this.state.visible} closeCallback={this.closeCallback.bind(this,'visible')} \n         title='这是标题' content='这里是弹出框的内容...' buttons={buttons} />\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.5.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Prompt from \"phoenix-ui/lib/modal/Prompt\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\"\n\t\n\texport default class prompt extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            visible1: false,\n\t            visible2: false,\n\t            visible3: false,\n\t            visible4: false,\n\t            inputName: \"\",\n\t            inputPassword: \"\"\n\t        }\n\t    }\n\t\n\t    closeCallback(key){\n\t        let o = {};\n\t        o[key] = false;\n\t        this.setState(o);\n\t    }\n\t\n\t    confirmCallback(valueArr){ // 返回input值的数组\n\t        console.log(valueArr);\n\t        this.closeCallback('visible2');\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t             // text默认\"确定\", phStyle默认primary，onHandle默认closeCallback, otherProps传按钮的属性\n\t            {text: \"取消\", phStyle: \"gray\", otherProps: {hollow: true}, onHandle: this.confirmCallback.bind(this)}, \n\t            {text: \"提交\", onHandle: this.confirmCallback.bind(this)}\n\t        ];\n\t        const inputs = [ \n\t            // type默认text，其他属性可选，按照正常输入; \n\t            {value: \"hah\", placeholder: \"用户名\", maxLength: 10},\n\t            {type: \"password\", placeholder: \"密码\"}\n\t        ];\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Prompt</h2>\n\t                <h3 className=\"comp-type\">title 定义标题; content 定义内容</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">默认有[取消, 确定]2个按钮，点击[取消]默认的执行函数是直接关闭，点击[确定]通过传入的confirmCallback函数可获取input的value数组，可自行添加回调。</h3>\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible1:true})}}>Prompt默认状态</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible1} closeCallback={this.closeCallback.bind(this,\"visible1\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" \n\t                    confirmCallback={(inputValue)=>{ console.log(inputValue); this.closeCallback(\"visible1\"); }} />\n\t                <Code target=\"prompt\" />\n\t\n\t                <h3 className=\"comp-type\">buttons 定义尾部按钮</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible2:true})}}>自定义按钮buttons</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible2} closeCallback={this.closeCallback.bind(this,\"visible2\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" buttons={buttons} />\n\t                <Code target=\"prompt-buttons\" />\n\t     \n\t                <h3 className=\"comp-type\">inputs 定义内容区域文本框</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible3:true})}}>自定义inputs</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible3} closeCallback={this.closeCallback.bind(this,\"visible3\")} title=\"这是标题\" content=\"这里是弹出框的内容...\" inputs={inputs} \n\t                    confirmCallback={(inputValue)=>{ console.log(inputValue); this.closeCallback(\"visible3\"); }} />\n\t                <Code target=\"prompt-inputs\" />\n\t\n\t                <h3 className=\"comp-type\">其他属性(visible、closeCallback、closeButton、shadowDisabled)参照<a href=\"#/dialog\">Dialog</a>组件</h3>\n\t                <div className=\"content\">\n\t                    <Button radius phSize=\"lg\" onClick={()=>{this.setState({visible4:true})}}>完整案例</Button>\n\t                </div>\n\t                <Prompt visible={this.state.visible4} closeCallback={this.closeCallback.bind(this,\"visible4\")} closeButton shadowDisabled\n\t                    title=\"这是标题\" content=\"这里是弹出框的内容...\" confirmCallback={(inputValue)=>{ console.log(inputValue); this.closeCallback(\"visible4\"); }}  />\n\t                <Code target=\"prompt-whole\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/prompt"
            ],
            "isApp": true,
            "show": true
        },
        "FilterCheckbox": {
            "name": "FilterCheckbox",
            "shortname": "FilterCheckbox",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "筛选控件",
            "namespace": "",
            "file": "src/ph-filter/components/FilterCheckbox.js",
            "line": 8,
            "description": "多条件筛选组件<br/>\n- 可通过groupIndex设置主菜单索引值，默认0，即第一个。\n- 可通过choose设置初始选中的的id的字符串，以逗号隔开。\n- 可通过buttons设置底部按钮，以数组的格式传入，如`[{text:'取消', phStyle:'info', onHandle:this.cancelChoose.bind(this), otherProps: {hollow:true}}]`。\n\n主要属性和接口：\n- groupIndex: 主菜单索引值。\n- choose: 选中id的字符串。\n- buttons: 底部按钮数组。\n如：\n```code\n <FilterCheckbox choose={this.state.choose} groupIndex={2} buttons={buttons}>\n     {\n         this.state.filterData.map((cityShopList,index)=>{\n             return (\n                 <ItemGroup key={cityShopList.cityId} mainKey={cityShopList.cityId} label={cityShopList.cityName}>\n                     {\n                         cityShopList.shopInfoDTOList.map((shopInfo)=>{\n                             return  <Item disabled={shopInfo.status==1} key={shopInfo.shopId} itemKey={shopInfo.shopId}>{shopInfo.shopName}</Item>\n                         })\n                     }\n                 </ItemGroup>\n             );\n         })\n     }\n </FilterCheckbox>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\timport {ajax} from \"./utils/tool.js\"\n\t\n\timport PhFilter from \"phoenix-ui/lib/ph-filter\"\n\timport List from \"phoenix-ui/lib/list\"\n\t// import Code from \"./code/code\";\n\t\n\tconst CheckboxContainer = PhFilter.CheckboxContainer,\n\t      Item = PhFilter.Item,\n\t      ItemGroup = PhFilter.ItemGroup\n\t\n\texport default class phFilterCheckbox extends Component {\n\t\n\t    constructor(props,context){\n\t        super(props,context)\n\t\n\t        this.state = {\n\t            filterData: [],\n\t            choose: ''\n\t        }\n\t\n\t        this.getData(\"./data/shop-list.json\", 'filterData');\n\t        this.getData(\"./data/choose.json\", 'choose');\n\t    }\n\t\n\t    getData(fileName, key){ // 获取数据方法，ajax方法在下面定义了\n\t        ajax(fileName).then((json)=>{\n\t            let o = {}\n\t            o[key] = json\n\t\n\t            this.setState(o)\n\t\n\t        }, (error)=>{// 加载失败\n\t            console.error(\"出错了\", error)\n\t        });\n\t    }\n\t\n\t    onSubmit(choose){\n\t        console.log(choose)\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t            {onHandle: this.onSubmit.bind(this)}\n\t        ]\n\t        \n\t        return(\n\t            <div>\n\t                <CheckboxContainer choose={this.state.choose} index={2} buttons={buttons}>\n\t                    {\n\t                        this.state.filterData.map((cityShopList,index)=>{\n\t                            return (\n\t                                <ItemGroup key={cityShopList.cityId} mainKey={cityShopList.cityId} label={cityShopList.cityName}>\n\t                                    {\n\t                                        cityShopList.shopInfoDTOList.map((shopInfo)=>{\n\t                                            return (\n\t                                                <Item disabled={shopInfo.status==1} key={shopInfo.shopId} itemKey={shopInfo.shopId}>\n\t                                                    {shopInfo.shopName}\n\t                                                </Item>\n\t                                            );\n\t                                        })\n\t                                    }\n\t                                </ItemGroup>\n\t                            );\n\t                        })\n\t                    }\n\t                    \n\t                </CheckboxContainer>\n\t                \n\t                <a href=\"#/ph-filter-code\" className=\"ph-filter-code\">查看代码</a>\n\t            </div>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/ph-filter-checkbox"
            ],
            "isApp": true,
            "show": true
        },
        "FilterContainer": {
            "name": "FilterContainer",
            "shortname": "FilterContainer",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "筛选控件",
            "namespace": "",
            "file": "src/ph-filter/components/FilterContainer.js",
            "line": 21,
            "description": "单选筛选<br/>\n- 可通过index设置筛选默认打开的面板。默认－1，即都不打开。\n- 可通过hideCat选择是否要显示筛选头部。\n- 可通过clickCallback设置有效选择的回调，当没有按钮时选中即触发，有按钮时点击按钮时触发。\n\n主要属性和接口：\n- index: 默认打开的面板。\n- hideCat: 是否显示筛选头部。\n- clickCallback: 有效选择的回调。\n\n有2种形式，其一，简单模式。<br/>\n如：\n```code\n this.state = {\n     panel1:[\n         {key:'sndq',value:'上南地区'},\n         {key:'ljz',value:'陆家嘴'},\n         {key:'bbb',value:'八佰伴'},\n         {key:'pdxq',value:'浦东新区'}\n     ]\n }\n...\n <FilterContainer index={0} hideCat={false} clickCallback={this.clickCallback.bind(this)}>\n     <PanelSimple readOnly className='panel1' selected={{key:'ljz',value:'陆家嘴'}}>\n         {\n             this.state.panel1.map(function(item){\n                 return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n             })\n         }\n     </PanelSimple>\n </FilterContainer>\n```\n其一，双栏模式。<br/>\n如：\n```code\n <FilterContainer index={0} hideCat={false} clickCallback={this.clickCallback.bind(this)}>\n     <Panel readOnly selected={{key:'s_flower',value:'花店'}}>\n         <ItemGroup label={<span style={{color:'red'}}>美食</span>}>\n             <Item itemKey='f_all'>全部美食</Item>\n             <Item itemKey='f_bbc'>本帮江浙菜</Item>\n             ...\n         </ItemGroup>\n         <ItemGroup  label='电影'>\n             <Item itemKey='m_all'>全部电影</Item>\n             <Item itemKey='m_p'>私人影院</Item>\n             ...\n         </ItemGroup>\n         ...\n     </Panel>\n </FilterContainer>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport PhFilter from \"phoenix-ui/lib/ph-filter\"\n\timport Code from \"./code/code\"\n\t\n\tconst Container = PhFilter.Container,\n\t      PanelSimple = PhFilter.PanelSimple,\n\t      Panel = PhFilter.Panel,\n\t      Item = PhFilter.Item,\n\t      ItemGroup = PhFilter.ItemGroup\n\t\n\texport default class phFilter extends Component {\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            panel1:[],\n\t            panel2:{},\n\t            selected2: {key:'m_sryy',value:'私人影院'},\n\t            panel3:[],\n\t        }\n\t    }\n\t\n\t    componentDidMount(){\n\t        var self=this;\n\t\n\t        setTimeout(function(){\n\t            self.setState({\n\t                panel1:[\n\t                    {key:'sndq',value:'上南地区'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'}\n\t                ],\n\t                panel2:{\n\t                    '美食':[\n\t                        {key:'f_bbc',value:'本帮江浙菜'},\n\t                        {key:'f_rhll',value:'日韩料理'},\n\t                        {key:'f_hg',value:'火锅'},\n\t                        {key:'f_zzc',value:'自助餐'},\n\t                        {key:'f_xyxc',value:'宵夜小吃'}\n\t                    ],\n\t                    '电影':[\n\t                        {key:'m_sryy',value:'私人影院'},\n\t                        {key:'m_fyt',value:'放映厅'}\n\t                    ],\n\t                    '购物':[\n\t                        {key:'s_vz',value:'女装'},\n\t                        {key:'s_nz',value:'男装'},\n\t                        {key:'s_tz',value:'童装'},\n\t                        {key:'s_wj',value:'玩具'},\n\t                        {key:'s_xb',value:'鞋包'},\n\t                        {key:'s_csyp',value:'床上用品'}\n\t                    ]\n\t                },\n\t                panel3: [\n\t                    {key:'sjgy',value:'世纪公园'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'},\n\t                    {key:'zb',value:'闸北'},\n\t                    {key:'ja',value:'静安'},\n\t                    {key:'yp',value:'杨浦'},\n\t                    {key:'sjgy1',value:'世纪公园1'},\n\t                    {key:'ljz1',value:'陆家嘴1'},\n\t                    {key:'bbb1',value:'八佰伴1'},\n\t                    {key:'pdxq1',value:'浦东新区1'},\n\t                    {key:'zb1',value:'闸北1'},\n\t                    {key:'ja1',value:'静安1'},\n\t                    {key:'yp1',value:'杨浦1'}\n\t                ]\n\t            })\n\t        },0)\n\t    }\n\t\n\t    renderPanelList(){\n\t        let newPanel = []\n\t\n\t        for(let i in this.state.panel2){\n\t            let itemGroup = this.state.panel2[i]\n\t            newPanel.push(\n\t                <ItemGroup key={i} label={i}>\n\t                    {\n\t                        itemGroup.map((item)=>{\n\t                            return (\n\t                                <Item key={item.key} itemKey={item.key}>\n\t                                    {item.value}\n\t                                </Item>\n\t                            )\n\t                        })\n\t                    }\n\t                </ItemGroup>\n\t            )\n\t        }\n\t\n\t        return newPanel\n\t    }\n\t\n\t    clickCallback(key){\n\t        console.log(key);\n\t    }\n\t\n\t    resetFilter(key){\n\t        this.setState({\n\t            selected2: null\n\t        })\n\t    }\n\t\n\t    confirmFilter(key){\n\t        console.log(key);\n\t    }\n\t\n\t    test(){\n\t        console.log(this.state.selected2)\n\t        return ''\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t            {text:'重置', phStyle:'gray', onHandle: this.resetFilter.bind(this), otherProps: {hollow:true}},\n\t            {onHandle: this.confirmFilter.bind(this)},\n\t        ]\n\t\n\t        return (\n\t            <div>\n\t                <h2 className=\"comp-title\">PhFilter</h2>\n\t                <Container index={-1} hidecat={false} clickCallback={this.clickCallback.bind(this)}>\n\t                    <PanelSimple default='筛选'>\n\t                        {\n\t                            this.state.panel3.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                    <Panel default='筛选' selected={this.state.selected2} buttons={buttons} index={-1}>\n\t                        {this.renderPanelList()}\n\t                    </Panel>\n\t                    <PanelSimple readOnly className='panel1' selected={{key:'ljz',value:'陆家嘴'}}>\n\t                        {\n\t                            this.state.panel1.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                </Container>\n\t\n\t                <h3 className=\"comp-type\"><strong>FilterContainer</strong></h3>\n\t                <h3 className=\"comp-type\">index(默认-1) 初始打开的面板</h3>\n\t                <h3 className=\"comp-type\">hideCat 是否隐藏头部</h3>\n\t                <h3 className=\"comp-type\">clickCallback 项目选择的回调</h3>\n\t                <Code target=\"filter-container\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>PanelSimple</strong></h3>\n\t                <h3 className=\"comp-type\">default 没有选中项时的默认显示文字</h3>\n\t                <h3 className=\"comp-type\">selected 选中的项目</h3>\n\t                <h3 className=\"comp-type\">readOnly 不可选的状态</h3>\n\t                <h3 className=\"comp-type\">buttons 传入的按钮数组</h3>\n\t                <Code target=\"filter-panelsimple\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Panel</strong></h3>\n\t                <h3 className=\"comp-type\">index 主菜单选中项索引值</h3>\n\t                <h3 className=\"comp-type\">其他属性同PanelSimple</h3>\n\t                <Code target=\"filter-panel\"/>\n\t\n\t                <h3 className=\"comp-type\"><strong>ItemGroup(配合Panel使用)</strong></h3>\n\t                <h3 className=\"comp-type\">label 显示的文字</h3>\n\t                <Code target=\"filter-itemgroup\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Item</strong></h3>\n\t                <h3 className=\"comp-type\">itemKey(必须) 唯一标识</h3>\n\t                <Code target=\"filter-item\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/ph-filter"
            ],
            "isApp": true,
            "show": true
        },
        "FilterItem": {
            "name": "FilterItem",
            "shortname": "FilterItem",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "筛选控件",
            "namespace": "",
            "file": "src/ph-filter/components/FilterItem.js",
            "line": 6,
            "description": "筛选项<br/>\n- 通过itemKey设置筛选项唯一标识。\n- 可通过disabled设置筛选项是否不可选，适用于多选筛选(FilterCheckbox)。\n\n主要属性和接口：\n- itemKey: 筛选项唯一标识，必须。\n- disabled: 是否不可选。\n如：\n```code\n <FilterCheckbox>\n     {\n         this.state.filterData.map((cityShopList,index)=>{\n             return (\n                 <ItemGroup key={cityShopList.cityId} mainKey={cityShopList.cityId} label={cityShopList.cityName}>\n                     {\n                         cityShopList.shopInfoDTOList.map((shopInfo)=>{\n                             return  <Item disabled={shopInfo.status==1} key={shopInfo.shopId} itemKey={shopInfo.shopId}>{shopInfo.shopName}</Item>\n                         })\n                     }\n                 </ItemGroup>\n             );\n         })\n     }\n </FilterCheckbox>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport PhFilter from \"phoenix-ui/lib/ph-filter\"\n\timport Code from \"./code/code\"\n\t\n\tconst Container = PhFilter.Container,\n\t      PanelSimple = PhFilter.PanelSimple,\n\t      Panel = PhFilter.Panel,\n\t      Item = PhFilter.Item,\n\t      ItemGroup = PhFilter.ItemGroup\n\t\n\texport default class phFilter extends Component {\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            panel1:[],\n\t            panel2:{},\n\t            selected2: {key:'m_sryy',value:'私人影院'},\n\t            panel3:[],\n\t        }\n\t    }\n\t\n\t    componentDidMount(){\n\t        var self=this;\n\t\n\t        setTimeout(function(){\n\t            self.setState({\n\t                panel1:[\n\t                    {key:'sndq',value:'上南地区'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'}\n\t                ],\n\t                panel2:{\n\t                    '美食':[\n\t                        {key:'f_bbc',value:'本帮江浙菜'},\n\t                        {key:'f_rhll',value:'日韩料理'},\n\t                        {key:'f_hg',value:'火锅'},\n\t                        {key:'f_zzc',value:'自助餐'},\n\t                        {key:'f_xyxc',value:'宵夜小吃'}\n\t                    ],\n\t                    '电影':[\n\t                        {key:'m_sryy',value:'私人影院'},\n\t                        {key:'m_fyt',value:'放映厅'}\n\t                    ],\n\t                    '购物':[\n\t                        {key:'s_vz',value:'女装'},\n\t                        {key:'s_nz',value:'男装'},\n\t                        {key:'s_tz',value:'童装'},\n\t                        {key:'s_wj',value:'玩具'},\n\t                        {key:'s_xb',value:'鞋包'},\n\t                        {key:'s_csyp',value:'床上用品'}\n\t                    ]\n\t                },\n\t                panel3: [\n\t                    {key:'sjgy',value:'世纪公园'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'},\n\t                    {key:'zb',value:'闸北'},\n\t                    {key:'ja',value:'静安'},\n\t                    {key:'yp',value:'杨浦'},\n\t                    {key:'sjgy1',value:'世纪公园1'},\n\t                    {key:'ljz1',value:'陆家嘴1'},\n\t                    {key:'bbb1',value:'八佰伴1'},\n\t                    {key:'pdxq1',value:'浦东新区1'},\n\t                    {key:'zb1',value:'闸北1'},\n\t                    {key:'ja1',value:'静安1'},\n\t                    {key:'yp1',value:'杨浦1'}\n\t                ]\n\t            })\n\t        },0)\n\t    }\n\t\n\t    renderPanelList(){\n\t        let newPanel = []\n\t\n\t        for(let i in this.state.panel2){\n\t            let itemGroup = this.state.panel2[i]\n\t            newPanel.push(\n\t                <ItemGroup key={i} label={i}>\n\t                    {\n\t                        itemGroup.map((item)=>{\n\t                            return (\n\t                                <Item key={item.key} itemKey={item.key}>\n\t                                    {item.value}\n\t                                </Item>\n\t                            )\n\t                        })\n\t                    }\n\t                </ItemGroup>\n\t            )\n\t        }\n\t\n\t        return newPanel\n\t    }\n\t\n\t    clickCallback(key){\n\t        console.log(key);\n\t    }\n\t\n\t    resetFilter(key){\n\t        this.setState({\n\t            selected2: null\n\t        })\n\t    }\n\t\n\t    confirmFilter(key){\n\t        console.log(key);\n\t    }\n\t\n\t    test(){\n\t        console.log(this.state.selected2)\n\t        return ''\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t            {text:'重置', phStyle:'gray', onHandle: this.resetFilter.bind(this), otherProps: {hollow:true}},\n\t            {onHandle: this.confirmFilter.bind(this)},\n\t        ]\n\t\n\t        return (\n\t            <div>\n\t                <h2 className=\"comp-title\">PhFilter</h2>\n\t                <Container index={-1} hidecat={false} clickCallback={this.clickCallback.bind(this)}>\n\t                    <PanelSimple default='筛选'>\n\t                        {\n\t                            this.state.panel3.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                    <Panel default='筛选' selected={this.state.selected2} buttons={buttons} index={-1}>\n\t                        {this.renderPanelList()}\n\t                    </Panel>\n\t                    <PanelSimple readOnly className='panel1' selected={{key:'ljz',value:'陆家嘴'}}>\n\t                        {\n\t                            this.state.panel1.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                </Container>\n\t\n\t                <h3 className=\"comp-type\"><strong>FilterContainer</strong></h3>\n\t                <h3 className=\"comp-type\">index(默认-1) 初始打开的面板</h3>\n\t                <h3 className=\"comp-type\">hideCat 是否隐藏头部</h3>\n\t                <h3 className=\"comp-type\">clickCallback 项目选择的回调</h3>\n\t                <Code target=\"filter-container\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>PanelSimple</strong></h3>\n\t                <h3 className=\"comp-type\">default 没有选中项时的默认显示文字</h3>\n\t                <h3 className=\"comp-type\">selected 选中的项目</h3>\n\t                <h3 className=\"comp-type\">readOnly 不可选的状态</h3>\n\t                <h3 className=\"comp-type\">buttons 传入的按钮数组</h3>\n\t                <Code target=\"filter-panelsimple\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Panel</strong></h3>\n\t                <h3 className=\"comp-type\">index 主菜单选中项索引值</h3>\n\t                <h3 className=\"comp-type\">其他属性同PanelSimple</h3>\n\t                <Code target=\"filter-panel\"/>\n\t\n\t                <h3 className=\"comp-type\"><strong>ItemGroup(配合Panel使用)</strong></h3>\n\t                <h3 className=\"comp-type\">label 显示的文字</h3>\n\t                <Code target=\"filter-itemgroup\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Item</strong></h3>\n\t                <h3 className=\"comp-type\">itemKey(必须) 唯一标识</h3>\n\t                <Code target=\"filter-item\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/ph-filter"
            ],
            "isApp": true,
            "show": true
        },
        "FilterItemGroup": {
            "name": "FilterItemGroup",
            "shortname": "FilterItemGroup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "筛选控件",
            "namespace": "",
            "file": "src/ph-filter/components/FilterItemGroup.js",
            "line": 4,
            "description": "多层筛选主菜单<br/>\n- 可通过label设置主菜单名称。\n- 可通过mainKey设置主菜单唯一标识，在多选筛选中是必须的(FilterCheckbox)。\n\n主要属性和接口：\n- label: 主菜单名称\n- mainKey: 在多条件筛选中设置主菜单唯一标识。\n如：\n```code\n <FilterCheckbox>\n     {\n         this.state.filterData.map((cityShopList,index)=>{\n             return (\n                 <ItemGroup key={cityShopList.cityId} mainKey={cityShopList.cityId} label={cityShopList.cityName}>\n                     {\n                         cityShopList.shopInfoDTOList.map((shopInfo)=>{\n                             return  <Item disabled={shopInfo.status==1} key={shopInfo.shopId} itemKey={shopInfo.shopId}>{shopInfo.shopName}</Item>\n                         })\n                     }\n                 </ItemGroup>\n             );\n         })\n     }\n </FilterCheckbox>\n```\n如：\n```code\n const buttons = [\n     {onHandle: this.confirmFilter.bind(this)},\n ]\n...\n <FilterContainer>\n     <Panel readOnly selected={{key:'s_flower',value:'花店'}}>\n         <ItemGroup label={<span style={{color:'red'}}>美食</span>}>\n             <Item itemKey='f_all'>全部美食</Item>\n             <Item itemKey='f_bbc'>本帮江浙菜</Item>\n             ...\n         </ItemGroup>\n         <ItemGroup  label='电影'>\n             <Item itemKey='m_all'>全部电影</Item>\n             <Item itemKey='m_p'>私人影院</Item>\n             ...\n         </ItemGroup>\n         ...\n     </Panel>\n </FilterContainer>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport PhFilter from \"phoenix-ui/lib/ph-filter\"\n\timport Code from \"./code/code\"\n\t\n\tconst Container = PhFilter.Container,\n\t      PanelSimple = PhFilter.PanelSimple,\n\t      Panel = PhFilter.Panel,\n\t      Item = PhFilter.Item,\n\t      ItemGroup = PhFilter.ItemGroup\n\t\n\texport default class phFilter extends Component {\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            panel1:[],\n\t            panel2:{},\n\t            selected2: {key:'m_sryy',value:'私人影院'},\n\t            panel3:[],\n\t        }\n\t    }\n\t\n\t    componentDidMount(){\n\t        var self=this;\n\t\n\t        setTimeout(function(){\n\t            self.setState({\n\t                panel1:[\n\t                    {key:'sndq',value:'上南地区'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'}\n\t                ],\n\t                panel2:{\n\t                    '美食':[\n\t                        {key:'f_bbc',value:'本帮江浙菜'},\n\t                        {key:'f_rhll',value:'日韩料理'},\n\t                        {key:'f_hg',value:'火锅'},\n\t                        {key:'f_zzc',value:'自助餐'},\n\t                        {key:'f_xyxc',value:'宵夜小吃'}\n\t                    ],\n\t                    '电影':[\n\t                        {key:'m_sryy',value:'私人影院'},\n\t                        {key:'m_fyt',value:'放映厅'}\n\t                    ],\n\t                    '购物':[\n\t                        {key:'s_vz',value:'女装'},\n\t                        {key:'s_nz',value:'男装'},\n\t                        {key:'s_tz',value:'童装'},\n\t                        {key:'s_wj',value:'玩具'},\n\t                        {key:'s_xb',value:'鞋包'},\n\t                        {key:'s_csyp',value:'床上用品'}\n\t                    ]\n\t                },\n\t                panel3: [\n\t                    {key:'sjgy',value:'世纪公园'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'},\n\t                    {key:'zb',value:'闸北'},\n\t                    {key:'ja',value:'静安'},\n\t                    {key:'yp',value:'杨浦'},\n\t                    {key:'sjgy1',value:'世纪公园1'},\n\t                    {key:'ljz1',value:'陆家嘴1'},\n\t                    {key:'bbb1',value:'八佰伴1'},\n\t                    {key:'pdxq1',value:'浦东新区1'},\n\t                    {key:'zb1',value:'闸北1'},\n\t                    {key:'ja1',value:'静安1'},\n\t                    {key:'yp1',value:'杨浦1'}\n\t                ]\n\t            })\n\t        },0)\n\t    }\n\t\n\t    renderPanelList(){\n\t        let newPanel = []\n\t\n\t        for(let i in this.state.panel2){\n\t            let itemGroup = this.state.panel2[i]\n\t            newPanel.push(\n\t                <ItemGroup key={i} label={i}>\n\t                    {\n\t                        itemGroup.map((item)=>{\n\t                            return (\n\t                                <Item key={item.key} itemKey={item.key}>\n\t                                    {item.value}\n\t                                </Item>\n\t                            )\n\t                        })\n\t                    }\n\t                </ItemGroup>\n\t            )\n\t        }\n\t\n\t        return newPanel\n\t    }\n\t\n\t    clickCallback(key){\n\t        console.log(key);\n\t    }\n\t\n\t    resetFilter(key){\n\t        this.setState({\n\t            selected2: null\n\t        })\n\t    }\n\t\n\t    confirmFilter(key){\n\t        console.log(key);\n\t    }\n\t\n\t    test(){\n\t        console.log(this.state.selected2)\n\t        return ''\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t            {text:'重置', phStyle:'gray', onHandle: this.resetFilter.bind(this), otherProps: {hollow:true}},\n\t            {onHandle: this.confirmFilter.bind(this)},\n\t        ]\n\t\n\t        return (\n\t            <div>\n\t                <h2 className=\"comp-title\">PhFilter</h2>\n\t                <Container index={-1} hidecat={false} clickCallback={this.clickCallback.bind(this)}>\n\t                    <PanelSimple default='筛选'>\n\t                        {\n\t                            this.state.panel3.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                    <Panel default='筛选' selected={this.state.selected2} buttons={buttons} index={-1}>\n\t                        {this.renderPanelList()}\n\t                    </Panel>\n\t                    <PanelSimple readOnly className='panel1' selected={{key:'ljz',value:'陆家嘴'}}>\n\t                        {\n\t                            this.state.panel1.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                </Container>\n\t\n\t                <h3 className=\"comp-type\"><strong>FilterContainer</strong></h3>\n\t                <h3 className=\"comp-type\">index(默认-1) 初始打开的面板</h3>\n\t                <h3 className=\"comp-type\">hideCat 是否隐藏头部</h3>\n\t                <h3 className=\"comp-type\">clickCallback 项目选择的回调</h3>\n\t                <Code target=\"filter-container\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>PanelSimple</strong></h3>\n\t                <h3 className=\"comp-type\">default 没有选中项时的默认显示文字</h3>\n\t                <h3 className=\"comp-type\">selected 选中的项目</h3>\n\t                <h3 className=\"comp-type\">readOnly 不可选的状态</h3>\n\t                <h3 className=\"comp-type\">buttons 传入的按钮数组</h3>\n\t                <Code target=\"filter-panelsimple\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Panel</strong></h3>\n\t                <h3 className=\"comp-type\">index 主菜单选中项索引值</h3>\n\t                <h3 className=\"comp-type\">其他属性同PanelSimple</h3>\n\t                <Code target=\"filter-panel\"/>\n\t\n\t                <h3 className=\"comp-type\"><strong>ItemGroup(配合Panel使用)</strong></h3>\n\t                <h3 className=\"comp-type\">label 显示的文字</h3>\n\t                <Code target=\"filter-itemgroup\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Item</strong></h3>\n\t                <h3 className=\"comp-type\">itemKey(必须) 唯一标识</h3>\n\t                <Code target=\"filter-item\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/ph-filter"
            ],
            "isApp": true,
            "show": true
        },
        "FilterPanel": {
            "name": "FilterPanel",
            "shortname": "FilterPanel",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "筛选控件",
            "namespace": "",
            "file": "src/ph-filter/components/FilterPanel.js",
            "line": 5,
            "description": "面板<br/>\n- 可通过selected设置选中的项目，格式如`{key:'ljz',value:'陆家嘴'}`。\n- 可通过default设置没有选项时的默认显示文字。\n- 可通过readOnly设置当前面板是否为只读模式。\n- 可通过buttons设置底部按钮组的样式、文字、回调等，格式如`[{text:'取消', phStyle:'info', onHandle:this.cancelChoose.bind(this), otherProps: {hollow:true}}]`。\n\n主要属性和接口：\n- selected: 默认打开的面板。\n- default: 是否显示筛选头部。\n- readOnly: 有效选择的回调。\n- buttons: 有效选择的回调。\n\n如：\n```code\n const buttons = [\n     {onHandle: this.onSubmit.bind(this)}\n ]\n...\n <FilterContainer>\n     <Panel readOnly selected={{key:'s_flower',value:'花店'}} buttons={buttons}>\n         <ItemGroup label={<span style={{color:'red'}}>美食</span>}>\n             <Item itemKey='f_all'>全部美食</Item>\n             <Item itemKey='f_bbc'>本帮江浙菜</Item>\n             ...\n         </ItemGroup>\n         <ItemGroup  label='电影'>\n             <Item itemKey='m_all'>全部电影</Item>\n             <Item itemKey='m_p'>私人影院</Item>\n             ...\n         </ItemGroup>\n         ...\n     </Panel>\n </FilterContainer>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport PhFilter from \"phoenix-ui/lib/ph-filter\"\n\timport Code from \"./code/code\"\n\t\n\tconst Container = PhFilter.Container,\n\t      PanelSimple = PhFilter.PanelSimple,\n\t      Panel = PhFilter.Panel,\n\t      Item = PhFilter.Item,\n\t      ItemGroup = PhFilter.ItemGroup\n\t\n\texport default class phFilter extends Component {\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            panel1:[],\n\t            panel2:{},\n\t            selected2: {key:'m_sryy',value:'私人影院'},\n\t            panel3:[],\n\t        }\n\t    }\n\t\n\t    componentDidMount(){\n\t        var self=this;\n\t\n\t        setTimeout(function(){\n\t            self.setState({\n\t                panel1:[\n\t                    {key:'sndq',value:'上南地区'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'}\n\t                ],\n\t                panel2:{\n\t                    '美食':[\n\t                        {key:'f_bbc',value:'本帮江浙菜'},\n\t                        {key:'f_rhll',value:'日韩料理'},\n\t                        {key:'f_hg',value:'火锅'},\n\t                        {key:'f_zzc',value:'自助餐'},\n\t                        {key:'f_xyxc',value:'宵夜小吃'}\n\t                    ],\n\t                    '电影':[\n\t                        {key:'m_sryy',value:'私人影院'},\n\t                        {key:'m_fyt',value:'放映厅'}\n\t                    ],\n\t                    '购物':[\n\t                        {key:'s_vz',value:'女装'},\n\t                        {key:'s_nz',value:'男装'},\n\t                        {key:'s_tz',value:'童装'},\n\t                        {key:'s_wj',value:'玩具'},\n\t                        {key:'s_xb',value:'鞋包'},\n\t                        {key:'s_csyp',value:'床上用品'}\n\t                    ]\n\t                },\n\t                panel3: [\n\t                    {key:'sjgy',value:'世纪公园'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'},\n\t                    {key:'zb',value:'闸北'},\n\t                    {key:'ja',value:'静安'},\n\t                    {key:'yp',value:'杨浦'},\n\t                    {key:'sjgy1',value:'世纪公园1'},\n\t                    {key:'ljz1',value:'陆家嘴1'},\n\t                    {key:'bbb1',value:'八佰伴1'},\n\t                    {key:'pdxq1',value:'浦东新区1'},\n\t                    {key:'zb1',value:'闸北1'},\n\t                    {key:'ja1',value:'静安1'},\n\t                    {key:'yp1',value:'杨浦1'}\n\t                ]\n\t            })\n\t        },0)\n\t    }\n\t\n\t    renderPanelList(){\n\t        let newPanel = []\n\t\n\t        for(let i in this.state.panel2){\n\t            let itemGroup = this.state.panel2[i]\n\t            newPanel.push(\n\t                <ItemGroup key={i} label={i}>\n\t                    {\n\t                        itemGroup.map((item)=>{\n\t                            return (\n\t                                <Item key={item.key} itemKey={item.key}>\n\t                                    {item.value}\n\t                                </Item>\n\t                            )\n\t                        })\n\t                    }\n\t                </ItemGroup>\n\t            )\n\t        }\n\t\n\t        return newPanel\n\t    }\n\t\n\t    clickCallback(key){\n\t        console.log(key);\n\t    }\n\t\n\t    resetFilter(key){\n\t        this.setState({\n\t            selected2: null\n\t        })\n\t    }\n\t\n\t    confirmFilter(key){\n\t        console.log(key);\n\t    }\n\t\n\t    test(){\n\t        console.log(this.state.selected2)\n\t        return ''\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t            {text:'重置', phStyle:'gray', onHandle: this.resetFilter.bind(this), otherProps: {hollow:true}},\n\t            {onHandle: this.confirmFilter.bind(this)},\n\t        ]\n\t\n\t        return (\n\t            <div>\n\t                <h2 className=\"comp-title\">PhFilter</h2>\n\t                <Container index={-1} hidecat={false} clickCallback={this.clickCallback.bind(this)}>\n\t                    <PanelSimple default='筛选'>\n\t                        {\n\t                            this.state.panel3.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                    <Panel default='筛选' selected={this.state.selected2} buttons={buttons} index={-1}>\n\t                        {this.renderPanelList()}\n\t                    </Panel>\n\t                    <PanelSimple readOnly className='panel1' selected={{key:'ljz',value:'陆家嘴'}}>\n\t                        {\n\t                            this.state.panel1.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                </Container>\n\t\n\t                <h3 className=\"comp-type\"><strong>FilterContainer</strong></h3>\n\t                <h3 className=\"comp-type\">index(默认-1) 初始打开的面板</h3>\n\t                <h3 className=\"comp-type\">hideCat 是否隐藏头部</h3>\n\t                <h3 className=\"comp-type\">clickCallback 项目选择的回调</h3>\n\t                <Code target=\"filter-container\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>PanelSimple</strong></h3>\n\t                <h3 className=\"comp-type\">default 没有选中项时的默认显示文字</h3>\n\t                <h3 className=\"comp-type\">selected 选中的项目</h3>\n\t                <h3 className=\"comp-type\">readOnly 不可选的状态</h3>\n\t                <h3 className=\"comp-type\">buttons 传入的按钮数组</h3>\n\t                <Code target=\"filter-panelsimple\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Panel</strong></h3>\n\t                <h3 className=\"comp-type\">index 主菜单选中项索引值</h3>\n\t                <h3 className=\"comp-type\">其他属性同PanelSimple</h3>\n\t                <Code target=\"filter-panel\"/>\n\t\n\t                <h3 className=\"comp-type\"><strong>ItemGroup(配合Panel使用)</strong></h3>\n\t                <h3 className=\"comp-type\">label 显示的文字</h3>\n\t                <Code target=\"filter-itemgroup\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Item</strong></h3>\n\t                <h3 className=\"comp-type\">itemKey(必须) 唯一标识</h3>\n\t                <Code target=\"filter-item\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/ph-filter"
            ],
            "isApp": true,
            "show": true
        },
        "FilterPanelSimple": {
            "name": "FilterPanelSimple",
            "shortname": "FilterPanelSimple",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "筛选控件",
            "namespace": "",
            "file": "src/ph-filter/components/FilterPanelSimple.js",
            "line": 5,
            "description": "简单面板<br/>\n- 可通过selected设置选中的项目，格式如`{key:'ljz',value:'陆家嘴'}`。\n- 可通过default设置没有选项时的默认显示文字。\n- 可通过readOnly设置当前面板是否为只读模式。\n- 可通过buttons设置底部按钮组的样式、文字、回调等，格式如`[{text:'取消', phStyle:'info', onHandle:this.cancelChoose.bind(this), otherProps: {hollow:true}}]`。\n\n主要属性和接口：\n- selected: 默认打开的面板。\n- default: 是否显示筛选头部。\n- readOnly: 有效选择的回调。\n- buttons: 有效选择的回调。\n\n如：\n```code\n this.state = {\n     panel1:[\n         {key:'sndq',value:'上南地区'},\n         {key:'ljz',value:'陆家嘴'},\n         {key:'bbb',value:'八佰伴'},\n         {key:'pdxq',value:'浦东新区'}\n     ]\n }\n...\n const buttons = [\n     {onHandle: this.onSubmit.bind(this)}\n ]\n...\n <FilterContainer>\n     <PanelSimple readOnly selected={{key:'ljz',value:'陆家嘴'}} buttons={buttons}>\n         {\n             this.state.panel1.map(function(item){\n                 return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n             })\n         }\n     </PanelSimple>\n </FilterContainer>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport PhFilter from \"phoenix-ui/lib/ph-filter\"\n\timport Code from \"./code/code\"\n\t\n\tconst Container = PhFilter.Container,\n\t      PanelSimple = PhFilter.PanelSimple,\n\t      Panel = PhFilter.Panel,\n\t      Item = PhFilter.Item,\n\t      ItemGroup = PhFilter.ItemGroup\n\t\n\texport default class phFilter extends Component {\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t        this.state={\n\t            panel1:[],\n\t            panel2:{},\n\t            selected2: {key:'m_sryy',value:'私人影院'},\n\t            panel3:[],\n\t        }\n\t    }\n\t\n\t    componentDidMount(){\n\t        var self=this;\n\t\n\t        setTimeout(function(){\n\t            self.setState({\n\t                panel1:[\n\t                    {key:'sndq',value:'上南地区'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'}\n\t                ],\n\t                panel2:{\n\t                    '美食':[\n\t                        {key:'f_bbc',value:'本帮江浙菜'},\n\t                        {key:'f_rhll',value:'日韩料理'},\n\t                        {key:'f_hg',value:'火锅'},\n\t                        {key:'f_zzc',value:'自助餐'},\n\t                        {key:'f_xyxc',value:'宵夜小吃'}\n\t                    ],\n\t                    '电影':[\n\t                        {key:'m_sryy',value:'私人影院'},\n\t                        {key:'m_fyt',value:'放映厅'}\n\t                    ],\n\t                    '购物':[\n\t                        {key:'s_vz',value:'女装'},\n\t                        {key:'s_nz',value:'男装'},\n\t                        {key:'s_tz',value:'童装'},\n\t                        {key:'s_wj',value:'玩具'},\n\t                        {key:'s_xb',value:'鞋包'},\n\t                        {key:'s_csyp',value:'床上用品'}\n\t                    ]\n\t                },\n\t                panel3: [\n\t                    {key:'sjgy',value:'世纪公园'},\n\t                    {key:'ljz',value:'陆家嘴'},\n\t                    {key:'bbb',value:'八佰伴'},\n\t                    {key:'pdxq',value:'浦东新区'},\n\t                    {key:'zb',value:'闸北'},\n\t                    {key:'ja',value:'静安'},\n\t                    {key:'yp',value:'杨浦'},\n\t                    {key:'sjgy1',value:'世纪公园1'},\n\t                    {key:'ljz1',value:'陆家嘴1'},\n\t                    {key:'bbb1',value:'八佰伴1'},\n\t                    {key:'pdxq1',value:'浦东新区1'},\n\t                    {key:'zb1',value:'闸北1'},\n\t                    {key:'ja1',value:'静安1'},\n\t                    {key:'yp1',value:'杨浦1'}\n\t                ]\n\t            })\n\t        },0)\n\t    }\n\t\n\t    renderPanelList(){\n\t        let newPanel = []\n\t\n\t        for(let i in this.state.panel2){\n\t            let itemGroup = this.state.panel2[i]\n\t            newPanel.push(\n\t                <ItemGroup key={i} label={i}>\n\t                    {\n\t                        itemGroup.map((item)=>{\n\t                            return (\n\t                                <Item key={item.key} itemKey={item.key}>\n\t                                    {item.value}\n\t                                </Item>\n\t                            )\n\t                        })\n\t                    }\n\t                </ItemGroup>\n\t            )\n\t        }\n\t\n\t        return newPanel\n\t    }\n\t\n\t    clickCallback(key){\n\t        console.log(key);\n\t    }\n\t\n\t    resetFilter(key){\n\t        this.setState({\n\t            selected2: null\n\t        })\n\t    }\n\t\n\t    confirmFilter(key){\n\t        console.log(key);\n\t    }\n\t\n\t    test(){\n\t        console.log(this.state.selected2)\n\t        return ''\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t            {text:'重置', phStyle:'gray', onHandle: this.resetFilter.bind(this), otherProps: {hollow:true}},\n\t            {onHandle: this.confirmFilter.bind(this)},\n\t        ]\n\t\n\t        return (\n\t            <div>\n\t                <h2 className=\"comp-title\">PhFilter</h2>\n\t                <Container index={-1} hidecat={false} clickCallback={this.clickCallback.bind(this)}>\n\t                    <PanelSimple default='筛选'>\n\t                        {\n\t                            this.state.panel3.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                    <Panel default='筛选' selected={this.state.selected2} buttons={buttons} index={-1}>\n\t                        {this.renderPanelList()}\n\t                    </Panel>\n\t                    <PanelSimple readOnly className='panel1' selected={{key:'ljz',value:'陆家嘴'}}>\n\t                        {\n\t                            this.state.panel1.map(function(item){\n\t                                return <Item key={item.key} itemKey={item.key}>{item.value}</Item>\n\t                            })\n\t                        }\n\t                    </PanelSimple>\n\t                </Container>\n\t\n\t                <h3 className=\"comp-type\"><strong>FilterContainer</strong></h3>\n\t                <h3 className=\"comp-type\">index(默认-1) 初始打开的面板</h3>\n\t                <h3 className=\"comp-type\">hideCat 是否隐藏头部</h3>\n\t                <h3 className=\"comp-type\">clickCallback 项目选择的回调</h3>\n\t                <Code target=\"filter-container\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>PanelSimple</strong></h3>\n\t                <h3 className=\"comp-type\">default 没有选中项时的默认显示文字</h3>\n\t                <h3 className=\"comp-type\">selected 选中的项目</h3>\n\t                <h3 className=\"comp-type\">readOnly 不可选的状态</h3>\n\t                <h3 className=\"comp-type\">buttons 传入的按钮数组</h3>\n\t                <Code target=\"filter-panelsimple\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Panel</strong></h3>\n\t                <h3 className=\"comp-type\">index 主菜单选中项索引值</h3>\n\t                <h3 className=\"comp-type\">其他属性同PanelSimple</h3>\n\t                <Code target=\"filter-panel\"/>\n\t\n\t                <h3 className=\"comp-type\"><strong>ItemGroup(配合Panel使用)</strong></h3>\n\t                <h3 className=\"comp-type\">label 显示的文字</h3>\n\t                <Code target=\"filter-itemgroup\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Item</strong></h3>\n\t                <h3 className=\"comp-type\">itemKey(必须) 唯一标识</h3>\n\t                <Code target=\"filter-item\" />\n\t            </div>\n\t        )\n\t    }\n\t}\n\t\n\t\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/ph-filter"
            ],
            "isApp": true,
            "show": true
        },
        "Popover": {
            "name": "Popover",
            "shortname": "Popover",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "提示组件",
            "namespace": "",
            "file": "src/popover/index.js",
            "line": 12,
            "description": "气泡组件<br/>\n- 通过getTarget返回当前点击元素，必需。\n- 可通过placement设置气泡的显示位置, 可选top、bottom、left、right。\n- 当设置的位置不足够放置气泡，以下顺序顺延(top->bottom->left->right, bottom->top->left->right, left->right->top->bottom, right->left->top->bottom)。\n- 可通过distance设置气泡到点击对象的位置。\n- 可通过clickCallback定义气泡显隐时额外的回调函数。\n\n示例:\n```code\n <Button phSize='lg' ref={(button)=>{this.button = button}}>按钮</Button>\n <Popover getTarget={()=>{return this.button}} placement='top'>\n     <div className='ph-popover-text'>\n         一条很长的很长的气泡提示语，为了占位存在的气泡提示语。一条很长的很长的气泡提示语，为了占位存在的气泡提示语。\n     </div>\n </Popover>\n```\n```code\n <Button phSize='lg' ref={(button)=>{this.button1 = button}}>按钮</Button>\n <Popover getTarget={()=>{return this.button1}} placement='right'>\n     <ul className='ph-popover-list'>\n         <li className='ph-popover-item'>未上线单店</li>\n         <li className='ph-popover-item'>未上线连锁店</li>\n     </ul>\n </Popover>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Popover from \"phoenix-ui/lib/popover\"\n\timport Code from \"./code/code\"\n\t\n\texport default class popover extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Popover</h2>\n\t                <h3 className=\"comp-type\">getTarget(必需) 返回当前点击元素</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" ref={(button)=>{this.button = button}}>纯文字气泡</Button>\n\t                    <Popover getTarget={()=>{return this.button}}>\n\t                        <div className=\"ph-popover-text\">\n\t                            一条很长的很长的气泡提示语，为了占位存在的气泡提示语。一条很长的很长的气泡提示语，为了占位存在的气泡提示语。一条很长的很长的气泡提示语，为了占位存在的气泡提示语。一条很长的很长的气泡提示语，为了占位存在的气泡提示语。\n\t                        </div>\n\t                    </Popover>\n\t                    <Button phSize=\"lg\" ref={(button)=>{this.button1 = button}}>列表气泡</Button>\n\t                    <Popover getTarget={()=>{return this.button1}} placement=\"right\">\n\t                        <ul className=\"ph-popover-list\">\n\t                            <li className=\"ph-popover-item\">未上线单店</li>\n\t                            <li className=\"ph-popover-item\">未上线连锁店</li>\n\t                        </ul>\n\t                    </Popover>\n\t                </div>\n\t                <Code target=\"popover-gettarget\" />\n\t\n\t                <h3 className=\"comp-type\">placement(默认bottom) 气泡位置 <br/> 可选top、bottom、left、right</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" ref={(button)=>{this.button2 = button}}>按钮</Button>\n\t                    <Popover getTarget={()=>{return this.button2}} placement=\"top\">\n\t                        <div className=\"ph-popover-text\">\n\t                            为了占位存在的气泡提示语\n\t                        </div>\n\t                    </Popover>\n\t                </div>\n\t                <Code target=\"popover-placement\" />\n\t\n\t                <h3 className=\"comp-type\">distance(默认5) 气泡和点击元素的距离</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" ref={(button)=>{this.button3 = button}}>按钮</Button>\n\t                    <Popover getTarget={()=>{return this.button3}} distance={20}>\n\t                        <div className=\"ph-popover-text\">\n\t                            为了占位存在的气泡提示语\n\t                        </div>\n\t                    </Popover>\n\t                </div>\n\t                <Code target=\"popover-distance\" />  \n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击的回调函数</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" ref={(button)=>{this.button4 = button}}>按钮</Button>\n\t                    <Popover getTarget={()=>{return this.button4}} clickCallback={(bool)=>{alert(bool)}}>\n\t                        <div className=\"ph-popover-text\">\n\t                            为了占位存在的气泡提示语\n\t                        </div>\n\t                    </Popover>\n\t                </div>\n\t                <Code target=\"popover-clickcallback\" />  \n\t\n\t                <h3 className=\"comp-type\">顺延的情况 placement为bottom</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" ref={(button)=>{this.button5 = button}}>bottom顺延到top</Button>\n\t                    <Popover getTarget={()=>{return this.button5}}>\n\t                        <div className=\"ph-popover-text\">\n\t                            为了占位存在的气泡提示语<br/>\n\t                            为了占位存在的气泡提示语<br/>\n\t                            为了占位存在的气泡提示语<br/>\n\t                            为了占位存在的气泡提示语\n\t                        </div>\n\t                    </Popover>\n\t                </div>             \n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/popover"
            ],
            "isApp": true,
            "show": true
        },
        "Popup": {
            "name": "Popup",
            "shortname": "Popup",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/popup/index.js",
            "line": 9,
            "description": "弹层组件<br/>\n- 由于弹层的显示操作在组件以外, 所以需要在使用时自定义visible、onShow、closeCallback函数。\n- 通过align设置碳层弹出的位置, 可选top/bottom。\n- 可通过closeCallback配置点击弹层阴影部分来关闭弹层。\n\n主要属性和接口：\n- visible:弹层是否显示标识, 默认false不可见\n- closeCallback:关闭弹层的功能函数\n- align:弹层的位置, 默认top\n\n示例:\n```code\n    <Popup align='top' visible={this.state.visible} closeCallback={::this.closeCallback}>\n        <ul className='ph-popup-list'>\n            <li className='ph-popup-item'>未上线单店</li>\n            <li className='ph-popup-item'>未上线连锁店</li>\n        </ul>\n    </Popup>\n```\n```code\n    onShow(){\n        this.setState({\n            visible: true\n        });\n    }\n    closeCallback(){\n        this.setState({\n            visible: false\n        });\n    }\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.4.0",
            "example": [
                "\timport React, { Component } from 'react'\n\t\n\timport Button from 'phoenix-ui/lib/button'\n\timport Popup from 'phoenix-ui/lib/popup'\n\timport List from 'phoenix-ui/lib/list'\n\timport Code from \"./code/code\"\n\t\n\texport default class popup extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            topVisible: false,\n\t            bottomVisible: false\n\t        }\n\t    }\n\t\n\t    onShowTopPopup(){\n\t        this.setState({\n\t          topVisible: true\n\t        });\n\t    }\n\t\n\t    hideTopPopup(){\n\t        this.setState({\n\t          topVisible: false\n\t        });\n\t    }\n\t\n\t    onShowBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: true\n\t        });\n\t    }\n\t\n\t    hideBottomPopup(){\n\t        this.setState({\n\t          bottomVisible: false\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Popup</h2>\n\t                <h3 className=\"comp-type\">visible(默认false) 弹层是否可见，必需<br/>closeCallback 关闭弹层的执行函数<br/>align(默认top) 弹层弹出位置</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={this.onShowTopPopup.bind(this)}>Top</Button>\n\t                </div>\n\t                <Popup visible={this.state.topVisible} closeCallback={this.hideTopPopup.bind(this)}>\n\t                    <List>\n\t                        <List.Item className=\"clickable\" active>\n\t                            <List.Col>未上线单店</List.Col>\n\t                        </List.Item>\n\t                        <List.Item className=\"clickable\">\n\t                            <List.Col>未上线连锁店</List.Col>\n\t                        </List.Item>\n\t                        <List.Item className=\"clickable\">\n\t                            <List.Col>在线单店</List.Col>\n\t                        </List.Item>\n\t                        <List.Item className=\"clickable\">\n\t                            <List.Col>在线连锁店</List.Col>\n\t                        </List.Item>\n\t                    </List>\n\t                </Popup>\n\t                <Code target=\"popup-top\" />\n\t\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={this.onShowBottomPopup.bind(this)}>Bottom</Button>\n\t                </div>\n\t                <Popup align=\"bottom\" visible={this.state.bottomVisible} closeCallback={this.hideBottomPopup.bind(this)}>\n\t                    <div className=\"ph-action-sheet\">\n\t                        <ul>\n\t                            <li className=\"ph-popup-item ph-popup-tip\">确认 删除此作品？</li>\n\t                            <li className=\"ph-popup-item ph-popup-delete\" onClick={this.hideBottomPopup.bind(this)}>删除作品</li>\n\t                        </ul>\n\t                        <div className=\"ph-popup-operate\" onClick={this.hideBottomPopup.bind(this)}>取消</div>\n\t                    </div>\n\t                </Popup>\n\t                <Code target=\"popup-bottom\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/popup"
            ],
            "isApp": true,
            "show": true
        },
        "PullUp": {
            "name": "PullUp",
            "shortname": "PullUp",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/pullup/index.js",
            "line": 13,
            "description": "加载更多组件<br/>\n- 书写时PullUp组件在可加载列表的后面。\n- 通过mode设置加载更多的模式，有点击按钮加载更多，以及滑到最底端自动加载，可选 [auto,button] 2种参数。\n- 通过status设置当前状态，只需要在请求结束返回相应状态，包含请求成功返回2，请求成功并再没有数据返回4，请求失败返回3。\n- 可通过tips设置按钮文字和状态提示语，默认['加载更多','','加载成功','加载失败','没有更多']，分别对应status的状态。\n- 可通过phStyle设置按钮的样式，如果当前mode为auto设置无效。\n- 可通过loadCallback设置点击按钮加载或滑到底部自动加载的回调函数，如果状态为4不执行。\n\n主要属性和接口：\n- mode:加载更多的模式，默认auto。\n- status:当前状态:0加载更多, 1加载中, 2数据加载成功, 3数据加载失败, 4没有更多。\n- tips:按钮文字和状态提示语，默认['加载更多','','加载成功','加载失败','没有更多']。\n- phStyle:按钮的样式，默认'primary'。\n- loadCallback:点击按钮加载或滑到底部自动加载的回调函数。\n\n示例：\n```code\n // 可加载列表的位置\n <PullUp mode='button' status={this.state.status} \n     tips={['点击加载更多','加载中...','加载成功！','加载失败！','没有更多']} \n     phStyle='primary' \n     loadCallback={this.loadCallback.bind(this)} />\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport PullUp from \"phoenix-ui/lib/pullup\"\n\timport List from \"phoenix-ui/lib/list\"\n\t\n\timport Code from \"./code/code\"\n\timport {ajax} from \"./utils/tool.js\"\n\t\n\texport default class pullup extends Component{\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.count = 0;\n\t\n\t        this.state = {\n\t            loadingData : [],\n\t            status: 1, // 状态：0\"加载更多\",1\"加载中\",2\"加载成功\",3\"加载失败\",4\"没有更多\"\n\t            visible1: false,\n\t        }\n\t\n\t        this.loadCallback();\n\t    }\n\t\n\t    // 加载更多的执行回调(点击按钮刷新或滑倒屏幕最下方自动刷新)\n\t    loadCallback(){\n\t        this.getData(\"./data/post\"+(this.count?this.count:'')+\".json\") // 开始请求数据\n\t        this.count++\n\t    }\n\t\n\t    getData(fileName){ // 获取数据方法，ajax方法在下面定义了\n\t        ajax(fileName).then((json)=>{\n\t            // 数据处理\n\t            let data = json.data;\n\t            let loadingData = this.state.loadingData.slice(0);\n\t            for(let i in data){\n\t                loadingData.push(data[i]);\n\t            }\n\t\n\t            this.setState({\n\t                loadingData: loadingData,\n\t                status: json.final? 4:2 // 根据final判断是加载成功还是没有更多\n\t            }); \n\t\n\t        }, (error)=>{\n\t            // 加载失败\n\t            this.setState({\n\t                status: 3\n\t            })\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">PullUp</h2>\n\t                <h3 className=\"comp-type\">mode(默认auto) 加载的模式(自动加载或按钮)</h3>\n\t                <h3 className=\"comp-type\">status 当前状态(0加载更多, 1加载中, 2数据加载成功, 3数据加载失败, 4没有更多)</h3>\n\t                <h3 className=\"comp-type\">tips 设置按钮文字和状态提示语</h3>\n\t                <h3 className=\"comp-type\">phStyle(默认primary) 按钮的样式</h3>\n\t                <h3 className=\"comp-type\">loadCallback 加载更多的回调函数</h3>\n\t                <div>\n\t                    <List>\n\t                        <List.Header>加载更多</List.Header>\n\t                        {\n\t                            this.state.loadingData.map((item,index)=>{\n\t                                return (\n\t                                    <List.Item key={index}>\n\t                                        <List.Col>{item.title}</List.Col>\n\t                                    </List.Item>\n\t                                )\n\t                            })\n\t                        }\n\t                    </List>\n\t                    <PullUp status={this.state.status} loadCallback={this.loadCallback.bind(this)} />\n\t                </div>            \t\n\t            </div>\n\t        );\n\t    }\n\t}\n\t"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/pullup"
            ],
            "isApp": true,
            "show": true
        },
        "Radio": {
            "name": "Radio",
            "shortname": "Radio",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/radio/index.js",
            "line": 8,
            "description": "单选框组件<br/>\n- 使用方式跟原生一致, 支持disabled等原生属性。\n- 可通过label设置展示的文字。\n- 可通过defaultChecked设置默认值; 可通过checked和onChange事件配合使用手动设置输入值。\n\n主要属性和接口：\n- label:展示的文字信息, 默认空<br/>\n如：`<Radio label='测试' name='test'/>`\n- defaultChecked:默认值<br/>\n如：`<Radio defaultChecked={true} />`\n- checked&onChange:<br/>\n如：`<Radio checked={this.state.checked} onChange={()=>{this.setState({checked:false})}} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Radio from \"phoenix-ui/lib/radio\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\"\n\t\n\texport default class input extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            radioChecked: true\n\t        };\n\t    }\n\t\n\t    onRadioChange(){\n\t        this.setState({\n\t            radioChecked: !this.state.radioChecked\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Radio</h2>\n\t                <h3 className=\"comp-type\">defaultChecked 初始传值</h3>\n\t                <div className=\"content\">\n\t                    <Radio label=\"男\" name=\"sex2\" defaultChecked={true}/>\n\t                    <Radio label=\"女\" name=\"sex2\"/>\n\t                </div>\n\t                <Code target=\"radio-default\" />\n\t\n\t                <h3 className=\"comp-type\">checked和onChange配合使用</h3>\n\t                <div className=\"content\">\n\t                    <Radio label=\"男\" name=\"sex3\" checked={this.state.radioChecked} onChange={::this.onRadioChange}/>\n\t                    <Radio label=\"女\" name=\"sex3\" checked={!this.state.radioChecked} onChange={::this.onRadioChange}/>\n\t                </div>\n\t                <Code target=\"radio-onchange\" />\n\t\n\t                <h3 className=\"comp-type\">disabled</h3>\n\t                <div className=\"content\">\n\t                    <Radio label=\"男\" name=\"sex4\" disabled />\n\t                    <Radio label=\"女\" name=\"sex4\" disabled />\n\t                </div>\n\t                <Code target=\"radio-disabled\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/radio"
            ],
            "isApp": true,
            "show": true
        },
        "SearchBar": {
            "name": "SearchBar",
            "shortname": "SearchBar",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "搜索组件",
            "namespace": "",
            "file": "src/search-bar/index.js",
            "line": 11,
            "description": "SearchBar<br/>\n- 可通过buttonText设置按钮的文字。\n- 可通过clickCallback设置点击按钮的回调。\n- 可通过queryCallback设置回车/搜索动作的回调函数。\n- 可通过focusCallback设置聚焦的回调；可通过blurCallback设置失焦的回调。\n\n主要属性和接口：\n- buttonText: 按钮文字 <br/>\n如：`<SearchBar buttonText=\"no\" />`\n- clickCallback: 点击按钮的回调 <br/>\n如：`<SearchBar clickCallback={(value)=>{console.log(value)}} />`\n- queryCallback: 回车/搜索动作的回调函数 <br/>\n如：`<SearchBar queryCallback={(value)=>{console.log(value)}} />`\n- focusCallback: 聚焦的回调 <br/>\n如：`<SearchBar focusCallback={()=>{console.log(\"focus\")}} />`\n- blurCallback: 失焦的回调 <br/>\n如：`<SearchBar blurCallback={()=>{console.log(\"blur\")}} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "2.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport SearchBar from \"phoenix-ui/lib/search-bar\"\n\timport Code from \"./code/code\"\n\t\n\texport default class searchBar extends Component{\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">SearchBar</h2>\n\t                <h3 className=\"comp-type\">buttonText 按钮文字</h3>\n\t                <SearchBar buttonText=\"no\" />\n\t                <Code target=\"search-buttontext\" />\n\t\n\t                <h3 className=\"comp-type\">placeholder 输入框占位符</h3>\n\t                <SearchBar placeholder=\"请输入...\" />\n\t                <Code target=\"search-placeholder\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback 点击按钮的回调</h3>\n\t                <SearchBar clickCallback={(query)=>{alert(query)}} />\n\t                <Code target=\"search-clickcallback\" />\n\t\n\t                <h3 className=\"comp-type\">queryCallback 搜索的回调(键盘的回车/搜索)</h3>\n\t                <SearchBar queryCallback={(query)=>{alert(query)}} />\n\t                <Code target=\"search-querycallback\" />\n\t\n\t                <h3 className=\"comp-type\">focusCallback 聚焦的回调</h3>\n\t                <SearchBar focusCallback={()=>{console.log(\"focus\")}} />\n\t                <Code target=\"search-focuscallback\" />\n\t\n\t                <h3 className=\"comp-type\">blurCallback 失焦的回调</h3>\n\t                <SearchBar blurCallback={()=>{console.log(\"blur\")}} />\n\t                <Code target=\"search-blurcallback\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/search-bar"
            ],
            "isApp": true,
            "show": true
        },
        "Slider": {
            "name": "Slider",
            "shortname": "Slider",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/slider/index.js",
            "line": 10,
            "description": "滑动输入条组件<br/>\n- 滑动进度条确定当前进度的百分比。\n- 可通过设置process确定初始进度百分比, 范围从0-100。\n- 可通过tipMode选择当前查看进度的方式，可选default和tooltip。\n- 可通过placement设置当前进度提示框的位置, 可选top/bottoom(tipMode为tooltip时生效)。\n- 可通过tipStay设置初始和松开按钮时提示是否消失，默认false不显示(tipMode为tooltip时生效)。\n- 可通过range制定范围，默认0-100，必需是长度为2的数组，第一个数字表示初始，第二个数字表示终点。\n- 可通过showRange判断是否在进度条前后显示范围，默认不显示。\n- 可通过duration设置固定移动的距离，默认1。\n- 可通过slideCallback设置拖拽进度条松开时的回调函数。\n- 可通过disabled设置进度条只读。\n- 使用Slider前确保父级是有宽度的元素；使用flex需要加一层宽度100%的外壳。\n\n主要属性和接口：\n- process:初始进度百分比, 默认0 <br/>\n如: `<Slider progress={10}/>`\n- placement:进度提示框的位置, 默认top <br/>\n如: `<Slider placement='bottom' />`\n- tipStay:初始和松开按钮时提示是否消失，默认false <br/>\n如: `<Slider tipStay />`\n- range:范围，默认[0,100]。 <br/>\n如: `<Slider range={[20,50]} />`\n- showRange:是否在进度条前后显示范围，默认不显示。 <br/>\n如: `<Slider showRange />`\n- duration:固定移动的距离，默认1。 <br/>\n如: `<Slider duration={20} />`\n- slideCallback:拖拽进度条松开时的回调函数 <br/>\n如: `<Slider slideCallback={(progress)=>{console.log(progress);} />`\n- disabled:进度条只读, 不可操作 <br/>\n如: `<Slider disabled/>`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.0.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Slider from \"phoenix-ui/lib/slider\"\n\timport Code from \"./code/code\"\n\t\n\texport default class slider extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t\n\t        this.state = {\n\t            progress: 50,\n\t            progress1: 20\n\t        }\n\t    }\n\t\n\t    slideCallback(newProgress){ // progress百分比\n\t        alert(newProgress)\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Slider</h2>\n\t                <h3 className=\"comp-type\">progress(默认0) 初始进度百分比</h3>\n\t                <Slider progress={25} />\n\t                <Code target=\"slider-progress\" />\n\t\n\t                <h3 className=\"comp-type\">tipMode(默认default) 提示显示的方式</h3>\n\t                <Slider tipMode=\"tooltip\" />\n\t                <Code target=\"slider-tipstay\" />\n\t\n\t                <h3 className=\"comp-type\">placement(默认top) tooltip的位置</h3>\n\t                <Slider tipMode=\"tooltip\"/>\n\t                <Slider tipMode=\"tooltip\" placement=\"bottom\" />\n\t                <Code target=\"slider-placement\" />\n\t\n\t                <h3 className=\"comp-type\">tipStay(默认false) 松开进度条时是否要隐藏tooltip</h3>\n\t                <Slider tipMode=\"tooltip\" tipStay />\n\t                <Code target=\"slider-tipstay\" />\n\t\n\t                <h3 className=\"comp-type\">range(默认[0,100]) 范围</h3>\n\t                <Slider range={[50,200]} showRange />\n\t                <Code target=\"slider-range\" />\n\t\n\t                <h3 className=\"comp-type\">showRange(默认false) 范围</h3>\n\t                <Slider range={[25,65]} showRange />\n\t                <Code target=\"slider-showrange\" />\n\t\n\t                <h3 className=\"comp-type\">duration(默认1) 每次滑动的距离</h3>\n\t                <Slider duration={20} />\n\t                <Code target=\"slider-duration\" />\n\t\n\t                <h3 className=\"comp-type\">slideCallback 拖拽进度条松开时的回调函数</h3>\n\t                <Slider progress={this.state.progress} slideCallback={(newProgress)=>{this.slideCallback(newProgress);}} />\n\t                <Code target=\"slider-slidecallback\" />\n\t\n\t                <h3 className=\"comp-type\">disabled 进度条只读</h3>\n\t                <Slider disabled progress={10} />\n\t                <Code target=\"slider-disabled\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/slider"
            ],
            "isApp": true,
            "show": true
        },
        "Star": {
            "name": "Star",
            "shortname": "Star",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "基础组件",
            "namespace": "",
            "file": "src/star/index.js",
            "line": 18,
            "description": "星级评价组件<br />\n- 通过rate设置星级评价的分数, 最低0, 最高50, 5的倍数。\n- 通过phSize设置大小, 可选sm、md、lg。\n\n主要属性和接口：\n- phSize(v1.1.2以下用size):星星的大小。分别为sm、md、lg, 默认sm。 <br/>\n如：`<Star phSize='lg' />`\n- rate:星级评价的分数。最低0, 最高50, 5的倍数递增, 默认0。 <br/>\n如：`<Star rate={10} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Star from \"phoenix-ui/lib/star\"\n\timport Code from \"./code/code\"\n\t\n\texport default class star extends Component{\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Star</h2>\n\t                <h3 className=\"comp-type\">rate(默认0) 星级评价的分数</h3>\n\t                <div className=\"content\">\n\t                    <Star />\n\t                    <Star rate={5} />\n\t                    <Star rate={15} />\n\t                    <Star rate={20} />\n\t                    <Star rate={25} />\n\t                    <Star rate={30} />\n\t                    <Star rate={35} />\n\t                </div>\n\t                <Code target=\"star-rate\" />\n\t\n\t                <h3 className=\"comp-type\">phSize(默认sm) 星星大小</h3>\n\t                <div className=\"content\">\n\t                    <Star rate={40} phSize=\"sm\" />\n\t                    <Star rate={45} phSize=\"md\" />\n\t                    <Star rate={50} phSize=\"lg\" />\n\t                </div>\n\t                <Code target=\"star-phsize\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/star"
            ],
            "isApp": true,
            "show": true
        },
        "Steps": {
            "name": "Steps",
            "shortname": "Steps",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/steps/index.js",
            "line": 8,
            "description": "步骤组件<br/>\n- 通过list设置步骤过程名称数组，如['合作信息','公司信息','资质信息']，必需。\n- 可通过index设置当前步骤，从0开始计算。\n- 可通过clickCallback设置点击步骤的回调，函数返回步骤名称和索引。\n- 可通过readOnly设置步骤是否只读不可点击，默认可点击。\n\n主要属性和接口：\n- list:初始进度百分比, 默认0。 <br/>\n如: `<Steps list={['合作信息','公司信息','资质信息']} />`\n- index:当前步骤，从0开始计算，默认0。 <br/>\n如: `<Steps index={1} list={['合作信息','公司信息','资质信息']} />`\n- clickCallback:点击步骤的回调，函数返回步骤名称和索引。 <br/>\n如: `<Steps clickCallback={(str,index)=>{console.log(index);}} list={['合作信息','公司信息','资质信息']}/>`\n- readOnly:只读不可点击，默认false。<br/>\n如: `<Steps readOnly list={['合作信息','公司信息','资质信息']} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "1.7.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Steps from \"phoenix-ui/lib/steps\"\n\timport Code from \"./code/code\"\n\t\n\texport default class steps extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            index: 2,\n\t            list1: [\"合作信息\",\"公司信息\",\"资质信息\",\"资质信息\"],\n\t            list2: [\"合作信息\",\"公司信息\",\"资质信息\",\"公司信息\",\"资质信息\",\"公司信息\"]\n\t        };\n\t    }\n\t\n\t    clickCallback(str, index){\n\t        alert(\"name: \"+str+\", index: \"+index);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t            \t<h2 className=\"comp-title\">Steps</h2>\n\t                <h3 className=\"comp-type\">list(默认[],必需) 步骤名称列表，根据顺序排列</h3>\n\t                <Steps list={[\"合作信息\",\"公司信息\",\"资质信息\"]} />\n\t                <Code target=\"steps-list\" />\n\t\n\t                <h3 className=\"comp-type\">index(默认0) 当前步骤(从0开始)</h3>\n\t                <Steps index={2} list={this.state.list1} />\n\t                <Code target=\"steps-index\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback(默认null) 选择步骤的回调函数</h3>\n\t                <Steps clickCallback={this.clickCallback.bind(this)} list={this.state.list1}/>\n\t                <Code target=\"steps-clickcallback\" />\n\t\n\t                <h3 className=\"comp-type\">readOnly(默认false) 是否只读，只读时不可点击选择步骤</h3>\n\t                <Steps readOnly list={this.state.list2} />\n\t                <Code target=\"steps-readonly\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/steps"
            ],
            "isApp": true,
            "show": true
        },
        "Swipe": {
            "name": "Swipe",
            "shortname": "Swipe",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/swipe/index.js",
            "line": 11,
            "description": "左滑组件<br/>\n- 向左滑动出现可操作按钮, 类似IOS列表操作的组件。\n- 通过buttons设置可操作按钮的文字text、样式phStyle以及点击按钮的回调函数onHandle。\n- buttons的phStyle默认'primary', 可选primary、info、error、warning、danger、link、gray、success。\n\n示例:\n```code\n    <Swipe buttons={[\n        {text: '删除', onHandle: this.onDelete, phStyle: 'error'},\n        {text: '取消', onHandle: this.onCancle, phStyle: 'info'}\n    ]}>\n        <div style={{padding: '1rem'}}>\n            // 内容\n        </div>\n    </Swipe>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.3.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Swipe from \"phoenix-ui/lib/swipe\"\n\timport List from \"phoenix-ui/lib/list\"\n\timport Code from \"./code/code\"\n\t\n\texport default class swipe extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context); \n\t    }\n\t\n\t    onDelete(){\n\t        console.log(\"delete!!\");\n\t    }\n\t\n\t    onCancle(){\n\t        console.log(\"cancle!!\");\n\t    }\n\t\n\t    render(){\n\t        const buttons = [\n\t            {text: \"删除\", onHandle: this.onDelete, phStyle: \"error\"},\n\t            {text: \"取消\", onHandle: this.onCancle, phStyle: \"info\"}\n\t        ]\n\t\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Swipe</h2>\n\t                <h3 className=\"comp-type\">buttons 左滑后出现的操作按钮</h3>\n\t                <List style={{backgroundColor:'transparent'}}>\n\t                    <Swipe style={{marginBottom:'16px'}} buttons={buttons}>\n\t                        <List.Item>\n\t                            <List.Col>\n\t                                滑动块1\n\t                            </List.Col>\n\t                        </List.Item>\n\t                    </Swipe>\n\t                    <Swipe buttons={buttons}>\n\t                        <List.Item>\n\t                            <List.Col>\n\t                                滑动块2\n\t                            </List.Col>\n\t                        </List.Item>\n\t                    </Swipe>\n\t                </List>\n\t                <Code target=\"swipe-buttons\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/swipe"
            ],
            "isApp": true,
            "show": true
        },
        "Switch": {
            "name": "Switch",
            "shortname": "Switch",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/switch/index.js",
            "line": 8,
            "description": "开关切换组件，仿真ios的开关控件<br/>\n- 可通过defaultChecked设置默认值。\n- 可通过checked和onChange事件配合使用手动设置输入值。\n\n主要属性和接口：\n- defaultChecked:默认值<br/>\n如：`<Switch defaultChecked={true} />`\n- checked&onChange:<br/>\n如：`<Switch checked={this.state.checked} onChange={()=>{this.setState({checked:false})}} />`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from 'react'\n\t\n\timport Switch from 'phoenix-ui/lib/switch'\n\timport Code from \"./code/code\"\n\t\n\texport default class switchs extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            checked: true\n\t        };\n\t    }\n\t\n\t    onChange(){\n\t        this.setState({\n\t            checked: !this.state.checked\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Switch</h2>\n\t                <h3 className=\"comp-type\">开关</h3>\n\t                <div className=\"content\">\n\t                    <h3 className=\"comp-tip\">默认</h3>\n\t                    <Switch />\n\t                    <h3 className=\"comp-tip\">defaultChecked 初始传值</h3>\n\t                    <Switch defaultChecked={true} />\n\t                    <h3 className=\"comp-tip\">checked和onChange配合使用</h3>\n\t                    <Switch checked={this.state.checked} onChange={this.onChange.bind(this)} />\n\t                    <h3 className=\"comp-tip\">disabled 不可选</h3>\n\t                    <Switch disabled />\n\t                </div>\n\t                <Code target=\"switch\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/switch"
            ],
            "isApp": true,
            "show": true
        },
        "Tab": {
            "name": "Tab",
            "shortname": "Tab",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "选项卡",
            "namespace": "",
            "file": "src/tab/Tab.js",
            "line": 5,
            "description": "tab选项卡组件<br/>\n- 通过heading设置选项卡的显示内容。\n- 可通过clickCallback设置点击选项卡的回调函数。\n- 可自定义className等常用属性以及事件。\n\n具体属性和接口如下：\n- heading:选项卡的显示内容, 默认'tab'\n- clickCallback:点击事件的回调函数\n\n示例:\n```code\n    <Tabset index={this.state.index} tabCallback={(index)=>{console.log(index);}>\n        <Tab heading='标题1' className='tab-test'>\n            横向内容1\n        </Tab>\n        <Tab heading='标题2' clickCallback={(index)=>{console.log(index);}>\n            横向内容2\n        </Tab>\n    </Tabset>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\t\n\timport Tabset from \"phoenix-ui/lib/tab/Tabset\"\n\timport Tab from \"phoenix-ui/lib/tab/Tab\"\n\timport List from \"phoenix-ui/lib/list\"\n\timport Code from \"./code/code\"\n\t\n\texport default class tab extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t\n\t    clickCallback(index){\n\t        alert(\"测试tabset回调\", \"index: \" + index);\n\t    }\n\t\n\t    clickCallback1(index){\n\t        alert(\"测试tab回调\", \"index: \" + index);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\"><strong>Tabset</strong></h3>\n\t                <h3 className=\"comp-type\">index(默认0) 默认选中选项卡的索引值</h3>\n\t                <Tabset index={1}>\n\t                    <Tab heading=\"标题1\">\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tabset-index\" />\n\t\n\t                <h3 className=\"comp-type\">vertical(默认false) 设置选项卡竖排</h3>\n\t                <Tabset vertical>\n\t                    <Tab heading=\"标题1\">\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容1</List.Col>\n\t                            </List.Item>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容1</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        竖向内容2\n\t                    </Tab>\n\t                    <Tab heading=\"标题3\">\n\t                        竖向内容3\n\t                    </Tab>\n\t                </Tabset>\n\t                <br/>\n\t                <Code target=\"tabset-vertical\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认33) 设置vertical之后标题的占比</h3>\n\t                <Tabset vertical width={20}>\n\t                    <Tab heading=\"标题1\">\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容1</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容2</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Tab>\n\t                </Tabset>\n\t                <br/>\n\t                <Code target=\"tabset-width\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback(Tabset) 点击选项卡的回调函数</h3>\n\t                <Tabset clickCallback={this.clickCallback.bind(this)}>\n\t                    <Tab heading=\"标题1\">\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tabset-clickcallback\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Tab</strong></h3>\n\t                <h3 className=\"comp-type\">heading 标题</h3>\n\t                <Tabset>\n\t                    <Tab heading=\"Tab heading 1\">\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"Tab heading 2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tab-heading\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback(Tab) 点击单个选项卡的回调函数</h3>\n\t                <Tabset>\n\t                    <Tab heading=\"标题1\" clickCallback={this.clickCallback1.bind(this)}>\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tab-clickcallback\" />\n\t           </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/tab"
            ],
            "isApp": true,
            "show": true
        },
        "Tabset": {
            "name": "Tabset",
            "shortname": "Tabset",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "选项卡",
            "namespace": "",
            "file": "src/tab/Tabset.js",
            "line": 19,
            "description": "tabset选项卡组件<br/>\n- 通过index指定默认的选中tab的索引值。\n- 选项卡默认横排, 可通过vertical设置为竖排。\n- 当设置为vertical后, 可通过width设置tab标题部分的宽度占比。\n- 可通过clickCallback设置点击选项卡的回调函数。\n- 可自定义className等常用属性以及事件。\n\n具体属性和接口如下：\n- index:默认选中的标签卡索引值，默认0第一个tab\n- vertical:是否竖排，如需要直接添加改属性即可，默认不竖排\n- width:选项卡头部的宽度，取值0-100之间, 只有设置vertical下生效, 默认20\n- clickCallback:点击选项卡执行的回调函数\n\n示例:\n- 横排\n```code\n    <Tabset index={this.state.index} clickCallback={(index)=>{console.log(index);}>\n        <Tab heading='标题1' className='tab-test'>\n            横向内容1\n        </Tab>\n        <Tab heading='标题2' clickCallback={(index)=>{console.log(index);}>\n            横向内容2\n        </Tab>\n    </Tabset>\n```\n- 竖排\n```code\n    <Tabset vertical width={30} index={this.state.index} clickCallback={(index)=>{console.log(index);}>\n        <Tab heading='标题1'>\n            竖向内容1\n        </Tab>\n        <Tab heading='标题2' clickCallback={(index)=>{console.log(index);}>\n            竖向内容2\n        </Tab>\n    </Tabset>\n```",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.1.0",
            "example": [
                "\timport React, { Component } from \"react\";\n\t\n\timport Tabset from \"phoenix-ui/lib/tab/Tabset\"\n\timport Tab from \"phoenix-ui/lib/tab/Tab\"\n\timport List from \"phoenix-ui/lib/list\"\n\timport Code from \"./code/code\"\n\t\n\texport default class tab extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t\n\t    clickCallback(index){\n\t        alert(\"测试tabset回调\", \"index: \" + index);\n\t    }\n\t\n\t    clickCallback1(index){\n\t        alert(\"测试tab回调\", \"index: \" + index);\n\t    }\n\t\n\t    render(){\n\t        return(\n\t           <div>\n\t                <h2 className=\"comp-title\">Tabset/Tab</h2>\n\t                <h3 className=\"comp-type\"><strong>Tabset</strong></h3>\n\t                <h3 className=\"comp-type\">index(默认0) 默认选中选项卡的索引值</h3>\n\t                <Tabset index={1}>\n\t                    <Tab heading=\"标题1\">\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tabset-index\" />\n\t\n\t                <h3 className=\"comp-type\">vertical(默认false) 设置选项卡竖排</h3>\n\t                <Tabset vertical>\n\t                    <Tab heading=\"标题1\">\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容1</List.Col>\n\t                            </List.Item>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容1</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        竖向内容2\n\t                    </Tab>\n\t                    <Tab heading=\"标题3\">\n\t                        竖向内容3\n\t                    </Tab>\n\t                </Tabset>\n\t                <br/>\n\t                <Code target=\"tabset-vertical\" />\n\t\n\t                <h3 className=\"comp-type\">width(默认33) 设置vertical之后标题的占比</h3>\n\t                <Tabset vertical width={20}>\n\t                    <Tab heading=\"标题1\">\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容1</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        <List>\n\t                            <List.Item>\n\t                                <List.Col>竖向内容2</List.Col>\n\t                            </List.Item>\n\t                        </List>\n\t                    </Tab>\n\t                </Tabset>\n\t                <br/>\n\t                <Code target=\"tabset-width\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback(Tabset) 点击选项卡的回调函数</h3>\n\t                <Tabset clickCallback={this.clickCallback.bind(this)}>\n\t                    <Tab heading=\"标题1\">\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tabset-clickcallback\" />\n\t\n\t                <h3 className=\"comp-type\"><strong>Tab</strong></h3>\n\t                <h3 className=\"comp-type\">heading 标题</h3>\n\t                <Tabset>\n\t                    <Tab heading=\"Tab heading 1\">\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"Tab heading 2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tab-heading\" />\n\t\n\t                <h3 className=\"comp-type\">clickCallback(Tab) 点击单个选项卡的回调函数</h3>\n\t                <Tabset>\n\t                    <Tab heading=\"标题1\" clickCallback={this.clickCallback1.bind(this)}>\n\t                        横向内容1\n\t                    </Tab>\n\t                    <Tab heading=\"标题2\">\n\t                        横向内容2\n\t                    </Tab>\n\t                </Tabset>\n\t                <Code target=\"tab-clickcallback\" />\n\t           </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/tab"
            ],
            "isApp": true,
            "show": true
        },
        "TextArea": {
            "name": "TextArea",
            "shortname": "TextArea",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "表单组件",
            "namespace": "",
            "file": "src/textarea/index.js",
            "line": 19,
            "description": "多行文本框组件<br/>\n- 可通过valuee设置默认值。 \n- 可通过设置count判断是否显示当前输入字数，需要配合maxLength配置最大输入字数。\n- getValueCallback: 获取当前的输入值。\n\n主要属性和接口：\n- value:默认值 <br/>\n如：`<Textarea value='测试' />`\n- count:是否显示当前输入字数, 默认false不显示, 配合maxLength使用<br/>\n如：`<Textarea count maxLength={150} />`\n- getValueCallback: 获取当前的输入值。<br/>\n如：`<Textarea ref={(textElem)=>{this.textElem=textElem}} />`<br/>\n`this.textElem.getValueCallback();`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.3.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Textarea from \"phoenix-ui/lib/textarea\"\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Code from \"./code/code\"\n\t\n\texport default class textarea extends Component{\n\t\n\t    constructor(props,context){\n\t\n\t        super(props,context);\n\t\n\t        this.state = {\n\t            name:\"\",\n\t            MAX_LENGTH: 100\n\t        };\n\t    }\n\t\n\t    getValue(){\n\t        this.setState({\n\t            value: this.textElem.getValueCallback()\n\t        });\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Textarea</h2>\n\t                <h3 className=\"comp-type\">count(默认false) 是否计字数<br/>count配合maxLength计数</h3>\n\t                <div className=\"content\">\n\t                    <Textarea count maxLength={this.state.MAX_LENGTH} placeholder=\"请输入...\" />\n\t                </div>\n\t                <Code target=\"textarea-count\" />\n\t\n\t                <h3 className=\"comp-type\">value 默认值</h3>\n\t                <div className=\"content\">\n\t                    <Textarea value=\"我是默认值\" placeholder=\"请输入...\" />\n\t                </div>\n\t                <Code target=\"textarea-value\" />\n\t\n\t                <h3 className=\"comp-type\">disabled 不可输入</h3>\n\t                <div className=\"content\">\n\t                    <Textarea value=\"我是默认值\" count maxLength={this.state.MAX_LENGTH} placeholder=\"请输入...\" disabled/>\n\t                </div>\n\t                <Code target=\"textarea-disabled\" />\n\t\n\t                <h3 className=\"comp-type\">getValueCallback 获取数值</h3>\n\t                <div className=\"content\">\n\t                    <Textarea placeholder=\"默认text\" ref={(textElem)=>{this.textElem = textElem}} />\n\t                    <div><Button onClick={this.getValue.bind(this)}>点击获取值</Button> <span style={{float:'right'}}>{this.state.value}</span></div>\n\t                </div>\n\t                <Code target=\"textarea-getvalue\" />\n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "展示"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/textarea"
            ],
            "isApp": true,
            "show": true
        },
        "Toast": {
            "name": "Toast",
            "shortname": "Toast",
            "classitems": [],
            "plugins": [],
            "extensions": [],
            "plugin_for": [],
            "extension_for": [],
            "module": "操作类组件",
            "namespace": "",
            "file": "src/toast/index.js",
            "line": 11,
            "description": "飘字组件<br/>\n- 由于飘字的使用范围可预估, 为方便使用在原组件的基础上更进一步改为函数式的使用方式。\n- 普通信息: `Toast.info(message, duration, callback)`\n- 成功信息: `Toast.success(message, duration, callback)`\n- 失败信息: `Toast.fail(message, duration, callback)`\n- 加载中: `Toast.loading(message, duration, callback)`\n- 移除: `Toast.remove()`\n- 如果不根据设置的时间移除飘字，`duration`设置为false，`Toast.remove()`移除飘字。\n\n示例: <br/>\n- 显示普通飘字, 如:<br/>\n`Toast.info('只显示信息的toast！', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 显示成功信息, 如:<br/>\n`Toast.success('操作成功', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 显示失败信息, 如:<br/>\n`Toast.fail('操作失败', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 显示加载中, 如:<br/>\n`Toast.loading('加载中...', 1000, ()=>{console.log('飘字消失时执行的回调函数');})`\n- 移除飘字, 如:<br/>\n`Toast.remove()`",
            "extends": "Component",
            "is_constructor": 1,
            "since": "0.3.0",
            "example": [
                "\timport React, { Component } from \"react\"\n\t\n\timport Button from \"phoenix-ui/lib/button\"\n\timport Toast from \"phoenix-ui/lib/toast\"\n\timport Code from \"./code/code\"\n\t\n\texport default class toast extends Component{\n\t\n\t    constructor(props,context){\n\t        super(props,context);\n\t    }\n\t\n\t    showToastInfo(){\n\t        Toast.info(\"只显示信息的toast！只显示信息的toast！只显示信息的toast！\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    showToastSuccess(){\n\t        Toast.success(\"操作成功\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    showToastFail(){\n\t        Toast.fail(\"操作失败\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    showToastTip(){\n\t        Toast.tip(\"操作提示\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    showToastLoading(){\n\t        Toast.loading(\"\", 2000, ()=>{\n\t            console.log(\"额外的执行内容\");\n\t        });\n\t    }\n\t\n\t    removeToastLoading(){\n\t        Toast.remove();\n\t    }\n\t\n\t    render(){\n\t        return(\n\t            <div>\n\t                <h2 className=\"comp-title\">Toast</h2>\n\t                <h3 className=\"comp-type\">Toast.info(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastInfo}>info</Button>\n\t                </div>\n\t                <Code target=\"toast-info\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.success(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastSuccess}>success</Button>\n\t                </div>\n\t                <Code target=\"toast-success\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.fail(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastFail}>fail</Button>\n\t                </div>\n\t                <Code target=\"toast-fail\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.tip(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastTip}>tip</Button>\n\t                </div>\n\t                <Code target=\"toast-tip\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.loading(message, duration, callback)</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.showToastLoading}>loading</Button>\n\t                </div>\n\t                <Code target=\"toast-loading\" />\n\t\n\t                <h3 className=\"comp-type\">Toast.remove()<br/>自定义消失的情况：Toast出现函数设置duration为false</h3>\n\t                <div className=\"content\">\n\t                    <Button phSize=\"lg\" onClick={::this.removeToastLoading}>remove</Button>\n\t                </div>\n\t                <Code target=\"toast-remove\" />     \n\t            </div>\n\t        );\n\t    }\n\t}"
            ],
            "exampleTitles": [
                "toast"
            ],
            "exampleUrls": [
                "https://future-team.github.io/phoenix-ui/examples/index.html#/toast"
            ],
            "isApp": true,
            "show": true
        }
    },
    "classitems": [
        {
            "file": "src/accordion/index.js",
            "line": 68,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'accordion'",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/accordion/index.js",
            "line": 75,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/accordion/index.js",
            "line": 81,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/accordion/index.js",
            "line": 88,
            "description": "点击收起展开的回调函数",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/accordion/index.js",
            "line": 94,
            "description": "向下的箭头是否可见， 默认可见",
            "itemtype": "property",
            "name": "hideIcon",
            "type": "Boolean",
            "default": "false",
            "class": "Accordion",
            "module": "操作类组件"
        },
        {
            "file": "src/animate/index.js",
            "line": 44,
            "description": "动画名称,默认fade",
            "itemtype": "property",
            "name": "transitionName",
            "type": "String",
            "default": "'fade'",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/animate/index.js",
            "line": 51,
            "description": "动画进入延迟时间",
            "itemtype": "property",
            "name": "transitionEnterTimeout",
            "type": "Number",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/animate/index.js",
            "line": 57,
            "description": "动画退出延迟时间",
            "itemtype": "property",
            "name": "transitionLeaveTimeout",
            "type": "Number",
            "class": "Animate",
            "module": "辅助组件"
        },
        {
            "file": "src/badge/index.js",
            "line": 28,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'badge'",
            "class": "Badge",
            "module": "标签组件"
        },
        {
            "file": "src/badge/index.js",
            "line": 35,
            "description": "标记颜色[default、primary、warning、danger、info、error、success], 默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "string",
            "default": "'default'",
            "class": "Badge",
            "module": "标签组件"
        },
        {
            "file": "src/button/index.js",
            "line": 41,
            "description": "按钮尺寸[sm、md、lg], 默认为sm",
            "itemtype": "property",
            "name": "phSize",
            "type": "String",
            "default": "'sm'",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 48,
            "description": "按钮颜色[primary、warning、danger、info、error、success、link、gray], 默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "Boolean",
            "default": "'primary'",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 55,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'button'",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 62,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 68,
            "description": "块级显示",
            "itemtype": "property",
            "name": "block",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 75,
            "description": "空背景",
            "itemtype": "property",
            "name": "hollow",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 82,
            "description": "不可点状态",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 89,
            "description": "激活状态",
            "itemtype": "property",
            "name": "active",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 96,
            "description": "icon符号类型",
            "itemtype": "property",
            "name": "phIcon",
            "type": "string",
            "default": "''",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button/index.js",
            "line": 103,
            "description": "icon占位情况，默认占位，设置之后不影响文字居中",
            "itemtype": "property",
            "name": "stable",
            "type": "Boolean",
            "default": "false",
            "class": "Button",
            "module": "基础组件"
        },
        {
            "file": "src/button-group/index.js",
            "line": 50,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'button-group'",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/button-group/index.js",
            "line": 57,
            "description": "默认索引值",
            "itemtype": "property",
            "name": "index",
            "type": "Number",
            "default": "0",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/button-group/index.js",
            "line": 64,
            "description": "是否有自适应宽度，垂直排列等属性，取值为default(用于双按钮)、justify(水平排列)、tacked(垂直排列)、segmente(分割排列)、footer(尾部按钮)",
            "itemtype": "property",
            "name": "phType",
            "type": "String",
            "default": "'default'",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/button-group/index.js",
            "line": 71,
            "description": "按钮被按下后的回调",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "class": "ButtonGroup",
            "module": "基础组件"
        },
        {
            "file": "src/checkbox/index.js",
            "line": 34,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'input'",
            "class": "Checkbox",
            "module": "表单组件"
        },
        {
            "file": "src/checkbox/index.js",
            "line": 41,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Checkbox",
            "module": "表单组件"
        },
        {
            "file": "src/checkbox/index.js",
            "line": 47,
            "description": "展示的文字信息",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "default": "''",
            "class": "Checkbox",
            "module": "表单组件"
        },
        {
            "file": "src/drag/index.js",
            "line": 45,
            "description": "抓取的执行函数,对应TouchStart/TouchMove",
            "itemtype": "method",
            "name": "dragCallback",
            "type": "Function",
            "class": "Drag",
            "module": "辅助组件"
        },
        {
            "file": "src/drag/index.js",
            "line": 51,
            "description": "放开的执行函数,对应TouchEnd",
            "itemtype": "method",
            "name": "dropCallback",
            "type": "Function",
            "class": "Drag",
            "module": "辅助组件"
        },
        {
            "file": "src/grid/Col.js",
            "line": 59,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'col'",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/grid/Col.js",
            "line": 66,
            "description": "占100份的多少份，目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)",
            "itemtype": "property",
            "name": "width",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/grid/Col.js",
            "line": 72,
            "description": "偏移多少，目前支持5-100之间5的倍数、33（1\\3）和66(2\\3)，默认不偏移",
            "itemtype": "property",
            "name": "offset",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/grid/Col.js",
            "line": 78,
            "description": "竖直方向的排列是靠上、居中还是靠下",
            "itemtype": "property",
            "name": "align",
            "type": "Integer",
            "class": "Col",
            "module": "布局组件"
        },
        {
            "file": "src/grid/Grid.js",
            "line": 49,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'grid'",
            "class": "Grid",
            "module": "布局组件"
        },
        {
            "file": "src/grid/Row.js",
            "line": 38,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'row'",
            "class": "Row",
            "module": "布局组件"
        },
        {
            "file": "src/grid/Row.js",
            "line": 45,
            "description": "竖直方向的排列是靠上、居中、靠下、拉伸至父容器最大高度还是基于text的baseline对齐",
            "itemtype": "property",
            "name": "align",
            "type": "String",
            "class": "Row",
            "module": "布局组件"
        },
        {
            "file": "src/icon/index.js",
            "line": 28,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'icon'",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/icon/index.js",
            "line": 35,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "default": "'span'",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/icon/index.js",
            "line": 42,
            "description": "icon符号类型",
            "itemtype": "property",
            "name": "phIcon",
            "type": "string",
            "default": "''",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/icon/index.js",
            "line": 49,
            "description": "按钮尺寸[xs、sm、md、lg、xlg], 默认为sm",
            "itemtype": "property",
            "name": "phSize",
            "type": "String",
            "default": "'sm'",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/icon/index.js",
            "line": 56,
            "description": "按钮颜色[default, primary、warning、danger、info、error、success], 默认default",
            "itemtype": "property",
            "name": "phStyle",
            "type": "Boolean",
            "default": "'default'",
            "class": "Icon",
            "module": "标签组件"
        },
        {
            "file": "src/image/index.js",
            "line": 41,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'image'",
            "class": "Image",
            "module": "基础组件"
        },
        {
            "file": "src/image/index.js",
            "line": 48,
            "description": "图片地址",
            "itemtype": "property",
            "name": "src",
            "type": "String",
            "default": "null",
            "class": "Image",
            "module": "基础组件"
        },
        {
            "file": "src/image/index.js",
            "line": 55,
            "description": "默认图片地址",
            "itemtype": "property",
            "name": "defaultSrc",
            "type": "String",
            "default": "null",
            "class": "Image",
            "module": "基础组件"
        },
        {
            "file": "src/image/index.js",
            "line": 62,
            "description": "图片大小，[default, cover, contain]",
            "itemtype": "property",
            "name": "phSize",
            "type": "String",
            "default": "'default'",
            "class": "Image",
            "module": "基础组件"
        },
        {
            "file": "src/image/index.js",
            "line": 69,
            "description": "是否懒加载",
            "itemtype": "property",
            "name": "lazy",
            "type": "Boolean",
            "default": "false",
            "class": "Image",
            "module": "基础组件"
        },
        {
            "file": "src/image/index.js",
            "line": 76,
            "description": "图片加载完成的回调",
            "itemtype": "property",
            "name": "loadCallback",
            "type": "Function",
            "default": "null",
            "class": "Image",
            "module": "基础组件"
        },
        {
            "file": "src/image-list/index.js",
            "line": 46,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'image-list'",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/image-list/index.js",
            "line": 53,
            "description": "图片列数，默认1列",
            "itemtype": "property",
            "name": "column",
            "type": "Number",
            "default": "1",
            "class": "ImageList",
            "module": "操作类组件"
        },
        {
            "file": "src/input/index.js",
            "line": 50,
            "description": "input类型, 可选[text,search,password], 默认text",
            "itemtype": "property",
            "name": "type",
            "type": "String",
            "default": "'text'",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/input/index.js",
            "line": 57,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'input'",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/input/index.js",
            "line": 64,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/input/index.js",
            "line": 70,
            "description": "是否显示[清除已经输入的内容按钮]，仅适用于text,search,password的类型",
            "itemtype": "property",
            "name": "clear",
            "type": "Boolean",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/input/index.js",
            "line": 76,
            "description": "是否显示[密码是否可见按钮]，仅适用于password的类型",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/input/index.js",
            "line": 82,
            "description": "是否错误",
            "itemtype": "property",
            "name": "error",
            "type": "Boolean",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/input/index.js",
            "line": 88,
            "description": "正则表达式",
            "itemtype": "property",
            "name": "phReg",
            "type": "Object",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/input/index.js",
            "line": 94,
            "description": "icon符号类型",
            "itemtype": "property",
            "name": "phIcon",
            "type": "string",
            "default": "''",
            "class": "Input",
            "module": "表单组件"
        },
        {
            "file": "src/label/index.js",
            "line": 44,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'label'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/label/index.js",
            "line": 51,
            "description": "label类型",
            "itemtype": "property",
            "name": "phLabel",
            "type": "String",
            "default": "''",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/label/index.js",
            "line": 58,
            "description": "label标签大小[sm、md], 默认为sm",
            "itemtype": "property",
            "name": "phSize",
            "type": "string",
            "default": "'sm'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/label/index.js",
            "line": 65,
            "description": "label标签颜色[primary、info、success、calm、light、gray], 默认primary",
            "itemtype": "property",
            "name": "phStyle",
            "type": "string",
            "default": "'primary'",
            "class": "Label",
            "module": "标签组件"
        },
        {
            "file": "src/list/index.js",
            "line": 28,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'list'",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 35,
            "description": "是否能加载更多",
            "itemtype": "property",
            "name": "loading",
            "type": "Boolean",
            "default": "false",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 72,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'list-header'",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 108,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'list-item'",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 115,
            "description": "是否不可用",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 122,
            "description": "是否是输入有误",
            "itemtype": "property",
            "name": "error",
            "type": "Boolean",
            "default": "false",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 129,
            "description": "是否必选项",
            "itemtype": "property",
            "name": "required",
            "type": "Boolean",
            "default": "false",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 136,
            "description": "是否需要右箭头",
            "itemtype": "property",
            "name": "navigate",
            "type": "Boolean",
            "default": "false",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 186,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'list-col'",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 193,
            "description": "是否为标题，表现为仿行内元素",
            "itemtype": "property",
            "name": "heading",
            "type": "Boolean",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/list/index.js",
            "line": 199,
            "description": "是否为右边的项目，表现为内部的元素全部靠右",
            "itemtype": "property",
            "name": "right",
            "type": "Boolean",
            "class": "List",
            "module": "列表组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 42,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-body'",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 49,
            "description": "返回菜单的目标元素",
            "itemtype": "method",
            "name": "getTarget",
            "type": "Function",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 55,
            "description": "菜单位置, 可选[top,left,right,left-full,right-full,full-screen], 默认top",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "default": "'top'",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 62,
            "description": "自定义菜单宽度百分比（限左右）",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "50",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 70,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuBody.js",
            "line": 76,
            "description": "当前选中的项目name，对应item的name属性",
            "itemtype": "property",
            "name": "activeName",
            "type": "String",
            "default": "null",
            "class": "MenuBody",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuHeader.js",
            "line": 35,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-header'",
            "class": "MenuHeader",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 50,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-item'",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 57,
            "description": "icon符号类型",
            "itemtype": "property",
            "name": "phIcon",
            "type": "string",
            "default": "''",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 64,
            "description": "跳转地址",
            "itemtype": "property",
            "name": "href",
            "type": "string",
            "default": "''",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 71,
            "description": "当前项目的唯一标志",
            "itemtype": "property",
            "name": "name",
            "type": "String",
            "default": "null",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuItem.js",
            "line": 78,
            "description": "点击事件的回调函数",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "default": "null",
            "class": "MenuItem",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuList.js",
            "line": 40,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu-list'",
            "class": "MenuList",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/MenuList.js",
            "line": 47,
            "description": "点击事件的回调函数",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "default": "null",
            "class": "MenuList",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/index.js",
            "line": 60,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'menu'",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/index.js",
            "line": 67,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/index.js",
            "line": 73,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "default": "false",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/index.js",
            "line": 80,
            "description": "点击收起展开的回调函数",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/menu/index.js",
            "line": 86,
            "description": "是否滚动吸顶, 默认不吸顶(false); 设置确定的数字从当前距离开始吸顶",
            "itemtype": "property",
            "name": "ceiling",
            "type": "Number",
            "default": "不设置",
            "class": "Menu",
            "module": "菜单组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 51,
            "description": "标题",
            "itemtype": "property",
            "name": "title",
            "type": "String|Element",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 57,
            "description": "内容",
            "itemtype": "property",
            "name": "title",
            "type": "String|Element",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 63,
            "description": "尾部按钮",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 69,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 75,
            "description": "关闭弹框的执行函数",
            "itemtype": "method",
            "name": "closeCallback",
            "type": "Function",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 81,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Alert.js",
            "line": 87,
            "description": "阴影部分是否点击可关闭弹框, 默认传了closeCallback之后可关闭",
            "itemtype": "property",
            "name": "shadowDisabled",
            "type": "Boolean",
            "class": "Alert",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 72,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'dialog'",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 79,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 85,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 91,
            "description": "关闭弹框的执行函数",
            "itemtype": "method",
            "name": "closeCallback",
            "type": "Function",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 97,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Dialog.js",
            "line": 103,
            "description": "阴影部分是否点击可关闭弹框, 默认传了closeCallback之后可关闭",
            "itemtype": "property",
            "name": "shadowDisabled",
            "type": "Boolean",
            "class": "Dialog",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 53,
            "description": "标题",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 59,
            "description": "内容",
            "itemtype": "property",
            "name": "title",
            "type": "String",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 65,
            "description": "尾部按钮",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 71,
            "description": "内容区域文本框",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 77,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 83,
            "description": "关闭弹框的执行函数",
            "itemtype": "method",
            "name": "closeCallback",
            "type": "Function",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 89,
            "description": "点击确定的回调函数",
            "itemtype": "method",
            "name": "confirmCallback",
            "type": "Function",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 95,
            "description": "右上角按钮是否可见, 默认不可见",
            "itemtype": "property",
            "name": "closeButton",
            "type": "Boolean",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/modal/Prompt.js",
            "line": 101,
            "description": "阴影部分是否点击可关闭弹框, 默认传了closeCallback之后可关闭",
            "itemtype": "property",
            "name": "shadowDisabled",
            "type": "Boolean",
            "class": "Prompt",
            "module": "弹出框组件"
        },
        {
            "file": "src/ph-filter/components/FilterCheckbox.js",
            "line": 55,
            "description": "默认选中的侧边栏的索引值",
            "itemtype": "property",
            "name": "index",
            "type": "Number",
            "default": "0",
            "class": "FilterCheckbox",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterCheckbox.js",
            "line": 62,
            "description": "选中的id字符串，逗号隔开",
            "itemtype": "property",
            "name": "choose",
            "type": "String",
            "default": "-1",
            "class": "FilterCheckbox",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterCheckbox.js",
            "line": 69,
            "description": "按钮数组",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "FilterCheckbox",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterContainer.js",
            "line": 85,
            "description": "默认展开筛选的索引，默认－1，即都不展开",
            "itemtype": "property",
            "name": "index",
            "type": "Number",
            "default": "-1",
            "class": "FilterContainer",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterContainer.js",
            "line": 92,
            "description": "是否隐藏头部",
            "itemtype": "property",
            "name": "hideCat",
            "type": "Boolean",
            "default": "false",
            "class": "FilterContainer",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterContainer.js",
            "line": 99,
            "description": "有效选择触发的回调函数",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "class": "FilterContainer",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterItem.js",
            "line": 44,
            "description": "item项的唯一标示，必填项",
            "itemtype": "property",
            "name": "itemKey",
            "type": "String|Number",
            "class": "FilterItem",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterItem.js",
            "line": 50,
            "description": "状态",
            "itemtype": "property",
            "name": "disabled",
            "type": "Boolean",
            "default": "false",
            "class": "FilterItem",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterItemGroup.js",
            "line": 68,
            "description": "当使用FilterPanel(支持二级选择)时，itemGroup的label属性被用来渲染一级选项，item自身用来渲染二级",
            "itemtype": "property",
            "name": "label",
            "type": "String | Element",
            "class": "FilterItemGroup",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterItemGroup.js",
            "line": 74,
            "description": "使用多条件筛选时，需要传递mainKey",
            "itemtype": "property",
            "name": "mainKey",
            "type": "String | Number",
            "class": "FilterItemGroup",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanel.js",
            "line": 52,
            "description": "panel下选中的item的key、value组成的对象，用于设置该panel初始状态下选中的item项",
            "itemtype": "property",
            "name": "selected",
            "type": "Object 如{key:'ljz',value:'陆家嘴'}",
            "class": "FilterPanel",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanel.js",
            "line": 61,
            "description": "当不设置panel的选中项时（不选择任何item），可以设置一个默认字符展示在filter上",
            "itemtype": "property",
            "name": "default",
            "type": "String",
            "class": "FilterPanel",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanel.js",
            "line": 67,
            "description": "panel是否为只读模式",
            "itemtype": "property",
            "name": "readOnly",
            "type": "Boolean",
            "class": "FilterPanel",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanel.js",
            "line": 73,
            "description": "按钮数组",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "FilterPanel",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanel.js",
            "line": 79,
            "description": "主菜单默认选中项",
            "itemtype": "property",
            "name": "index",
            "type": "Number",
            "default": "0",
            "class": "FilterPanel",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanelSimple.js",
            "line": 55,
            "description": "panel下选中的item的key、value组成的对象，用于设置该panel初始状态下选中的item项",
            "itemtype": "property",
            "name": "selected",
            "type": "Object 如{key:'ljz',value:'陆家嘴'}",
            "class": "FilterPanelSimple",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanelSimple.js",
            "line": 64,
            "description": "当不设置panel的选中项时（不选择任何item），可以设置一个默认字符展示在filter上",
            "itemtype": "property",
            "name": "default",
            "type": "String",
            "class": "FilterPanelSimple",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanelSimple.js",
            "line": 70,
            "description": "panel是否为只读模式",
            "itemtype": "property",
            "name": "readOnly",
            "type": "Boolean",
            "class": "FilterPanelSimple",
            "module": "筛选控件"
        },
        {
            "file": "src/ph-filter/components/FilterPanelSimple.js",
            "line": 76,
            "description": "按钮数组",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "FilterPanelSimple",
            "module": "筛选控件"
        },
        {
            "file": "src/popover/index.js",
            "line": 50,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'popover'",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/popover/index.js",
            "line": 57,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/popover/index.js",
            "line": 63,
            "description": "返回气泡的目标元素",
            "itemtype": "method",
            "name": "getTarget",
            "type": "Function",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/popover/index.js",
            "line": 69,
            "description": "气泡的位置,默认bottom",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/popover/index.js",
            "line": 75,
            "description": "气泡距离点击物的位置,默认5",
            "itemtype": "property",
            "name": "distance",
            "type": "Number",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/popover/index.js",
            "line": 81,
            "description": "气泡显隐时可执行的额外函数,自定义",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "class": "Popover",
            "module": "提示组件"
        },
        {
            "file": "src/popup/index.js",
            "line": 54,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'popup'",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/popup/index.js",
            "line": 61,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/popup/index.js",
            "line": 67,
            "description": "是否可见标识",
            "itemtype": "property",
            "name": "visible",
            "type": "Boolean",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/popup/index.js",
            "line": 73,
            "description": "弹层的位置,默认top",
            "itemtype": "property",
            "name": "align",
            "type": "String",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/popup/index.js",
            "line": 79,
            "description": "关闭的执行函数",
            "itemtype": "method",
            "name": "closeCallback",
            "type": "Function",
            "class": "Popup",
            "module": "操作类组件"
        },
        {
            "file": "src/pullup/index.js",
            "line": 50,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'pullup'",
            "class": "PullUp",
            "module": "操作类组件"
        },
        {
            "file": "src/pullup/index.js",
            "line": 57,
            "description": "加载更多的模式，可选[auto,buttons], 默认auto",
            "itemtype": "property",
            "name": "mode",
            "type": "String",
            "default": "'auto'",
            "class": "PullUp",
            "module": "操作类组件"
        },
        {
            "file": "src/pullup/index.js",
            "line": 64,
            "description": "加载状态：0初始状态, 1加载中, 2数据加载成功, 3数据加载失败, 4没有更多",
            "itemtype": "property",
            "name": "status",
            "type": "Number",
            "default": "0",
            "class": "PullUp",
            "module": "操作类组件"
        },
        {
            "file": "src/pullup/index.js",
            "line": 71,
            "description": "加载5个状态的文字描述，默认['加载更多','','加载成功','加载失败','没有更多']",
            "itemtype": "property",
            "name": "tips",
            "type": "Array",
            "default": "['加载更多','加载中','加载成功','加载失败','没有更多']",
            "class": "PullUp",
            "module": "操作类组件"
        },
        {
            "file": "src/pullup/index.js",
            "line": 78,
            "description": "按钮颜色，默认primary",
            "itemtype": "property",
            "name": "btnStyle",
            "type": "Array",
            "default": "'primary'",
            "class": "PullUp",
            "module": "操作类组件"
        },
        {
            "file": "src/pullup/index.js",
            "line": 85,
            "description": "滑到底部自动加载的回调函数，用户在该函数内自定义请求",
            "itemtype": "method",
            "name": "loadCallback",
            "type": "Function",
            "default": "null",
            "class": "PullUp",
            "module": "操作类组件"
        },
        {
            "file": "src/radio/index.js",
            "line": 34,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'input'",
            "class": "Radio",
            "module": "表单组件"
        },
        {
            "file": "src/radio/index.js",
            "line": 41,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Radio",
            "module": "表单组件"
        },
        {
            "file": "src/radio/index.js",
            "line": 47,
            "description": "展示的文字信息",
            "itemtype": "property",
            "name": "label",
            "type": "String",
            "default": "''",
            "class": "Radio",
            "module": "表单组件"
        },
        {
            "file": "src/search-bar/index.js",
            "line": 41,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'search-bar'",
            "class": "SearchBar",
            "module": "搜索组件"
        },
        {
            "file": "src/search-bar/index.js",
            "line": 48,
            "description": "按钮文案",
            "itemtype": "property",
            "name": "buttonText",
            "type": "String",
            "default": "'取消'",
            "class": "SearchBar",
            "module": "搜索组件"
        },
        {
            "file": "src/search-bar/index.js",
            "line": 55,
            "description": "输入框占位符",
            "itemtype": "property",
            "name": "placeholder",
            "type": "String",
            "default": "'搜索'",
            "class": "SearchBar",
            "module": "搜索组件"
        },
        {
            "file": "src/search-bar/index.js",
            "line": 62,
            "description": "聚焦的回调",
            "itemtype": "method",
            "name": "focusCallback",
            "type": "Function",
            "class": "SearchBar",
            "module": "搜索组件"
        },
        {
            "file": "src/search-bar/index.js",
            "line": 68,
            "description": "失焦的回调",
            "itemtype": "method",
            "name": "blurCallback",
            "type": "Function",
            "class": "SearchBar",
            "module": "搜索组件"
        },
        {
            "file": "src/search-bar/index.js",
            "line": 74,
            "description": "搜索的回调",
            "itemtype": "method",
            "name": "queryCallback",
            "type": "Function",
            "class": "SearchBar",
            "module": "搜索组件"
        },
        {
            "file": "src/search-bar/index.js",
            "line": 80,
            "description": "点击按钮的回调",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "class": "SearchBar",
            "module": "搜索组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 54,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'slider'",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 61,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 67,
            "description": "初始进程,默认0",
            "itemtype": "property",
            "name": "progress",
            "type": "String",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 73,
            "description": "进程提示的位置,默认top",
            "itemtype": "property",
            "name": "placement",
            "type": "String",
            "default": "'top'",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 80,
            "description": "范围，默认0-100，可传固定范围的数组如：[25,50]",
            "itemtype": "property",
            "name": "range",
            "type": "Array",
            "default": "[0,100]",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 87,
            "description": "是否在进度条前后显示范围",
            "itemtype": "property",
            "name": "showRange",
            "type": "Boolean",
            "default": "false",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 94,
            "description": "显示提示的模式，可选[default,tooltip]",
            "itemtype": "property",
            "name": "tipMode",
            "type": "String",
            "default": "'default'",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 101,
            "description": "每次移动的固定距离，默认1",
            "itemtype": "property",
            "name": "duration",
            "type": "Number",
            "default": "1",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 108,
            "description": "初始及松开按钮时是否显示tooltip",
            "itemtype": "property",
            "name": "tipStay",
            "type": "Boolean",
            "default": "false",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/slider/index.js",
            "line": 115,
            "description": "改变进程时的回调函数",
            "itemtype": "method",
            "name": "slideCallback",
            "type": "Function",
            "class": "Slider",
            "module": "操作类组件"
        },
        {
            "file": "src/star/index.js",
            "line": 40,
            "description": "星级评价分数",
            "itemtype": "property",
            "name": "rate",
            "type": "number",
            "default": "默认为0，最高50",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/star/index.js",
            "line": 47,
            "description": "星星大小",
            "itemtype": "property",
            "name": "phSize",
            "type": "String",
            "default": "'sm'",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/star/index.js",
            "line": 54,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'star'",
            "class": "Star",
            "module": "基础组件"
        },
        {
            "file": "src/steps/index.js",
            "line": 36,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'badge'",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/steps/index.js",
            "line": 43,
            "description": "是否为只读模式（只读模式不会触发点击回调），默认为false",
            "itemtype": "property",
            "name": "readOnly",
            "type": "Boolean",
            "default": "false",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/steps/index.js",
            "line": 50,
            "description": "steps内容数组，把每一步的文案放入数组中作为list的值",
            "itemtype": "property",
            "name": "list",
            "type": "Array",
            "default": "[]",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/steps/index.js",
            "line": 57,
            "description": "当前处于第几步，默认为0，也就是说所有的步骤都没有开始，如果到第一步的话将index设置为1即可，注意index不可以超过list数组长度",
            "itemtype": "property",
            "name": "index",
            "type": "Number",
            "default": "0",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/steps/index.js",
            "line": 64,
            "description": "点击每一步的回调，function(str,index){} str为步骤名称，index为第几步（从1开始计数）",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "default": "null",
            "class": "Steps",
            "module": "操作类组件"
        },
        {
            "file": "src/swipe/index.js",
            "line": 41,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'swipe'",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/swipe/index.js",
            "line": 48,
            "description": "标签tagName",
            "itemtype": "property",
            "name": "componentTag",
            "type": "String",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/swipe/index.js",
            "line": 54,
            "description": "按钮组",
            "itemtype": "property",
            "name": "buttons",
            "type": "Array",
            "class": "Swipe",
            "module": "操作类组件"
        },
        {
            "file": "src/switch/index.js",
            "line": 31,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'switch'",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/switch/index.js",
            "line": 38,
            "description": "默认开关值",
            "itemtype": "property",
            "name": "defaultChecked",
            "type": "Boolean",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/switch/index.js",
            "line": 44,
            "description": "开关值",
            "itemtype": "property",
            "name": "checked",
            "type": "Boolean",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/switch/index.js",
            "line": 50,
            "description": "更改值时触发的回调",
            "itemtype": "event",
            "name": "onChange",
            "type": "Function",
            "class": "Switch",
            "module": "表单组件"
        },
        {
            "file": "src/tab/Tab.js",
            "line": 38,
            "description": "选项卡的标题文字，默认为‘tab’",
            "itemtype": "property",
            "name": "heading",
            "type": "String",
            "default": "'tab'",
            "class": "Tab",
            "module": "选项卡"
        },
        {
            "file": "src/tab/Tab.js",
            "line": 45,
            "description": "点击事件的回调函数",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "default": "null",
            "class": "Tab",
            "module": "选项卡"
        },
        {
            "file": "src/tab/Tabset.js",
            "line": 69,
            "description": "指定默认选中的选项卡，默认为0",
            "itemtype": "property",
            "name": "index",
            "type": "Number",
            "default": "0",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/tab/Tabset.js",
            "line": 76,
            "description": "是否竖排",
            "itemtype": "property",
            "name": "vertical",
            "type": "Boolean",
            "default": "false || null",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/tab/Tabset.js",
            "line": 83,
            "description": "设置选项卡头部的宽度，只有竖排的情况下才起作用",
            "itemtype": "property",
            "name": "width",
            "type": "Number",
            "default": "'20'",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/tab/Tabset.js",
            "line": 90,
            "description": "点击事件的回调函数,返回当前选中项",
            "itemtype": "method",
            "name": "clickCallback",
            "type": "Function",
            "default": "null",
            "class": "Tabset",
            "module": "选项卡"
        },
        {
            "file": "src/textarea/index.js",
            "line": 46,
            "description": "样式前缀",
            "itemtype": "property",
            "name": "classPrefix",
            "type": "String",
            "default": "'textarea'",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/textarea/index.js",
            "line": 53,
            "description": "初始值",
            "itemtype": "property",
            "name": "value",
            "type": "String",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/textarea/index.js",
            "line": 59,
            "description": "是否显示输入计数",
            "itemtype": "property",
            "name": "count",
            "type": "Boolean",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/textarea/index.js",
            "line": 65,
            "description": "可输入的总长度",
            "itemtype": "property",
            "name": "maxLength",
            "type": "Number",
            "class": "TextArea",
            "module": "表单组件"
        },
        {
            "file": "src/utils/ClassNameMixin.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/MethodMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/PropertyMixin.js",
            "line": 1,
            "description": "Created by mac on 16/1/3.",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/Tool.js",
            "line": 1,
            "description": "Created by mac on 16/11/28.",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 1,
            "description": "Created by mac on 15/9/7.",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 11,
            "description": "状态",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 62,
            "description": "颜色",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 76,
            "description": "form列表相关",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/constants.js",
            "line": 86,
            "description": "tab",
            "class": "",
            "module": "操作类组件"
        },
        {
            "file": "src/utils/extend.js",
            "line": 5,
            "description": "A recursive merge between two objects.",
            "params": [
                {
                    "name": "base",
                    "description": "- the object whose properties are to be overwritten. It\n                  should be either the root level or some nested level."
                },
                {
                    "name": "override",
                    "description": "- an object containing properties to be overwritten. It\n                  should have the same structure as the object object."
                }
            ],
            "class": "",
            "module": "操作类组件"
        }
    ],
    "warnings": [
        {
            "message": "unknown tag: demo",
            "line": " src/accordion/index.js:23"
        },
        {
            "message": "unknown tag: show",
            "line": " src/accordion/index.js:23"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/animate/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/animate/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/badge/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/badge/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/button/index.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/button/index.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/button-group/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/button-group/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/checkbox/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/checkbox/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/drag/index.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/drag/index.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/grid/Col.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/grid/Col.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/grid/Grid.js:19"
        },
        {
            "message": "unknown tag: show",
            "line": " src/grid/Grid.js:19"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/grid/Row.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/grid/Row.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/icon/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/icon/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/image/index.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/image/index.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/image-list/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/image-list/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/input/index.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/input/index.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/label/index.js:18"
        },
        {
            "message": "unknown tag: show",
            "line": " src/label/index.js:18"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/list/index.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/list/index.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuBody.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuBody.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuHeader.js:7"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuHeader.js:7"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuItem.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuItem.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/MenuList.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/MenuList.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/menu/index.js:26"
        },
        {
            "message": "unknown tag: show",
            "line": " src/menu/index.js:26"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/modal/Alert.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/modal/Alert.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/modal/Dialog.js:21"
        },
        {
            "message": "unknown tag: show",
            "line": " src/modal/Dialog.js:21"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/modal/Prompt.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/modal/Prompt.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ph-filter/components/FilterCheckbox.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ph-filter/components/FilterCheckbox.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ph-filter/components/FilterContainer.js:21"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ph-filter/components/FilterContainer.js:21"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ph-filter/components/FilterItem.js:6"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ph-filter/components/FilterItem.js:6"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ph-filter/components/FilterItemGroup.js:4"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ph-filter/components/FilterItemGroup.js:4"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ph-filter/components/FilterPanel.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ph-filter/components/FilterPanel.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/ph-filter/components/FilterPanelSimple.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/ph-filter/components/FilterPanelSimple.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/popover/index.js:12"
        },
        {
            "message": "unknown tag: show",
            "line": " src/popover/index.js:12"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/popup/index.js:9"
        },
        {
            "message": "unknown tag: show",
            "line": " src/popup/index.js:9"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/pullup/index.js:13"
        },
        {
            "message": "unknown tag: show",
            "line": " src/pullup/index.js:13"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/radio/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/radio/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/search-bar/index.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/search-bar/index.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/slider/index.js:10"
        },
        {
            "message": "unknown tag: show",
            "line": " src/slider/index.js:10"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/star/index.js:18"
        },
        {
            "message": "unknown tag: show",
            "line": " src/star/index.js:18"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/steps/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/steps/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/swipe/index.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/swipe/index.js:11"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/switch/index.js:8"
        },
        {
            "message": "unknown tag: show",
            "line": " src/switch/index.js:8"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/tab/Tab.js:5"
        },
        {
            "message": "unknown tag: show",
            "line": " src/tab/Tab.js:5"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/tab/Tabset.js:19"
        },
        {
            "message": "unknown tag: show",
            "line": " src/tab/Tabset.js:19"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/textarea/index.js:19"
        },
        {
            "message": "unknown tag: show",
            "line": " src/textarea/index.js:19"
        },
        {
            "message": "unknown tag: demo",
            "line": " src/toast/index.js:11"
        },
        {
            "message": "unknown tag: show",
            "line": " src/toast/index.js:11"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/ClassNameMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/MethodMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/1/3.",
            "line": " src/utils/PropertyMixin.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 16/11/28.",
            "line": " src/utils/Tool.js:1"
        },
        {
            "message": "Missing item type\nCreated by mac on 15/9/7.",
            "line": " src/utils/constants.js:1"
        },
        {
            "message": "Missing item type\n状态",
            "line": " src/utils/constants.js:11"
        },
        {
            "message": "Missing item type\n颜色",
            "line": " src/utils/constants.js:62"
        },
        {
            "message": "Missing item type\nform列表相关",
            "line": " src/utils/constants.js:76"
        },
        {
            "message": "Missing item type\ntab",
            "line": " src/utils/constants.js:86"
        },
        {
            "message": "Missing item type\nA recursive merge between two objects.",
            "line": " src/utils/extend.js:5"
        }
    ]
}